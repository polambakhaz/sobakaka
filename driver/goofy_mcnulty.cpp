/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/goofy_mcnulty.cpp
 * Seed:      3175143570
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
#pragma pack(push)
#pragma pack(1)
struct S0 {
   const unsigned f0 : 23;
   signed f1 : 16;
   unsigned f2 : 18;
   volatile unsigned f3 : 22;
   unsigned f4 : 13;
   unsigned f5 : 16;
   unsigned f6 : 14;
   volatile int16_t  f7;
   volatile signed f8 : 18;
   unsigned f9 : 18;
};
#pragma pack(pop)

/* --- GLOBAL VARIABLES --- */
static int32_t g_2[9][6][3] = {{{(-1L),(-1L),0x69161D59L},{0x45CB81ECL,0x593C8699L,0x6160CBEBL},{0x141A9C21L,3L,0L},{0xA0D018D3L,0x12A83A0FL,0L},{0x6160CBEBL,0L,0L},{(-1L),0xD0357257L,0L}},{{0L,0x08421705L,0x6160CBEBL},{(-1L),1L,0x69161D59L},{0x21EC2184L,0x12A83A0FL,3L},{0xBEC5EC62L,1L,0x3F0244C3L},{(-1L),0x08421705L,0x8039D6B9L},{1L,0xD0357257L,0x6160CBEBL}},{{0x12A83A0FL,0L,0x6C849023L},{0x12A83A0FL,0x12A83A0FL,(-1L)},{1L,3L,1L},{(-1L),(-1L),0x08421705L},{0L,0x21EC2184L,0x69161D59L},{1L,0xBEC5EC62L,0x08421705L}},{{3L,(-1L),0x45CB81ECL},{(-8L),1L,0xBEC5EC62L},{0xBEC5EC62L,0x12A83A0FL,(-1L)},{0x69161D59L,0x12A83A0FL,0x69161D59L},{0x3F0244C3L,1L,(-1L)},{0L,(-1L),1L}},{{0x6C849023L,0xBEC5EC62L,0L},{0xBEC5EC62L,0x21EC2184L,0xD0357257L},{0x6C849023L,(-1L),0x69161D59L},{0L,0L,0x593C8699L},{0x3F0244C3L,(-1L),0x6160CBEBL},{0x69161D59L,0x6160CBEBL,0x6160CBEBL}},{{0xBEC5EC62L,0xA0D018D3L,0x593C8699L},{(-8L),0x141A9C21L,0x69161D59L},{3L,0x45CB81ECL,0xD0357257L},{1L,(-1L),0L},{0L,0x45CB81ECL,1L},{0xBEC5EC62L,0x141A9C21L,(-1L)}},{{0x8039D6B9L,0xA0D018D3L,0x69161D59L},{(-1L),0x6160CBEBL,(-1L)},{(-1L),(-1L),0xBEC5EC62L},{0x8039D6B9L,0L,0x45CB81ECL},{0xBEC5EC62L,(-1L),0x08421705L},{0L,0x21EC2184L,0x69161D59L}},{{1L,0xBEC5EC62L,0x08421705L},{3L,(-1L),0x45CB81ECL},{(-8L),1L,0xBEC5EC62L},{0xBEC5EC62L,0x12A83A0FL,(-1L)},{0x69161D59L,0x12A83A0FL,0x69161D59L},{0x3F0244C3L,1L,(-1L)}},{{0L,(-1L),1L},{0x6C849023L,0xBEC5EC62L,0L},{0xBEC5EC62L,0x21EC2184L,0xD0357257L},{0x6C849023L,(-1L),0x69161D59L},{0L,0L,0x593C8699L},{0x3F0244C3L,(-1L),0x6160CBEBL}}};
static int32_t g_5 = 0x758B39D2L;
static uint32_t g_43 = 0xD58E56A9L;
static uint32_t g_54 = 0xD309061EL;
static struct S0 g_55 = {343,19,475,396,57,114,26,0L,-169,492};/* VOLATILE GLOBAL g_55 */
static int32_t g_60 = 1L;
static uint32_t g_85 = 0UL;
static int32_t g_90 = 7L;
static volatile uint8_t g_92 = 0x06L;/* VOLATILE GLOBAL g_92 */
static uint32_t g_96[3] = {0xCC66F1EAL,0xCC66F1EAL,0xCC66F1EAL};
static int32_t g_119[1][6] = {{7L,7L,7L,7L,7L,7L}};
static uint64_t g_148 = 7UL;
static int8_t g_151[1][5][9] = {{{(-7L),0xEDL,(-1L),(-7L),0x5DL,(-1L),(-1L),0x5DL,(-7L)},{(-7L),2L,(-7L),(-1L),0L,(-1L),(-6L),(-6L),(-1L)},{(-1L),0xEDL,(-7L),0xEDL,(-1L),(-7L),0x5DL,(-1L),(-1L)},{0xEDL,0x2BL,(-1L),(-1L),(-1L),0x2BL,0xEDL,0L,0x13L},{(-6L),0x13L,0xEDL,(-7L),0L,(-7L),0xEDL,0x13L,(-6L)}}};
static int16_t g_152[6][2] = {{(-1L),0xFF48L},{0xFF48L,(-1L)},{0xFF48L,0xFF48L},{(-1L),0xFF48L},{0xFF48L,(-1L)},{0xFF48L,0xFF48L}};
static int8_t g_182 = 0x0DL;
static int8_t *g_195 = &g_151[0][4][8];
static int32_t *g_199 = &g_119[0][1];
static int32_t ** const  volatile g_198 = &g_199;/* VOLATILE GLOBAL g_198 */
static uint32_t g_224 = 9UL;
static uint32_t *g_223[6][8] = {{&g_96[0],&g_96[0],&g_96[0],&g_54,&g_54,&g_96[0],&g_96[0],&g_96[0]},{&g_224,&g_96[0],&g_96[0],&g_96[0],&g_54,&g_54,&g_96[0],&g_96[0]},{&g_54,&g_54,&g_96[0],&g_96[0],&g_96[0],&g_54,&g_54,&g_96[0]},{(void*)0,&g_96[0],&g_96[0],(void*)0,&g_224,(void*)0,&g_96[0],&g_96[0]},{&g_96[0],&g_224,&g_96[0],&g_96[0],&g_224,&g_96[0],&g_224,&g_96[0]},{(void*)0,&g_224,(void*)0,&g_96[0],&g_96[0],(void*)0,&g_224,(void*)0}};
static uint8_t g_280 = 0xA1L;
static uint8_t g_309 = 0x16L;
static volatile int32_t g_329 = 0x2E09EF83L;/* VOLATILE GLOBAL g_329 */
static volatile struct S0 g_371[9][5] = {{{18,171,192,53,12,84,4,-8L,-123,7},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1911,35,414,1593,65,63,3,-7L,-43,505},{234,-255,171,309,52,99,29,-7L,-244,57},{95,76,310,1902,6,10,34,0x6B44L,-142,312}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{234,-255,171,309,52,99,29,-7L,-244,57},{1911,35,414,1593,65,63,3,-7L,-43,505},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{18,171,192,53,12,84,4,-8L,-123,7}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1318,152,371,1113,77,200,117,0L,2,210},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{95,76,310,1902,6,10,34,0x6B44L,-142,312}},{{18,171,192,53,12,84,4,-8L,-123,7},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1911,35,414,1593,65,63,3,-7L,-43,505},{234,-255,171,309,52,99,29,-7L,-244,57},{95,76,310,1902,6,10,34,0x6B44L,-142,312}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{234,-255,171,309,52,99,29,-7L,-244,57},{1911,35,414,1593,65,63,3,-7L,-43,505},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{18,171,192,53,12,84,4,-8L,-123,7}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1318,152,371,1113,77,200,117,0L,2,210},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{95,76,310,1902,6,10,34,0x6B44L,-142,312}},{{18,171,192,53,12,84,4,-8L,-123,7},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1911,35,414,1593,65,63,3,-7L,-43,505},{234,-255,171,309,52,99,29,-7L,-244,57},{95,76,310,1902,6,10,34,0x6B44L,-142,312}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{234,-255,171,309,52,99,29,-7L,-244,57},{1911,35,414,1593,65,63,3,-7L,-43,505},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{18,171,192,53,12,84,4,-8L,-123,7}},{{95,76,310,1902,6,10,34,0x6B44L,-142,312},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{1318,152,371,1113,77,200,117,0L,2,210},{1968,11,481,136,84,255,102,0xC42CL,-5,508},{95,76,310,1902,6,10,34,0x6B44L,-142,312}}};
static volatile int64_t g_383[9][4][2] = {{{(-1L),1L},{0x40F7CF134C2DFF2ELL,0x516B4FDA9A762BC1LL},{(-6L),(-1L)},{(-1L),(-1L)}},{{(-6L),0x516B4FDA9A762BC1LL},{0x40F7CF134C2DFF2ELL,1L},{(-1L),0x89A4E89D2B46AF86LL},{(-8L),0x516B4FDA9A762BC1LL}},{{(-8L),0x89A4E89D2B46AF86LL},{(-1L),1L},{0x40F7CF134C2DFF2ELL,0x516B4FDA9A762BC1LL},{(-6L),(-1L)}},{{(-1L),(-1L)},{(-6L),0x516B4FDA9A762BC1LL},{0x40F7CF134C2DFF2ELL,1L},{(-1L),0x89A4E89D2B46AF86LL}},{{(-8L),0x516B4FDA9A762BC1LL},{(-8L),0x89A4E89D2B46AF86LL},{(-1L),1L},{0x40F7CF134C2DFF2ELL,0x516B4FDA9A762BC1LL}},{{(-6L),(-1L)},{(-1L),(-1L)},{(-6L),0x516B4FDA9A762BC1LL},{0x40F7CF134C2DFF2ELL,1L}},{{(-1L),0x89A4E89D2B46AF86LL},{(-8L),0x516B4FDA9A762BC1LL},{(-8L),0x89A4E89D2B46AF86LL},{(-1L),1L}},{{0x40F7CF134C2DFF2ELL,0x516B4FDA9A762BC1LL},{(-6L),(-1L)},{(-1L),(-1L)},{(-6L),0x516B4FDA9A762BC1LL}},{{0x40F7CF134C2DFF2ELL,1L},{(-1L),0x89A4E89D2B46AF86LL},{(-8L),0x516B4FDA9A762BC1LL},{(-8L),0x89A4E89D2B46AF86LL}}};
static volatile int64_t * volatile g_382 = &g_383[0][3][1];/* VOLATILE GLOBAL g_382 */
static int32_t ** volatile g_390[1][5] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
static struct S0 *g_413 = (void*)0;
static struct S0 ** volatile g_412 = &g_413;/* VOLATILE GLOBAL g_412 */
static uint32_t g_420 = 0xB8406B6DL;
static struct S0 g_442[5] = {{2619,242,47,1631,77,133,13,0xA33CL,49,67},{2619,242,47,1631,77,133,13,0xA33CL,49,67},{2619,242,47,1631,77,133,13,0xA33CL,49,67},{2619,242,47,1631,77,133,13,0xA33CL,49,67},{2619,242,47,1631,77,133,13,0xA33CL,49,67}};
static volatile int16_t g_468 = 0x1643L;/* VOLATILE GLOBAL g_468 */
static volatile uint64_t ** volatile *g_483 = (void*)0;
static uint32_t g_484 = 0UL;
static uint16_t g_501 = 65531UL;
static uint16_t *g_509 = (void*)0;
static uint16_t g_511 = 1UL;
static int32_t ** volatile g_517 = &g_199;/* VOLATILE GLOBAL g_517 */
static int32_t ** volatile g_518 = &g_199;/* VOLATILE GLOBAL g_518 */
static uint64_t *g_526 = &g_148;
static uint64_t **g_525 = &g_526;
static uint64_t ***g_524 = &g_525;
static struct S0 g_570 = {128,-163,183,726,6,137,70,0x5335L,-493,269};/* VOLATILE GLOBAL g_570 */
static const uint64_t *g_579 = (void*)0;
static const uint64_t **g_578[7][1][3] = {{{&g_579,&g_579,&g_579}},{{&g_579,&g_579,&g_579}},{{&g_579,&g_579,&g_579}},{{(void*)0,&g_579,&g_579}},{{&g_579,&g_579,&g_579}},{{(void*)0,&g_579,(void*)0}},{{&g_579,&g_579,&g_579}}};
static const uint64_t ***g_577[1] = {&g_578[4][0][0]};
static volatile struct S0 g_644 = {1869,-133,192,1686,68,103,111,0x3A64L,509,373};/* VOLATILE GLOBAL g_644 */
static volatile int32_t g_673 = 0x0B17DB7EL;/* VOLATILE GLOBAL g_673 */
static int8_t **g_697[3][6][3] = {{{&g_195,&g_195,&g_195},{&g_195,(void*)0,&g_195},{&g_195,&g_195,&g_195},{(void*)0,(void*)0,&g_195},{&g_195,&g_195,&g_195},{&g_195,&g_195,&g_195}},{{&g_195,&g_195,&g_195},{(void*)0,&g_195,&g_195},{&g_195,(void*)0,&g_195},{&g_195,&g_195,&g_195},{&g_195,(void*)0,&g_195},{&g_195,&g_195,&g_195}},{{&g_195,(void*)0,&g_195},{&g_195,&g_195,(void*)0},{&g_195,&g_195,&g_195},{&g_195,&g_195,&g_195},{&g_195,&g_195,&g_195},{&g_195,(void*)0,(void*)0}}};
static int8_t **g_698 = &g_195;
static struct S0 g_715[9][2] = {{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}},{{2446,110,46,347,36,126,127,0x9F7AL,267,102},{1579,-37,192,530,1,175,108,-8L,-254,137}}};
static struct S0 g_737 = {1678,237,131,32,6,226,116,0xA77FL,480,481};/* VOLATILE GLOBAL g_737 */
static const struct S0 g_740 = {1508,210,283,1851,5,234,12,0x3240L,-231,486};/* VOLATILE GLOBAL g_740 */
static const struct S0 g_741 = {1425,140,35,1575,48,178,116,8L,-77,185};/* VOLATILE GLOBAL g_741 */
static const struct S0 g_742 = {2288,-25,64,293,24,247,116,-6L,459,275};/* VOLATILE GLOBAL g_742 */
static struct S0 g_786 = {870,153,228,901,54,85,67,0xF2E2L,389,254};/* VOLATILE GLOBAL g_786 */
static int32_t * volatile g_847 = (void*)0;/* VOLATILE GLOBAL g_847 */
static int32_t * volatile g_849 = &g_90;/* VOLATILE GLOBAL g_849 */
static int32_t ** volatile g_892 = &g_199;/* VOLATILE GLOBAL g_892 */
static volatile uint8_t g_899 = 0x0BL;/* VOLATILE GLOBAL g_899 */
static int32_t * volatile g_902[4][6][2] = {{{&g_60,&g_60},{&g_90,&g_90},{&g_60,&g_60},{&g_90,&g_2[2][1][0]},{(void*)0,&g_90},{&g_90,(void*)0}},{{&g_60,&g_5},{&g_60,(void*)0},{&g_90,&g_90},{(void*)0,&g_2[2][1][0]},{&g_90,&g_60},{&g_60,&g_90}},{{&g_90,&g_60},{&g_60,&g_90},{&g_2[2][1][0],(void*)0},{&g_90,&g_90},{(void*)0,&g_60},{&g_5,&g_60}},{{(void*)0,&g_90},{&g_90,(void*)0},{&g_2[2][1][0],&g_90},{&g_60,&g_60},{&g_90,&g_90},{&g_60,&g_60}}};
static int32_t * volatile g_903 = &g_90;/* VOLATILE GLOBAL g_903 */
static volatile int16_t * volatile g_939 = &g_442[0].f7;/* VOLATILE GLOBAL g_939 */
static volatile int16_t * volatile * volatile g_938[8][6][2] = {{{&g_939,&g_939},{&g_939,(void*)0},{(void*)0,&g_939},{&g_939,&g_939},{&g_939,&g_939},{(void*)0,(void*)0}},{{&g_939,&g_939},{&g_939,&g_939},{&g_939,(void*)0},{(void*)0,&g_939},{&g_939,&g_939},{&g_939,&g_939}},{{(void*)0,(void*)0},{&g_939,&g_939},{&g_939,&g_939},{&g_939,(void*)0},{(void*)0,&g_939},{&g_939,&g_939}},{{&g_939,&g_939},{(void*)0,(void*)0},{&g_939,&g_939},{&g_939,&g_939},{&g_939,(void*)0},{(void*)0,&g_939}},{{&g_939,&g_939},{&g_939,&g_939},{(void*)0,(void*)0},{&g_939,&g_939},{&g_939,&g_939},{&g_939,(void*)0}},{{(void*)0,&g_939},{&g_939,&g_939},{&g_939,&g_939},{(void*)0,(void*)0},{&g_939,&g_939},{&g_939,&g_939}},{{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939}},{{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939},{&g_939,&g_939}}};
static volatile int16_t * volatile * volatile * const g_937 = &g_938[7][2][1];
static int64_t g_958 = (-4L);
static struct S0 g_1026 = {996,172,73,699,50,13,67,0x48A1L,-461,472};/* VOLATILE GLOBAL g_1026 */
static const int32_t g_1043 = 0x1CF81CE5L;
static int32_t g_1057 = (-1L);
static const volatile struct S0 g_1058 = {818,-3,59,147,8,108,110,0x5173L,433,338};/* VOLATILE GLOBAL g_1058 */
static int32_t ** volatile g_1060 = &g_199;/* VOLATILE GLOBAL g_1060 */
static volatile int8_t **g_1075 = (void*)0;
static volatile int8_t ***g_1074 = &g_1075;
static volatile int8_t ****g_1073 = &g_1074;
static int8_t ** const **g_1143 = (void*)0;
static int8_t ** const ***g_1142 = &g_1143;
static const struct S0 g_1147 = {1773,122,112,1382,29,44,117,0L,448,370};/* VOLATILE GLOBAL g_1147 */
static uint16_t g_1157 = 65535UL;
static int32_t ** volatile g_1176 = &g_199;/* VOLATILE GLOBAL g_1176 */
static volatile struct S0 g_1197 = {2248,140,460,219,31,138,89,-6L,361,74};/* VOLATILE GLOBAL g_1197 */
static const uint32_t g_1201 = 0x12DE6830L;
static volatile struct S0 g_1237 = {2220,118,38,600,45,66,97,-2L,174,89};/* VOLATILE GLOBAL g_1237 */
static int32_t g_1272[8] = {9L,0x33962B8DL,9L,0x33962B8DL,9L,0x33962B8DL,9L,0x33962B8DL};
static int32_t g_1274 = 9L;
static volatile int16_t * volatile * volatile *g_1304 = &g_938[5][0][1];
static volatile int16_t * volatile * volatile ** const  volatile g_1303 = &g_1304;/* VOLATILE GLOBAL g_1303 */
static struct S0 g_1408[10] = {{2778,-87,133,1102,36,211,6,0L,-336,259},{416,46,53,1219,26,118,39,5L,67,340},{2778,-87,133,1102,36,211,6,0L,-336,259},{416,46,53,1219,26,118,39,5L,67,340},{2778,-87,133,1102,36,211,6,0L,-336,259},{416,46,53,1219,26,118,39,5L,67,340},{2778,-87,133,1102,36,211,6,0L,-336,259},{416,46,53,1219,26,118,39,5L,67,340},{2778,-87,133,1102,36,211,6,0L,-336,259},{416,46,53,1219,26,118,39,5L,67,340}};
static struct S0 g_1423 = {600,-16,8,168,28,131,114,0xD994L,-462,214};/* VOLATILE GLOBAL g_1423 */
static uint8_t *g_1505[9][8] = {{&g_309,&g_280,(void*)0,&g_309,(void*)0,(void*)0,&g_309,(void*)0},{(void*)0,(void*)0,(void*)0,&g_280,&g_309,(void*)0,&g_280,&g_280},{(void*)0,&g_280,(void*)0,&g_309,&g_280,&g_280,&g_280,&g_280},{&g_280,&g_280,&g_309,&g_280,&g_309,(void*)0,(void*)0,(void*)0},{(void*)0,&g_309,(void*)0,&g_309,(void*)0,(void*)0,&g_309,&g_309},{(void*)0,&g_280,(void*)0,(void*)0,&g_280,(void*)0,&g_280,&g_309},{&g_309,&g_280,(void*)0,(void*)0,(void*)0,&g_309,&g_309,&g_280},{&g_280,(void*)0,(void*)0,&g_309,&g_309,(void*)0,(void*)0,&g_280},{&g_280,&g_309,&g_309,(void*)0,(void*)0,(void*)0,&g_280,&g_309}};
static uint8_t **g_1504 = &g_1505[7][7];
static volatile uint8_t g_1726 = 0x80L;/* VOLATILE GLOBAL g_1726 */
static int32_t ** volatile g_1730 = &g_199;/* VOLATILE GLOBAL g_1730 */
static int16_t g_1763 = 0x8D07L;
static int16_t g_1768 = 0xF251L;
static int16_t * const g_1767 = &g_1768;
static int16_t * const *g_1766 = &g_1767;
static int16_t * const **g_1765 = &g_1766;
static int16_t *g_1771 = (void*)0;
static int16_t **g_1770 = &g_1771;
static int16_t ** const *g_1769 = &g_1770;
static int32_t ** volatile g_1823 = &g_199;/* VOLATILE GLOBAL g_1823 */
static struct S0 g_1828 = {2467,186,438,421,60,46,110,1L,66,225};/* VOLATILE GLOBAL g_1828 */
static int32_t ** volatile g_1874[1][10][10] = {{{(void*)0,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,(void*)0,&g_199,&g_199},{&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199},{(void*)0,(void*)0,&g_199,&g_199,&g_199,&g_199,&g_199,(void*)0,(void*)0,&g_199},{&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199},{&g_199,(void*)0,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,(void*)0,&g_199},{&g_199,&g_199,(void*)0,&g_199,(void*)0,&g_199,&g_199,&g_199,&g_199,(void*)0},{&g_199,&g_199,&g_199,&g_199,(void*)0,&g_199,(void*)0,&g_199,&g_199,&g_199},{(void*)0,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,(void*)0,&g_199,&g_199},{&g_199,&g_199,(void*)0,&g_199,&g_199,&g_199,&g_199,&g_199,&g_199,(void*)0},{&g_199,&g_199,(void*)0,&g_199,&g_199,&g_199,(void*)0,&g_199,&g_199,(void*)0}}};
static int32_t ** volatile g_1914 = &g_199;/* VOLATILE GLOBAL g_1914 */
static int32_t ** volatile g_1970 = &g_199;/* VOLATILE GLOBAL g_1970 */
static volatile struct S0 g_1979[5][9] = {{{1474,-99,199,963,71,3,11,3L,-207,473},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{513,-156,289,1049,38,168,117,0x5C35L,-114,357},{513,-156,289,1049,38,168,117,0x5C35L,-114,357},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{1474,-99,199,963,71,3,11,3L,-207,473},{384,44,409,1447,57,56,38,0x5DCCL,-478,16},{1474,-99,199,963,71,3,11,3L,-207,473},{2705,110,286,1905,44,209,43,0x7B78L,255,466}},{{477,-69,479,459,76,242,65,0xF99DL,187,221},{1088,-206,144,808,18,84,45,0xEF12L,389,431},{1088,-206,144,808,18,84,45,0xEF12L,389,431},{477,-69,479,459,76,242,65,0xF99DL,187,221},{1405,-92,417,1061,80,152,104,-1L,-338,82},{1838,-6,452,540,49,125,108,-8L,-152,438},{1405,-92,417,1061,80,152,104,-1L,-338,82},{477,-69,479,459,76,242,65,0xF99DL,187,221},{1088,-206,144,808,18,84,45,0xEF12L,389,431}},{{2768,-196,238,825,51,50,56,0x33D0L,347,504},{2768,-196,238,825,51,50,56,0x33D0L,347,504},{384,44,409,1447,57,56,38,0x5DCCL,-478,16},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{1935,147,294,1093,25,96,2,0xA91AL,-79,137},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{384,44,409,1447,57,56,38,0x5DCCL,-478,16},{2768,-196,238,825,51,50,56,0x33D0L,347,504},{2768,-196,238,825,51,50,56,0x33D0L,347,504}},{{1088,-206,144,808,18,84,45,0xEF12L,389,431},{477,-69,479,459,76,242,65,0xF99DL,187,221},{1405,-92,417,1061,80,152,104,-1L,-338,82},{1838,-6,452,540,49,125,108,-8L,-152,438},{1405,-92,417,1061,80,152,104,-1L,-338,82},{477,-69,479,459,76,242,65,0xF99DL,187,221},{1088,-206,144,808,18,84,45,0xEF12L,389,431},{1088,-206,144,808,18,84,45,0xEF12L,389,431},{477,-69,479,459,76,242,65,0xF99DL,187,221}},{{2705,110,286,1905,44,209,43,0x7B78L,255,466},{1474,-99,199,963,71,3,11,3L,-207,473},{384,44,409,1447,57,56,38,0x5DCCL,-478,16},{1474,-99,199,963,71,3,11,3L,-207,473},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{513,-156,289,1049,38,168,117,0x5C35L,-114,357},{513,-156,289,1049,38,168,117,0x5C35L,-114,357},{2705,110,286,1905,44,209,43,0x7B78L,255,466},{1474,-99,199,963,71,3,11,3L,-207,473}}};
static struct S0 g_2021 = {2705,-160,97,192,85,27,111,0L,-28,35};/* VOLATILE GLOBAL g_2021 */
static uint32_t *g_2039 = &g_85;
static int32_t * volatile g_2042 = &g_119[0][5];/* VOLATILE GLOBAL g_2042 */
static uint64_t g_2061 = 8UL;
static volatile struct S0 g_2069 = {1584,-64,287,1873,64,38,69,0x8E82L,128,461};/* VOLATILE GLOBAL g_2069 */
static struct S0 g_2155 = {339,-159,97,1587,49,17,2,1L,140,430};/* VOLATILE GLOBAL g_2155 */
static volatile int64_t * volatile *g_2193[8] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
static int32_t **g_2214 = &g_199;
static struct S0 g_2215 = {576,-83,5,1163,20,123,116,-1L,479,75};/* VOLATILE GLOBAL g_2215 */
static struct S0 ****g_2231 = (void*)0;
static struct S0 *****g_2230 = &g_2231;
static uint32_t *g_2255 = &g_54;
static struct S0 g_2307 = {1790,-64,204,1970,19,203,127,-1L,291,62};/* VOLATILE GLOBAL g_2307 */
static const uint64_t ****g_2330 = &g_577[0];
static int32_t *g_2367 = &g_90;
static int32_t ** volatile g_2366 = &g_2367;/* VOLATILE GLOBAL g_2366 */
static volatile struct S0 g_2378 = {2004,119,303,725,40,80,123,0x1C37L,-478,122};/* VOLATILE GLOBAL g_2378 */
static struct S0 g_2591 = {1323,168,300,1426,56,146,42,-6L,350,392};/* VOLATILE GLOBAL g_2591 */
static struct S0 g_2606[4] = {{1794,148,47,1187,14,17,125,0x9C3FL,-436,141},{1794,148,47,1187,14,17,125,0x9C3FL,-436,141},{1794,148,47,1187,14,17,125,0x9C3FL,-436,141},{1794,148,47,1187,14,17,125,0x9C3FL,-436,141}};
static int8_t g_2618[9] = {5L,5L,5L,5L,5L,5L,5L,5L,5L};
static volatile int8_t g_2642 = 0x82L;/* VOLATILE GLOBAL g_2642 */
static uint32_t g_2669 = 0x032EC2BBL;
static volatile struct S0 g_2706[10] = {{108,83,484,1000,57,23,124,1L,-320,257},{2801,-129,370,809,67,30,61,0xA9B6L,315,280},{108,83,484,1000,57,23,124,1L,-320,257},{108,83,484,1000,57,23,124,1L,-320,257},{2801,-129,370,809,67,30,61,0xA9B6L,315,280},{108,83,484,1000,57,23,124,1L,-320,257},{108,83,484,1000,57,23,124,1L,-320,257},{2801,-129,370,809,67,30,61,0xA9B6L,315,280},{108,83,484,1000,57,23,124,1L,-320,257},{108,83,484,1000,57,23,124,1L,-320,257}};
static struct S0 g_2796 = {2663,-54,237,1659,15,192,21,0x82F5L,-315,484};/* VOLATILE GLOBAL g_2796 */
static uint64_t g_2826[10] = {0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL,0xCC0B4BB4BCE3E9C9LL};
static struct S0 g_2859 = {2065,72,357,72,9,245,25,0L,-228,174};/* VOLATILE GLOBAL g_2859 */
static volatile struct S0 g_2918[10][3][5] = {{{{2361,118,445,207,85,152,43,0xAEF9L,-349,466},{246,197,256,2,28,54,23,0xBA59L,-126,449},{721,-98,34,1354,7,224,0,8L,-449,263},{849,-150,138,1419,8,31,99,1L,146,22},{2113,-210,57,1820,39,153,95,1L,134,100}},{{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{2091,200,346,1351,22,62,77,0x827EL,339,243},{1794,12,267,1316,80,220,88,-4L,-475,482},{1794,12,267,1316,80,220,88,-4L,-475,482},{2091,200,346,1351,22,62,77,0x827EL,339,243}},{{782,-10,247,1532,24,3,96,-7L,310,233},{246,197,256,2,28,54,23,0xBA59L,-126,449},{2343,93,239,1165,85,166,29,0xEE93L,96,171},{194,71,244,1106,51,47,113,0xCC77L,379,218},{2059,-63,78,1019,15,179,47,-4L,300,173}}},{{{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{2178,-180,171,914,33,172,74,0x62D0L,-191,245},{95,-43,503,515,61,96,125,0xDB90L,302,282},{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{2409,45,186,970,12,230,97,-5L,329,183}},{{1508,-65,407,1957,2,10,39,-2L,-251,194},{849,-150,138,1419,8,31,99,1L,146,22},{2703,-175,332,1696,69,90,3,8L,336,110},{849,-150,138,1419,8,31,99,1L,146,22},{1508,-65,407,1957,2,10,39,-2L,-251,194}},{{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{2178,-180,171,914,33,172,74,0x62D0L,-191,245},{1417,-233,171,976,26,8,20,0L,-64,44},{872,96,420,1021,20,41,89,0xF5E7L,257,360}}},{{{782,-10,247,1532,24,3,96,-7L,310,233},{1299,-17,194,1560,2,215,119,0x7AA7L,-390,126},{2059,-63,78,1019,15,179,47,-4L,300,173},{2886,-56,507,1373,57,141,101,2L,-484,169},{1251,26,181,1355,8,114,43,0L,223,78}},{{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{95,-43,503,515,61,96,125,0xDB90L,302,282},{95,-43,503,515,61,96,125,0xDB90L,302,282},{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{872,96,420,1021,20,41,89,0xF5E7L,257,360}},{{2361,118,445,207,85,152,43,0xAEF9L,-349,466},{2886,-56,507,1373,57,141,101,2L,-484,169},{727,-180,177,1944,0,60,88,-1L,11,217},{1951,26,33,1290,37,27,118,0x2F93L,338,251},{1508,-65,407,1957,2,10,39,-2L,-251,194}}},{{{872,96,420,1021,20,41,89,0xF5E7L,257,360},{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{1794,12,267,1316,80,220,88,-4L,-475,482},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{2409,45,186,970,12,230,97,-5L,329,183}},{{369,-238,205,1106,44,129,56,0x5D9EL,-372,28},{1299,-17,194,1560,2,215,119,0x7AA7L,-390,126},{369,-238,205,1106,44,129,56,0x5D9EL,-372,28},{1951,26,33,1290,37,27,118,0x2F93L,338,251},{2059,-63,78,1019,15,179,47,-4L,300,173}},{{2091,200,346,1351,22,62,77,0x827EL,339,243},{2078,-167,106,1032,55,86,100,0xA2C4L,7,187},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{2091,200,346,1351,22,62,77,0x827EL,339,243}}},{{{721,-98,34,1354,7,224,0,8L,-449,263},{849,-150,138,1419,8,31,99,1L,146,22},{2113,-210,57,1820,39,153,95,1L,134,100},{2886,-56,507,1373,57,141,101,2L,-484,169},{2113,-210,57,1820,39,153,95,1L,134,100}},{{872,96,420,1021,20,41,89,0xF5E7L,257,360},{872,96,420,1021,20,41,89,0xF5E7L,257,360},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{1417,-233,171,976,26,8,20,0L,-64,44},{612,-208,40,10,12,131,1,4L,393,365}},{{2403,-70,270,1812,29,46,72,-3L,349,27},{246,197,256,2,28,54,23,0xBA59L,-126,449},{369,-238,205,1106,44,129,56,0x5D9EL,-372,28},{849,-150,138,1419,8,31,99,1L,146,22},{782,-10,247,1532,24,3,96,-7L,310,233}}},{{{1177,59,159,1232,40,89,88,0x12A8L,-133,331},{1417,-233,171,976,26,8,20,0L,-64,44},{1794,12,267,1316,80,220,88,-4L,-475,482},{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{2091,200,346,1351,22,62,77,0x827EL,339,243}},{{2113,-210,57,1820,39,153,95,1L,134,100},{246,197,256,2,28,54,23,0xBA59L,-126,449},{727,-180,177,1944,0,60,88,-1L,11,217},{1299,-17,194,1560,2,215,119,0x7AA7L,-390,126},{2113,-210,57,1820,39,153,95,1L,134,100}},{{2091,200,346,1351,22,62,77,0x827EL,339,243},{612,-208,40,10,12,131,1,4L,393,365},{1417,-233,171,976,26,8,20,0L,-64,44},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{872,96,420,1021,20,41,89,0xF5E7L,257,360}}},{{{2343,93,239,1165,85,166,29,0xEE93L,96,171},{246,197,256,2,28,54,23,0xBA59L,-126,449},{782,-10,247,1532,24,3,96,-7L,310,233},{246,197,256,2,28,54,23,0xBA59L,-126,449},{2343,93,239,1165,85,166,29,0xEE93L,96,171}},{{2091,200,346,1351,22,62,77,0x827EL,339,243},{95,-43,503,515,61,96,125,0xDB90L,302,282},{2262,242,152,1036,14,36,95,0xED1AL,-478,255},{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{612,-208,40,10,12,131,1,4L,393,365}},{{201,111,10,677,55,111,64,-1L,273,456},{2017,-76,362,2041,34,53,90,-8L,353,23},{2113,-210,57,1820,39,153,95,1L,134,100},{1951,26,33,1290,37,27,118,0x2F93L,338,251},{2361,118,445,207,85,152,43,0xAEF9L,-349,466}}},{{{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{2091,200,346,1351,22,62,77,0x827EL,339,243},{1417,-233,171,976,26,8,20,0L,-64,44},{95,-43,503,515,61,96,125,0xDB90L,302,282},{612,-208,40,10,12,131,1,4L,393,365}},{{369,-238,205,1106,44,129,56,0x5D9EL,-372,28},{1951,26,33,1290,37,27,118,0x2F93L,338,251},{2059,-63,78,1019,15,179,47,-4L,300,173},{194,71,244,1106,51,47,113,0xCC77L,379,218},{2343,93,239,1165,85,166,29,0xEE93L,96,171}},{{612,-208,40,10,12,131,1,4L,393,365},{1417,-233,171,976,26,8,20,0L,-64,44},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{872,96,420,1021,20,41,89,0xF5E7L,257,360},{872,96,420,1021,20,41,89,0xF5E7L,257,360}}},{{{1508,-65,407,1957,2,10,39,-2L,-251,194},{2017,-76,362,2041,34,53,90,-8L,353,23},{1508,-65,407,1957,2,10,39,-2L,-251,194},{194,71,244,1106,51,47,113,0xCC77L,379,218},{2113,-210,57,1820,39,153,95,1L,134,100}},{{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{2178,-180,171,914,33,172,74,0x62D0L,-191,245},{95,-43,503,515,61,96,125,0xDB90L,302,282},{2615,-168,156,692,14,58,79,0x72C6L,-71,196}},{{676,-255,189,1010,77,16,112,0x765FL,-357,472},{246,197,256,2,28,54,23,0xBA59L,-126,449},{1251,26,181,1355,8,114,43,0L,223,78},{1951,26,33,1290,37,27,118,0x2F93L,338,251},{1251,26,181,1355,8,114,43,0L,223,78}}},{{{612,-208,40,10,12,131,1,4L,393,365},{2262,242,152,1036,14,36,95,0xED1AL,-478,255},{2178,-180,171,914,33,172,74,0x62D0L,-191,245},{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{1177,59,159,1232,40,89,88,0x12A8L,-133,331}},{{721,-98,34,1354,7,224,0,8L,-449,263},{2886,-56,507,1373,57,141,101,2L,-484,169},{1508,-65,407,1957,2,10,39,-2L,-251,194},{246,197,256,2,28,54,23,0xBA59L,-126,449},{201,111,10,677,55,111,64,-1L,273,456}},{{1845,-41,100,944,33,216,79,0xCC8CL,474,122},{2615,-168,156,692,14,58,79,0x72C6L,-71,196},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{2663,-34,98,329,55,225,87,0xC0F1L,-388,498},{2615,-168,156,692,14,58,79,0x72C6L,-71,196}}}};
static int32_t * const *g_2991 = (void*)0;
static int32_t * const **g_2990[3][10] = {{&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991},{&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991},{&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991,&g_2991}};
static int32_t * const *** volatile g_2989 = &g_2990[1][9];/* VOLATILE GLOBAL g_2989 */
static volatile struct S0 g_3009 = {1189,-117,108,117,52,75,94,1L,175,96};/* VOLATILE GLOBAL g_3009 */
static int16_t g_3031 = 0xDF5AL;
static int64_t g_3118 = 4L;
static const volatile struct S0 g_3165 = {1072,-162,131,1113,89,189,42,-1L,217,248};/* VOLATILE GLOBAL g_3165 */
static uint8_t g_3186 = 255UL;
static int32_t ** volatile g_3226 = &g_2367;/* VOLATILE GLOBAL g_3226 */
static const int32_t g_3292 = 0x91A552D0L;
static const uint8_t g_3301[6] = {0x0DL,0x0DL,0x0DL,0x0DL,0x0DL,0x0DL};
static uint16_t g_3309 = 0xE66FL;
static int16_t ****g_3310 = (void*)0;
static volatile struct S0 g_3314 = {1102,-33,143,1573,43,244,83,0x48A2L,323,362};/* VOLATILE GLOBAL g_3314 */
static volatile struct S0 g_3344 = {650,21,334,1692,56,132,12,3L,-367,400};/* VOLATILE GLOBAL g_3344 */
static int32_t **g_3368 = (void*)0;
static int32_t ***g_3367 = &g_3368;
static int32_t **** volatile g_3366 = &g_3367;/* VOLATILE GLOBAL g_3366 */
static uint16_t g_3511 = 0x6083L;
static volatile uint32_t g_3545 = 0x50A1D034L;/* VOLATILE GLOBAL g_3545 */
static volatile uint32_t *g_3544 = &g_3545;
static volatile uint32_t * const *g_3543 = &g_3544;
static volatile struct S0 g_3546 = {1571,-59,401,788,88,111,0,-8L,362,79};/* VOLATILE GLOBAL g_3546 */
static struct S0 g_3628 = {2288,26,484,303,41,113,12,-7L,406,389};/* VOLATILE GLOBAL g_3628 */
static volatile uint32_t * const * volatile g_3630 = (void*)0;/* VOLATILE GLOBAL g_3630 */
static volatile uint32_t * const * volatile *g_3629 = &g_3630;
static volatile struct S0 g_3636 = {2843,-91,441,17,56,19,48,-1L,-334,30};/* VOLATILE GLOBAL g_3636 */
static const volatile int8_t g_3658[7] = {1L,(-2L),(-2L),1L,(-2L),(-2L),1L};
static const volatile int8_t *g_3657 = &g_3658[1];
static const volatile int8_t **g_3656 = &g_3657;
static int32_t * volatile g_3659 = &g_60;/* VOLATILE GLOBAL g_3659 */
static int32_t * volatile g_3675 = &g_1057;/* VOLATILE GLOBAL g_3675 */
static struct S0 g_3676[2][2] = {{{620,-101,231,77,62,149,93,-6L,-231,212},{620,-101,231,77,62,149,93,-6L,-231,212}},{{620,-101,231,77,62,149,93,-6L,-231,212},{620,-101,231,77,62,149,93,-6L,-231,212}}};
static struct S0 g_3732 = {1540,101,45,1011,45,99,93,9L,-318,10};/* VOLATILE GLOBAL g_3732 */
static int32_t * volatile g_3748 = &g_1057;/* VOLATILE GLOBAL g_3748 */
static struct S0 g_3773[7][7] = {{{2316,-68,401,647,67,225,100,-1L,-464,225},{1814,-107,226,1840,46,56,16,0x6C15L,152,216},{1814,-107,226,1840,46,56,16,0x6C15L,152,216},{2316,-68,401,647,67,225,100,-1L,-464,225},{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{1565,-62,76,1499,81,176,93,-3L,159,189},{1767,-155,59,189,78,18,67,-4L,454,6}},{{606,-255,232,1739,77,246,20,0xE5E5L,-19,107},{1565,-62,76,1499,81,176,93,-3L,159,189},{2498,7,400,31,41,63,94,0x77E1L,-278,123},{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{2498,7,400,31,41,63,94,0x77E1L,-278,123},{1565,-62,76,1499,81,176,93,-3L,159,189}},{{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{606,-255,232,1739,77,246,20,0xE5E5L,-19,107},{320,217,501,736,65,240,114,0L,-376,349},{1328,-26,71,630,57,6,74,-4L,407,228},{1814,-107,226,1840,46,56,16,0x6C15L,152,216},{1767,-155,59,189,78,18,67,-4L,454,6},{1767,-155,59,189,78,18,67,-4L,454,6}},{{320,217,501,736,65,240,114,0L,-376,349},{606,-255,232,1739,77,246,20,0xE5E5L,-19,107},{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{606,-255,232,1739,77,246,20,0xE5E5L,-19,107},{320,217,501,736,65,240,114,0L,-376,349},{1328,-26,71,630,57,6,74,-4L,407,228},{1814,-107,226,1840,46,56,16,0x6C15L,152,216}},{{2498,7,400,31,41,63,94,0x77E1L,-278,123},{1565,-62,76,1499,81,176,93,-3L,159,189},{606,-255,232,1739,77,246,20,0xE5E5L,-19,107},{1328,-26,71,630,57,6,74,-4L,407,228},{2277,-102,284,1736,58,127,59,-1L,-510,341},{1328,-26,71,630,57,6,74,-4L,407,228},{606,-255,232,1739,77,246,20,0xE5E5L,-19,107}},{{1814,-107,226,1840,46,56,16,0x6C15L,152,216},{1814,-107,226,1840,46,56,16,0x6C15L,152,216},{2316,-68,401,647,67,225,100,-1L,-464,225},{1196,142,264,518,19,140,116,0xAF3AL,-405,237},{1565,-62,76,1499,81,176,93,-3L,159,189},{1767,-155,59,189,78,18,67,-4L,454,6},{2498,7,400,31,41,63,94,0x77E1L,-278,123}},{{2498,7,400,31,41,63,94,0x77E1L,-278,123},{1328,-26,71,630,57,6,74,-4L,407,228},{2316,-68,401,647,67,225,100,-1L,-464,225},{2316,-68,401,647,67,225,100,-1L,-464,225},{1328,-26,71,630,57,6,74,-4L,407,228},{2498,7,400,31,41,63,94,0x77E1L,-278,123},{2277,-102,284,1736,58,127,59,-1L,-510,341}}};
static int32_t * volatile g_3777[3][3][2] = {{{&g_1057,(void*)0},{&g_1057,&g_1057},{(void*)0,&g_1057}},{{&g_1057,(void*)0},{&g_1057,&g_1057},{(void*)0,&g_1057}},{{&g_1057,(void*)0},{&g_1057,&g_1057},{(void*)0,&g_1057}}};
static int32_t * volatile g_3778 = &g_60;/* VOLATILE GLOBAL g_3778 */
static struct S0 g_3816 = {2766,-236,49,1663,66,133,107,0L,290,471};/* VOLATILE GLOBAL g_3816 */


/* --- FORWARD DECLARATIONS --- */
static struct S0  func_1(void);
static int64_t  func_16(uint64_t  p_17, uint64_t  p_18, uint32_t  p_19, int32_t  p_20, int32_t  p_21);
static int8_t  func_23(const int32_t  p_24, int32_t  p_25, uint32_t  p_26, uint32_t  p_27);
static uint64_t  func_30(int64_t  p_31, uint32_t  p_32, int32_t  p_33, uint64_t  p_34);
static int64_t  func_35(uint32_t  p_36, uint32_t  p_37, int16_t  p_38, int8_t  p_39, uint64_t  p_40);
static uint64_t  func_46(uint32_t * p_47, int32_t  p_48, uint32_t * p_49);
static uint32_t * func_50(uint32_t * p_51, uint32_t  p_52);
static int32_t * func_63(int32_t * p_64);
static int32_t * func_68(uint16_t  p_69, int16_t  p_70, uint8_t  p_71, uint32_t  p_72, uint32_t * p_73);
static int32_t  func_76(int32_t * p_77, int32_t * p_78, uint32_t  p_79, int8_t  p_80, int16_t  p_81);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_2 g_5 g_3816
 * writes: g_2 g_5
 */
static struct S0  func_1(void)
{ /* block id: 0 */
    uint16_t l_41 = 65535UL;
    uint32_t *l_2509 = (void*)0;
    int32_t l_3555[9] = {0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L,0x33F61415L};
    int16_t l_3559[3];
    int32_t l_3646 = 0xA87ABD8EL;
    struct S0 *l_3677 = (void*)0;
    const uint32_t *l_3695 = &g_43;
    const uint32_t **l_3694 = &l_3695;
    const uint32_t ***l_3693[8];
    uint64_t l_3728 = 7UL;
    const int8_t *l_3809 = &g_151[0][2][8];
    const int8_t **l_3808 = &l_3809;
    const int8_t ***l_3807 = &l_3808;
    const int8_t ****l_3806[4][5][9] = {{{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807}},{{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807}},{{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807}},{{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807},{&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807,&l_3807}}};
    uint16_t l_3813 = 5UL;
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_3559[i] = (-1L);
    for (i = 0; i < 8; i++)
        l_3693[i] = &l_3694;
    for (g_2[2][1][0] = 0; (g_2[2][1][0] >= (-8)); g_2[2][1][0] = safe_sub_func_int32_t_s_s(g_2[2][1][0], 3))
    { /* block id: 3 */
        uint64_t l_22 = 0x891F433C8A0C0902LL;
        uint32_t *l_53[9][7] = {{&g_54,&g_54,(void*)0,&g_54,&g_54,&g_54,&g_54},{(void*)0,&g_54,&g_54,(void*)0,&g_54,&g_54,(void*)0},{&g_54,&g_54,&g_54,&g_54,(void*)0,&g_54,&g_54},{&g_54,(void*)0,&g_54,(void*)0,(void*)0,(void*)0,(void*)0},{&g_54,&g_54,&g_54,(void*)0,(void*)0,&g_54,&g_54},{(void*)0,&g_54,&g_54,&g_54,&g_54,&g_54,&g_54},{(void*)0,(void*)0,(void*)0,(void*)0,&g_54,&g_54,(void*)0},{(void*)0,&g_54,(void*)0,&g_54,(void*)0,(void*)0,(void*)0},{&g_54,(void*)0,&g_54,(void*)0,&g_54,&g_54,(void*)0}};
        uint32_t l_3579[8][6] = {{0xB72B9F26L,0x4939D795L,0x3E02F671L,18446744073709551612UL,0x4939D795L,0x673632B2L},{1UL,0x673632B2L,0x512FBE41L,3UL,0x512FBE41L,0x673632B2L},{18446744073709551607UL,18446744073709551613UL,0x3E02F671L,0UL,18446744073709551615UL,0x3E02F671L},{18446744073709551607UL,0x512FBE41L,18446744073709551615UL,3UL,0xA2EE71AEL,0x4939D795L},{1UL,0x512FBE41L,18446744073709551613UL,18446744073709551612UL,18446744073709551615UL,18446744073709551615UL},{0xB72B9F26L,18446744073709551613UL,18446744073709551613UL,0xB72B9F26L,0x512FBE41L,0x4939D795L},{3UL,0x673632B2L,18446744073709551615UL,0xB72B9F26L,0x4939D795L,0x3E02F671L},{0xB72B9F26L,0x4939D795L,0x3E02F671L,18446744073709551612UL,0x4939D795L,0x673632B2L}};
        uint64_t **l_3586 = &g_526;
        int32_t l_3593 = 0x6A188920L;
        const struct S0 *l_3621 = &g_2155;
        const struct S0 **l_3620 = &l_3621;
        uint32_t l_3667 = 0x7AF6A9B3L;
        int8_t l_3701 = 0x70L;
        const int64_t l_3723 = 1L;
        int32_t ****l_3729[6];
        int32_t l_3751 = 0xC529D6E0L;
        int32_t l_3752 = 0xF7E6B994L;
        int32_t l_3753 = (-4L);
        int32_t l_3754 = 0x3BE3F0B0L;
        int i, j;
        for (i = 0; i < 6; i++)
            l_3729[i] = &g_3367;
        if (g_2[6][4][0])
            break;
        for (g_5 = 0; (g_5 <= 11); ++g_5)
        { /* block id: 7 */
            int64_t l_15[3][4][3] = {{{7L,0x9A9843657218670FLL,7L},{4L,4L,4L},{7L,0x9A9843657218670FLL,7L},{4L,4L,4L}},{{7L,0x9A9843657218670FLL,7L},{4L,4L,4L},{7L,0x9A9843657218670FLL,7L},{4L,4L,4L}},{{7L,0x9A9843657218670FLL,7L},{4L,4L,4L},{7L,0x9A9843657218670FLL,7L},{4L,4L,4L}}};
            uint32_t *l_42[2];
            uint32_t **l_2508 = &g_223[5][6];
            int32_t l_3557[8][4][8] = {{{7L,0x4CFB3F54L,8L,8L,0x4CFB3F54L,7L,(-6L),7L},{0x4CFB3F54L,7L,(-6L),7L,0x4CFB3F54L,8L,8L,0x4CFB3F54L},{7L,2L,2L,7L,0x745FE702L,0x4CFB3F54L,0x745FE702L,7L},{2L,0x745FE702L,2L,8L,(-6L),(-6L),8L,2L}},{{0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L,(-1L),0x4CFB3F54L,(-6L),0x745FE702L},{0x745FE702L,2L,8L,(-6L),(-6L),8L,2L,0x745FE702L},{2L,7L,0x745FE702L,0x4CFB3F54L,0x745FE702L,7L,2L,0x4CFB3F54L},{2L,8L,(-6L),(-6L),8L,2L,0x745FE702L,2L}},{{8L,2L,0x745FE702L,2L,8L,(-6L),(-6L),8L},{2L,0x4CFB3F54L,0x4CFB3F54L,2L,(-1L),8L,(-1L),2L},{0x4CFB3F54L,(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L},{(-1L),(-1L),0x745FE702L,8L,7L,8L,0x745FE702L,(-1L)}},{{(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L,(-1L)},{0x4CFB3F54L,2L,(-1L),8L,(-1L),2L,0x4CFB3F54L,0x4CFB3F54L},{2L,8L,(-6L),(-6L),8L,2L,0x745FE702L,2L},{8L,2L,0x745FE702L,2L,8L,(-6L),(-6L),8L}},{{2L,0x4CFB3F54L,0x4CFB3F54L,2L,(-1L),8L,(-1L),2L},{0x4CFB3F54L,(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L},{(-1L),(-1L),0x745FE702L,8L,7L,8L,0x745FE702L,(-1L)},{(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L,(-1L)}},{{0x4CFB3F54L,2L,(-1L),8L,(-1L),2L,0x4CFB3F54L,0x4CFB3F54L},{2L,8L,(-6L),(-6L),8L,2L,0x745FE702L,2L},{8L,2L,0x745FE702L,2L,8L,(-6L),(-6L),8L},{2L,0x4CFB3F54L,0x4CFB3F54L,2L,(-1L),8L,(-1L),2L}},{{0x4CFB3F54L,(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L},{(-1L),(-1L),0x745FE702L,8L,7L,8L,0x745FE702L,(-1L)},{(-1L),0x4CFB3F54L,(-6L),0x745FE702L,0x745FE702L,(-6L),0x4CFB3F54L,(-1L)},{0x4CFB3F54L,2L,(-1L),8L,(-1L),2L,0x4CFB3F54L,0x4CFB3F54L}},{{2L,8L,(-6L),(-6L),8L,2L,0x745FE702L,2L},{8L,2L,0x745FE702L,2L,8L,(-6L),(-6L),8L},{2L,0x4CFB3F54L,0x4CFB3F54L,2L,(-1L),(-6L),7L,0x4CFB3F54L},{8L,7L,8L,0x745FE702L,(-1L),(-1L),0x745FE702L,8L}}};
            int32_t l_3618 = 0xCA9F2F13L;
            uint16_t l_3648 = 0x6DC6L;
            uint8_t l_3654 = 0UL;
            int64_t l_3674 = 0x6EBFD5C60C3C25E0LL;
            uint64_t l_3698 = 0x928C0EA63F27913CLL;
            uint8_t l_3702 = 0x9DL;
            uint64_t l_3755 = 6UL;
            uint32_t l_3810 = 0xA0B3E848L;
            int32_t l_3811[6][5] = {{0xFCD61B75L,0xFCD61B75L,0xD71E7FF0L,0xAE8C0CC5L,1L},{0x940C40C1L,0x8EFF0055L,0xD71E7FF0L,1L,0x1F99E06BL},{0xF7778E36L,0xD71E7FF0L,0xF30FB500L,0xD71E7FF0L,0xF7778E36L},{0xAE8C0CC5L,0x8EFF0055L,1L,0xF7778E36L,0xFCD61B75L},{0xAE8C0CC5L,0xFCD61B75L,0x1F99E06BL,0xCCFC86FFL,0xCCFC86FFL},{0xF7778E36L,(-7L),0xF7778E36L,0x8EFF0055L,0xFCD61B75L}};
            int i, j, k;
            for (i = 0; i < 2; i++)
                l_42[i] = &g_43;
        }
        l_3813++;
    }
    return g_3816;
}


/* ------------------------------------------ */
/* 
 * reads : g_3344 g_371.f9 g_526 g_148 g_2039 g_85 g_2214 g_199 g_2367 g_2 g_90 g_849 g_3309 g_3366 g_420 g_2618 g_54 g_119 g_412 g_1058.f0 g_1765 g_1766 g_1767 g_1770 g_1771 g_1408 g_382 g_383
 * writes: g_148 g_54 g_119 g_90 g_3309 g_3367 g_420 g_1057 g_199 g_413 g_85 g_2669
 */
static int64_t  func_16(uint64_t  p_17, uint64_t  p_18, uint32_t  p_19, int32_t  p_20, int32_t  p_21)
{ /* block id: 1335 */
    uint32_t **l_3362 = &g_223[2][2];
    uint32_t ***l_3361 = &l_3362;
    int32_t l_3363 = 3L;
    int64_t l_3420 = (-4L);
    int16_t ***l_3460 = (void*)0;
    int16_t ****l_3459[3][10] = {{(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460},{(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460},{(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460,(void*)0,&l_3460}};
    int i, j;
    (*g_849) = (l_3363 = (safe_add_func_int32_t_s_s((p_21 = (((p_21 , ((((g_3344 , ((safe_div_func_uint8_t_u_u((252UL != (safe_mul_func_int16_t_s_s(((safe_lshift_func_uint16_t_u_u(0x0515L, g_371[0][0].f9)) , ((~(--(*g_526))) ^ ((**g_2214) = ((7UL || (!((safe_sub_func_uint32_t_u_u((*g_2039), p_20)) != (safe_rshift_func_uint8_t_u_s(((l_3361 == &l_3362) >= p_21), p_17))))) == l_3363)))), l_3363))), p_20)) & p_21)) > p_19) || p_20) <= l_3363)) >= 0x0312L) , p_19)), (*g_2367))));
    for (g_3309 = 1; (g_3309 <= 7); g_3309 += 1)
    { /* block id: 1343 */
        int32_t **l_3365[1][2][8];
        int32_t ***l_3364 = &l_3365[0][0][0];
        int32_t l_3381 = 1L;
        int32_t l_3383 = 1L;
        int32_t l_3387 = 0xCA890F1FL;
        struct S0 *l_3388 = &g_1408[8];
        int16_t ***l_3458 = &g_1770;
        int16_t ****l_3457 = &l_3458;
        struct S0 ***l_3505 = (void*)0;
        struct S0 ****l_3504 = &l_3505;
        int i, j, k;
        for (i = 0; i < 1; i++)
        {
            for (j = 0; j < 2; j++)
            {
                for (k = 0; k < 8; k++)
                    l_3365[i][j][k] = (void*)0;
            }
        }
        (*g_3366) = l_3364;
        for (g_420 = 0; (g_420 <= 7); g_420 += 1)
        { /* block id: 1347 */
            uint16_t *l_3380[2];
            struct S0 **l_3382[8][8] = {{&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413},{&g_413,&g_413,&g_413,&g_413,(void*)0,&g_413,(void*)0,&g_413},{&g_413,&g_413,&g_413,&g_413,&g_413,(void*)0,&g_413,&g_413},{(void*)0,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413},{(void*)0,&g_413,&g_413,(void*)0,&g_413,&g_413,&g_413,&g_413},{&g_413,&g_413,(void*)0,&g_413,(void*)0,&g_413,&g_413,&g_413},{&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413},{&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413,&g_413}};
            int32_t l_3386 = 0xF543789DL;
            int32_t l_3415 = 3L;
            int8_t ***l_3519[4][1][3] = {{{&g_697[1][0][0],&g_697[1][0][0],&g_697[0][3][2]}},{{&g_697[1][0][0],&g_697[1][0][0],&g_697[0][3][2]}},{{&g_697[1][0][0],&g_697[1][0][0],&g_697[0][3][2]}},{{&g_697[1][0][0],&g_697[1][0][0],&g_697[0][3][2]}}};
            uint32_t *l_3532 = &g_2669;
            int i, j, k;
            for (i = 0; i < 2; i++)
                l_3380[i] = &g_501;
            l_3387 &= (l_3386 |= (((safe_sub_func_uint16_t_u_u(((((!(safe_add_func_uint16_t_u_u((safe_mul_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u(0x1DB5L, ((l_3381 = (safe_mod_func_uint32_t_u_u(g_2618[(g_420 + 1)], 0x7A996D0EL))) >= ((void*)0 != l_3382[5][6])))), (((l_3383 && (g_2618[(g_420 + 1)] != (safe_mod_func_int16_t_s_s((p_21 || ((*g_2039) == l_3363)), 1UL)))) ^ 65530UL) ^ p_18))), l_3383))) , g_2618[(g_420 + 1)]) != (-5L)) ^ (*g_199)), 0xACC6L)) | 7UL) != 0xDCB7BD09L));
            for (g_1057 = 1; (g_1057 <= 8); g_1057 += 1)
            { /* block id: 1353 */
                (*g_2214) = &l_3363;
                if (l_3383)
                    break;
                (*g_412) = l_3388;
            }
            for (l_3383 = 6; (l_3383 >= 3); l_3383 -= 1)
            { /* block id: 1360 */
                uint64_t l_3410 = 0xD8F1291B4D217041LL;
                uint64_t l_3434 = 18446744073709551615UL;
                int16_t **l_3464 = &g_1771;
                int32_t l_3474 = 0xA0A1B82DL;
                uint32_t l_3499 = 4294967295UL;
                int16_t l_3512 = 0x913AL;
            }
            p_21 = ((*g_199) |= ((((*g_2039) &= p_17) != ((((l_3519[1][0][2] == l_3519[2][0][0]) < (safe_mul_func_int8_t_s_s((((((safe_mod_func_int8_t_s_s(l_3381, (l_3415 = p_18))) != (g_1058.f0 , (safe_unary_minus_func_int16_t_s((safe_add_func_uint32_t_u_u(((*l_3532) = ((l_3386 = ((safe_rshift_func_uint8_t_u_s((safe_unary_minus_func_uint64_t_u(((safe_sub_func_uint32_t_u_u(p_21, (((**g_1765) != (**l_3458)) , l_3386))) | p_19))), l_3420)) && p_20)) || p_17)), p_19)))))) || l_3386) ^ 0UL) == (-8L)), 1L))) , (*l_3388)) , l_3415)) ^ 5UL));
        }
    }
    return (*g_382);
}


/* ------------------------------------------ */
/* 
 * reads : g_2061 g_2255 g_54 g_2214 g_1765 g_1766 g_1767 g_1768 g_382 g_383 g_1504 g_3186 g_195 g_151 g_2039 g_85 g_1197.f6 g_199 g_3226 g_698 g_1763 g_3118 g_152 g_2 g_849 g_90 g_96 g_55.f0 g_55.f1 g_55.f4 g_55.f3 g_148 g_55.f8 g_119 g_55.f2 g_55.f9 g_55.f7 g_5 g_60 g_182 g_92
 * writes: g_2061 g_199 g_511 g_1505 g_3031 g_1157 g_54 g_2367 g_119 g_1763 g_151 g_3118 g_152 g_3186 g_90 g_148 g_55.f2 g_182 g_195
 */
static int8_t  func_23(const int32_t  p_24, int32_t  p_25, uint32_t  p_26, uint32_t  p_27)
{ /* block id: 1252 */
    int8_t ****l_3172 = (void*)0;
    int32_t l_3190 = (-1L);
    int32_t l_3198 = 0x1D3E2334L;
    int32_t l_3199[3];
    int8_t l_3206 = 0x2AL;
    int32_t * const l_3225 = &g_2[2][1][0];
    int16_t ***l_3313 = &g_1770;
    int16_t ****l_3312 = &l_3313;
    int64_t ***l_3322 = (void*)0;
    int i;
    for (i = 0; i < 3; i++)
        l_3199[i] = 1L;
    for (g_2061 = 0; (g_2061 <= 0); g_2061 += 1)
    { /* block id: 1255 */
        int32_t l_3171 = 1L;
        int8_t ** const *l_3188[1][10] = {{&g_698,&g_698,&g_697[0][0][1],&g_698,&g_698,&g_697[0][0][1],&g_698,&g_698,&g_697[0][0][1],&g_698}};
        int8_t ** const **l_3187[1];
        int32_t l_3191 = 1L;
        int32_t l_3197 = 0x1E7DE820L;
        int32_t l_3200 = 0x6D7A05B5L;
        int32_t l_3211 = 0x4311060DL;
        int32_t l_3212[9][3] = {{0xD5947FECL,0xD5947FECL,0xF3279082L},{(-1L),0xF3279082L,0xF3279082L},{0xF3279082L,0x071F3F64L,0x1AEAED14L},{(-1L),0x071F3F64L,(-1L)},{0xD5947FECL,0xF3279082L,0x1AEAED14L},{0xD5947FECL,0xD5947FECL,0xF3279082L},{(-1L),0xF3279082L,0xF3279082L},{0xF3279082L,0x071F3F64L,0x1AEAED14L},{(-1L),0x071F3F64L,(-1L)}};
        int32_t l_3289[7][1] = {{0L},{0x7BB4207AL},{0L},{0x7BB4207AL},{0L},{0x7BB4207AL},{0L}};
        uint8_t l_3308 = 0xF2L;
        int i, j;
        for (i = 0; i < 1; i++)
            l_3187[i] = &l_3188[0][0];
        for (p_27 = 0; (p_27 <= 0); p_27 += 1)
        { /* block id: 1258 */
            uint8_t *l_3182 = &g_280;
            int32_t l_3189[4][8][8] = {{{2L,0x03CC64C3L,0L,0xC14AAF5FL,(-1L),(-3L),0xF219904BL,0x96F69DCBL},{0x137E142DL,0L,0xB529B178L,(-1L),(-1L),2L,0x82426B04L,0x6102C972L},{0x03CC64C3L,0x5FA92F12L,(-1L),0x4C4CF761L,0x5BBECC5EL,3L,0xBC033407L,0xBC033407L},{0x2C564760L,(-5L),0xEE82FEA2L,0xEE82FEA2L,(-5L),0x2C564760L,0xCE0D49D9L,0L},{0x34A5D09BL,0xBCDB5BD5L,0x031FFC4FL,0xC0207471L,(-1L),0x270CF3EAL,4L,0xB038E428L},{0x4C4CF761L,0x137E142DL,0xB6F81E03L,0xC0207471L,1L,0x0B16860DL,1L,0L},{0xD3A37D94L,1L,0x60C27416L,0xEE82FEA2L,(-2L),0x9D833328L,8L,0xBC033407L},{0xCA97E2F5L,(-3L),3L,0x4C4CF761L,0x031FFC4FL,1L,(-5L),0x6102C972L}},{{4L,0xB59C88CCL,0x1968314BL,(-1L),0x4C4CF761L,(-1L),1L,0x96F69DCBL},{0L,0xB9FEC913L,2L,0xC14AAF5FL,0x03CC64C3L,0x60C27416L,0xA321F3B5L,(-1L)},{0x96F69DCBL,8L,0xAE95E99CL,1L,0L,0xDB4CB6CAL,0x137E142DL,0L},{0x03CC64C3L,1L,0x1968314BL,0xB2D4BA7EL,(-4L),0xD1693ACDL,0L,0x34A5D09BL},{1L,0x7BF8309EL,0L,(-1L),0L,0x2C564760L,8L,0L},{1L,0x60C27416L,0x9D833328L,1L,0xDFE814B1L,(-3L),0x34A5D09BL,0x2C564760L},{1L,7L,0xB6F81E03L,0xB59C88CCL,1L,(-10L),0x82426B04L,0x5FA92F12L},{0L,4L,8L,(-1L),0L,1L,0xCE0D49D9L,0xBC033407L}},{{0xB2D4BA7EL,0x60C27416L,0xDB4CB6CAL,0x7BF8309EL,0x9D833328L,0x031FFC4FL,0xCA97E2F5L,0xE0338675L},{0x34A5D09BL,(-2L),(-1L),0xB9FEC913L,0x4C4CF761L,0xD1693ACDL,0x4C4CF761L,0xB9FEC913L},{0x899A283AL,0x137E142DL,0x899A283AL,1L,0x96F69DCBL,0xBCDB5BD5L,0xF219904BL,(-4L)},{1L,8L,0x60C27416L,0x7F11F65BL,0xEE82FEA2L,0L,0x96F69DCBL,0xD3A37D94L},{1L,(-8L),0x4EFD95F1L,0x4C4CF761L,0x96F69DCBL,(-1L),0L,4L},{0x899A283AL,0L,(-1L),0xDFE814B1L,0x4C4CF761L,0x6102C972L,0x270CF3EAL,0xB2D4BA7EL},{0x34A5D09BL,(-3L),0xDFE814B1L,1L,0x9D833328L,0x60C27416L,1L,2L},{0xB2D4BA7EL,0x96F69DCBL,(-10L),0xBC033407L,0L,0x0B16860DL,0x137E142DL,(-1L)}},{{(-6L),0xD3A37D94L,0x328B7961L,1L,0L,(-1L),(-1L),0x899A283AL},{(-1L),0x36E8AB35L,0xE0E133D1L,1L,0x16E7CAADL,1L,0xDFE814B1L,0x2E05027AL},{0x2C564760L,2L,1L,8L,0xF7B6E134L,4L,(-1L),0xAE95E99CL},{1L,1L,0xBC7390DCL,0x16E7CAADL,0xF219904BL,0xD1693ACDL,0x0B16860DL,1L},{0xA321F3B5L,0x4EFD95F1L,(-10L),0xBCDB5BD5L,9L,0xB15B1FCFL,(-3L),(-1L)},{0xAE95E99CL,0xC14AAF5FL,0L,0x9D833328L,0xA321F3B5L,0xB59C88CCL,0xB038E428L,0L},{(-8L),0x9D833328L,1L,0x5F460FE4L,0xEE82FEA2L,1L,0x0B16860DL,1L},{0xDB4CB6CAL,0x9F89AB61L,0L,0x6102C972L,1L,0x36E8AB35L,0x899A283AL,1L}}};
            uint32_t l_3217 = 0x91A52472L;
            int i, j, k;
            (*g_2214) = func_50(&g_224, (*g_2255));
            for (g_511 = 0; (g_511 <= 0); g_511 += 1)
            { /* block id: 1262 */
                int8_t *****l_3173 = &l_3172;
                uint8_t *l_3181[9] = {(void*)0,(void*)0,&g_309,(void*)0,(void*)0,&g_309,(void*)0,(void*)0,&g_309};
                int16_t *l_3183[10][3] = {{&g_152[2][1],&g_152[0][0],&g_152[2][1]},{&g_1763,(void*)0,&g_1763},{&g_1763,&g_1763,(void*)0},{&g_152[2][1],(void*)0,(void*)0},{(void*)0,&g_152[0][0],&g_1763},{&g_152[2][1],&g_152[0][0],&g_152[2][1]},{&g_1763,(void*)0,&g_1763},{&g_1763,&g_1763,(void*)0},{&g_152[2][1],(void*)0,(void*)0},{(void*)0,&g_152[0][0],&g_1763}};
                uint16_t *l_3184 = &g_1157;
                int32_t l_3185 = 0xE8C3ED6FL;
                int32_t l_3193 = 0x1BDA87B2L;
                int32_t l_3195 = 0x5DB65723L;
                int32_t l_3196 = 0x86A2ECC1L;
                int32_t l_3204 = (-1L);
                int32_t l_3207 = 1L;
                int32_t l_3208 = 0x28F613FFL;
                int32_t l_3209 = 0x57CB8C7DL;
                int32_t l_3213[2][10][1] = {{{0x3E9A845CL},{(-2L)},{8L},{(-2L)},{0x3E9A845CL},{0x56D9AC0EL},{(-10L)},{6L},{(-10L)},{0x56D9AC0EL}},{{0x3E9A845CL},{(-2L)},{8L},{(-2L)},{0x3E9A845CL},{0x56D9AC0EL},{(-10L)},{6L},{(-10L)},{0x56D9AC0EL}}};
                int32_t l_3215 = 0x9E0EAA49L;
                int i, j, k;
                if ((safe_mod_func_uint16_t_u_u((((***g_1765) | (((p_24 & l_3171) >= (((*l_3173) = l_3172) == (((*g_382) < (safe_mod_func_int32_t_s_s((safe_mod_func_uint32_t_u_u((l_3171 != ((safe_rshift_func_int8_t_s_s(((((((*l_3184) = ((2L != (g_3031 = (~(l_3181[5] == ((*g_1504) = l_3182))))) & l_3171)) , l_3171) , l_3185) , g_3186) || p_24), (*g_195))) | p_24)), (*g_2039))), p_25))) , l_3187[0]))) , l_3189[2][1][1])) <= l_3190), p_26)))
                { /* block id: 1267 */
                    int32_t l_3194 = (-6L);
                    int32_t l_3201 = 0x42818E76L;
                    int32_t l_3202 = 1L;
                    int32_t l_3203 = 1L;
                    int32_t l_3205 = 0xA72D00A5L;
                    int32_t l_3210 = 0x986F91F2L;
                    int32_t l_3214[9];
                    int32_t l_3216 = 0x52D87210L;
                    int i;
                    for (i = 0; i < 9; i++)
                        l_3214[i] = (-2L);
                    for (l_3171 = 0; (l_3171 >= 0); l_3171 -= 1)
                    { /* block id: 1270 */
                        int32_t *l_3192[4];
                        int i;
                        for (i = 0; i < 4; i++)
                            l_3192[i] = &l_3189[2][1][1];
                        --l_3217;
                    }
                }
                else
                { /* block id: 1273 */
                    uint64_t *****l_3222 = (void*)0;
                    uint64_t ****l_3224 = &g_524;
                    uint64_t *****l_3223 = &l_3224;
                    (*g_199) &= (((safe_rshift_func_uint16_t_u_u(g_1197.f6, 9)) , ((*l_3223) = &g_524)) == &g_524);
                    if (p_27)
                        continue;
                    for (l_3211 = 0; (l_3211 >= 0); l_3211 -= 1)
                    { /* block id: 1279 */
                        return p_27;
                    }
                }
                (*g_3226) = l_3225;
                (*g_199) |= (safe_mul_func_int8_t_s_s((safe_sub_func_uint16_t_u_u(p_24, (safe_rshift_func_int16_t_s_u(l_3211, ((*g_698) != (void*)0))))), 251UL));
            }
        }
        (**g_2214) = l_3211;
        for (g_1763 = 0; (g_1763 >= 0); g_1763 -= 1)
        { /* block id: 1290 */
            uint64_t l_3240[6] = {18446744073709551607UL,0x9A9AFDD6C03658DBLL,18446744073709551607UL,18446744073709551607UL,0x9A9AFDD6C03658DBLL,18446744073709551607UL};
            int64_t *l_3261 = (void*)0;
            int64_t *l_3262[9];
            uint32_t l_3263 = 18446744073709551615UL;
            int16_t *l_3264 = &g_152[2][1];
            uint8_t l_3294[7][5] = {{6UL,0xFCL,0x1FL,0x1FL,0xFCL},{0xFCL,0xEAL,6UL,0xFCL,0x1FL},{5UL,0xFCL,0x59L,0xFCL,5UL},{6UL,0x1FL,0xEAL,0x1FL,0x1FL},{5UL,0xEAL,0xEAL,5UL,0x1FL},{0xFCL,5UL,0x59L,0x1FL,0x1FL},{6UL,5UL,6UL,0x1FL,5UL}};
            uint8_t l_3338 = 255UL;
            int i, j;
            for (i = 0; i < 9; i++)
                l_3262[i] = (void*)0;
            l_3200 ^= (safe_rshift_func_int8_t_s_u((safe_rshift_func_uint16_t_u_u((safe_unary_minus_func_int32_t_s((l_3240[0] ^ (((safe_rshift_func_int16_t_s_u(((safe_sub_func_uint16_t_u_u((p_26 < p_25), (safe_sub_func_int64_t_s_s((safe_mul_func_uint8_t_u_u((p_25 || ((safe_rshift_func_int8_t_s_s(((*g_195) = (**g_698)), 2)) , l_3240[0])), (0x18L & ((safe_lshift_func_int8_t_s_s((safe_add_func_int64_t_s_s((safe_mod_func_int64_t_s_s((l_3199[0] = (safe_div_func_int16_t_s_s((**g_1766), ((*l_3264) &= (safe_mod_func_int32_t_s_s(((g_3118 ^= p_27) , p_25), l_3263)))))), p_27)), 0xB8D185C62BCAE24DLL)), (*l_3225))) , 255UL)))), l_3212[1][2])))) != p_25), p_25)) ^ 0L) != 1L)))), p_26)), 7));
            for (g_3186 = 0; (g_3186 <= 0); g_3186 += 1)
            { /* block id: 1298 */
                int32_t *l_3280 = &l_3171;
                int32_t l_3288 = (-6L);
                const int32_t *l_3291[2];
                const int32_t **l_3290 = &l_3291[0];
                int64_t l_3293 = 0x090B7132B53E9EC2LL;
                uint8_t *l_3321 = &g_309;
                int64_t **l_3330 = &l_3261;
                int64_t ***l_3329 = &l_3330;
                uint32_t l_3339 = 0x045226A0L;
                int i, j, k;
                for (i = 0; i < 2; i++)
                    l_3291[i] = &g_3292;
                l_3197 ^= ((((((((safe_mul_func_uint8_t_u_u((safe_mul_func_int8_t_s_s((~(safe_lshift_func_uint8_t_u_u((l_3293 = (((((*l_3290) = func_68((safe_rshift_func_uint8_t_u_u((p_26 || (*g_2039)), 2)), ((safe_mod_func_uint32_t_u_u(0x62DA404FL, ((((safe_rshift_func_int8_t_s_u((((*l_3280) = (safe_add_func_int8_t_s_s(l_3240[0], 0x09L))) , (+((*g_2039) <= (*g_2039)))), (safe_lshift_func_int16_t_s_s((-1L), (safe_lshift_func_int16_t_s_u((safe_div_func_int32_t_s_s((*g_849), l_3288)), 0)))))) > 0x8206L) || 0L) && (*l_3225)))) , 8L), l_3212[7][1], l_3289[5][0], &g_54)) != &p_25) == l_3191) | 0L)), l_3211))), 0x74L)), l_3240[0])) & l_3288) & l_3212[2][1]) != p_25) , l_3191) & 1L) & 0x3561835BF8DF758ALL) != l_3294[3][4]);
                for (l_3200 = 0; (l_3200 >= 0); l_3200 -= 1)
                { /* block id: 1305 */
                    int64_t **l_3324 = &l_3262[1];
                    int64_t ***l_3323 = &l_3324;
                    int32_t l_3331[5][9][4] = {{{0xB3F3C443L,0xAFBE8D89L,0x0029FCD3L,0xAFBE8D89L},{(-1L),0xD5113E8AL,7L,(-6L)},{0L,0xD5113E8AL,(-3L),0xAFBE8D89L},{(-3L),0xAFBE8D89L,(-1L),3L},{(-3L),0x22E28D3BL,(-3L),(-1L)},{0L,3L,7L,(-1L)},{(-1L),(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL},{4L,3L,0x0029FCD3L,0x22E28D3BL}},{{(-3L),3L,0xB3F3C443L,0xD5113E8AL},{0xB3F3C443L,0xD5113E8AL,4L,(-1L)},{0xB3F3C443L,(-4L),0xB3F3C443L,(-6L)},{(-3L),(-1L),0x0029FCD3L,(-6L)},{4L,(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL},{4L,3L,0x0029FCD3L,0x22E28D3BL},{(-3L),3L,0xB3F3C443L,0xD5113E8AL},{0xB3F3C443L,0xD5113E8AL,4L,(-1L)}},{{0xB3F3C443L,(-4L),0xB3F3C443L,(-6L)},{(-3L),(-1L),0x0029FCD3L,(-6L)},{4L,(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL},{4L,3L,0x0029FCD3L,0x22E28D3BL},{(-3L),3L,0xB3F3C443L,0xD5113E8AL},{0xB3F3C443L,0xD5113E8AL,4L,(-1L)},{0xB3F3C443L,(-4L),0xB3F3C443L,(-6L)},{(-3L),(-1L),0x0029FCD3L,(-6L)}},{{4L,(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL},{4L,3L,0x0029FCD3L,0x22E28D3BL},{(-3L),3L,0xB3F3C443L,0xD5113E8AL},{0xB3F3C443L,0xD5113E8AL,4L,(-1L)},{0xB3F3C443L,(-4L),0xB3F3C443L,(-6L)},{(-3L),(-1L),0x0029FCD3L,(-6L)},{4L,(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL}},{{4L,3L,0x0029FCD3L,0x22E28D3BL},{(-3L),3L,0xB3F3C443L,0xD5113E8AL},{0xB3F3C443L,0xD5113E8AL,4L,(-1L)},{0xB3F3C443L,(-4L),0xB3F3C443L,(-6L)},{(-3L),(-1L),0x0029FCD3L,(-6L)},{4L,(-4L),(-1L),(-1L)},{7L,0xD5113E8AL,(-1L),0xD5113E8AL},{4L,3L,0x0029FCD3L,0x22E28D3BL},{(-3L),3L,0xB3F3C443L,0xD5113E8AL}}};
                    uint8_t *l_3332 = &g_3186;
                    const int32_t *l_3333 = &l_3331[1][4][1];
                    uint64_t *l_3340 = &g_2061;
                    int i, j, k;
                }
            }
        }
    }
    return (*l_3225);
}


/* ------------------------------------------ */
/* 
 * reads : g_3165 g_1176 g_199 g_2214
 * writes: g_199
 */
static uint64_t  func_30(int64_t  p_31, uint32_t  p_32, int32_t  p_33, uint64_t  p_34)
{ /* block id: 1249 */
    uint32_t l_3166 = 1UL;
    (*g_2214) = ((p_33 , g_3165) , (*g_1176));
    return l_3166;
}


/* ------------------------------------------ */
/* 
 * reads : g_517 g_199 g_2214 g_43 g_382 g_383
 * writes: g_199 g_43
 */
static int64_t  func_35(uint32_t  p_36, uint32_t  p_37, int16_t  p_38, int8_t  p_39, uint64_t  p_40)
{ /* block id: 1086 */
    int8_t **l_2842 = &g_195;
    const uint32_t *l_2846 = (void*)0;
    const uint32_t **l_2845 = &l_2846;
    int32_t l_2848 = 1L;
    int16_t ***l_2852 = &g_1770;
    int16_t ****l_2851[10] = {&l_2852,&l_2852,&l_2852,&l_2852,&l_2852,&l_2852,&l_2852,&l_2852,&l_2852,&l_2852};
    uint32_t **l_2902 = &g_2255;
    int64_t l_2929[5][3][7] = {{{1L,0xEC8C0E1C37DBD6E3LL,1L,(-5L),(-7L),(-5L),1L},{0xF237BC5ECEC74BB2LL,0xF237BC5ECEC74BB2LL,0xBF6063D24F66AC3FLL,0L,0xF237BC5ECEC74BB2LL,(-7L),0L},{0xBCD48875AEA3E1CFLL,(-5L),0x9A82FE624AA50A34LL,0xEC8C0E1C37DBD6E3LL,0x9A82FE624AA50A34LL,(-5L),0xBCD48875AEA3E1CFLL}},{{1L,0L,(-1L),1L,0xF237BC5ECEC74BB2LL,0xBF6063D24F66AC3FLL,0xBF6063D24F66AC3FLL},{1L,(-5L),(-7L),(-5L),1L,0xEC8C0E1C37DBD6E3LL,1L},{1L,(-7L),0xBF6063D24F66AC3FLL,(-1L),(-7L),(-7L),(-1L)}},{{0x2B6C37A4D3A10C6BLL,(-5L),0x2B6C37A4D3A10C6BLL,0xE251C2D5A8962ADALL,0x9A82FE624AA50A34LL,0xE251C2D5A8962ADALL,0x2B6C37A4D3A10C6BLL},{1L,(-1L),0L,1L,1L,0L,(-1L)},{1L,0xE251C2D5A8962ADALL,0x81D34BD6E278C72CLL,(-5L),0x81D34BD6E278C72CLL,0xE251C2D5A8962ADALL,1L}},{{(-7L),1L,0xBF6063D24F66AC3FLL,0xBF6063D24F66AC3FLL,1L,(-7L),0xBF6063D24F66AC3FLL},{0x9A82FE624AA50A34LL,(-5L),0xBCD48875AEA3E1CFLL,(-5L),0x9A82FE624AA50A34LL,0xEC8C0E1C37DBD6E3LL,0x9A82FE624AA50A34LL},{1L,0xBF6063D24F66AC3FLL,0xBF6063D24F66AC3FLL,1L,(-7L),0xBF6063D24F66AC3FLL,(-1L)}},{{0x81D34BD6E278C72CLL,(-5L),0x81D34BD6E278C72CLL,0xE251C2D5A8962ADALL,1L,0xE251C2D5A8962ADALL,0x81D34BD6E278C72CLL},{1L,1L,0L,(-1L),1L,0xF237BC5ECEC74BB2LL,(-1L)},{0x9A82FE624AA50A34LL,0xE251C2D5A8962ADALL,0x2B6C37A4D3A10C6BLL,(-5L),0x2B6C37A4D3A10C6BLL,0xE251C2D5A8962ADALL,0x9A82FE624AA50A34LL}}};
    int8_t * const *l_2943 = &g_195;
    int8_t * const **l_2942 = &l_2943;
    int8_t * const ***l_2941 = &l_2942;
    int8_t * const ****l_2940 = &l_2941;
    int32_t l_2968 = 6L;
    int32_t l_2969 = 1L;
    int32_t * const *l_2988[7];
    int32_t * const **l_2987[2][2];
    int8_t l_3011 = 0xE4L;
    uint64_t **** const l_3072 = &g_524;
    struct S0 *l_3128 = &g_1408[3];
    uint64_t l_3148 = 0x955F564981F094C5LL;
    uint64_t l_3162 = 1UL;
    int i, j, k;
    for (i = 0; i < 7; i++)
        l_2988[i] = (void*)0;
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 2; j++)
            l_2987[i][j] = &l_2988[2];
    }
lbl_3075:
    (*g_2214) = (*g_517);
    for (g_43 = 3; (g_43 >= 20); ++g_43)
    { /* block id: 1090 */
        const uint32_t *l_2833 = &g_85;
        const uint32_t **l_2832 = &l_2833;
        int32_t l_2838 = 7L;
        int8_t ***l_2843 = (void*)0;
        int8_t ***l_2844 = &g_697[2][2][2];
        int32_t l_2847 = 0x9CB0EA72L;
        uint16_t l_2905 = 0x2585L;
        int16_t l_2906 = 0L;
        uint16_t l_2909 = 0x1A26L;
        int32_t l_2965[9][6][4] = {{{0L,0L,0L,0L},{0L,0L,0x7C17710FL,0L},{0L,0x7C17710FL,0L,7L},{0L,0L,7L,7L},{0x7C17710FL,0x7C17710FL,(-9L),0L},{0L,0L,(-9L),0L}},{{0x7C17710FL,0L,7L,(-9L)},{0L,0L,0L,0L},{0L,0L,0x7C17710FL,0L},{0L,0x7C17710FL,0L,7L},{0L,0L,7L,7L},{0x7C17710FL,0x7C17710FL,(-9L),0L}},{{0L,0L,(-9L),0L},{0x7C17710FL,0L,7L,(-9L)},{0L,0L,0L,0L},{0L,0L,0x7C17710FL,0L},{0L,0x7C17710FL,0L,7L},{0L,0L,7L,7L}},{{0x7C17710FL,0x7C17710FL,(-9L),0L},{0L,0L,(-9L),0L},{0x7C17710FL,0L,7L,(-9L)},{0L,0L,0L,0L},{0L,0L,0x7C17710FL,0L},{0L,0x7C17710FL,0L,7L}},{{0L,0L,7L,7L},{0x7C17710FL,0x7C17710FL,(-9L),0L},{0L,0L,(-9L),0L},{0x7C17710FL,0L,7L,(-9L)},{0L,0L,0L,0L},{0L,0L,(-1L),7L}},{{0L,(-1L),0L,(-9L)},{0L,7L,(-9L),(-9L)},{(-1L),(-1L),0x7C17710FL,7L},{7L,0L,0x7C17710FL,0L},{(-1L),0L,(-9L),0x7C17710FL},{0L,0L,0L,0L}},{{0L,0L,(-1L),7L},{0L,(-1L),0L,(-9L)},{0L,7L,(-9L),(-9L)},{(-1L),(-1L),0x7C17710FL,7L},{7L,0L,0x7C17710FL,0L},{(-1L),0L,(-9L),0x7C17710FL}},{{0L,0L,0L,0L},{0L,0L,(-1L),7L},{0L,(-1L),0L,(-9L)},{0L,7L,(-9L),(-9L)},{(-1L),(-1L),0x7C17710FL,7L},{7L,0L,0x7C17710FL,0L}},{{(-1L),0L,(-9L),0x7C17710FL},{0L,0L,0L,0L},{0L,0L,(-1L),7L},{0L,(-1L),0L,(-9L)},{0L,7L,(-9L),(-9L)},{(-1L),(-1L),0x7C17710FL,7L}}};
        int16_t l_2967 = 1L;
        uint64_t ** const *l_3034 = &g_525;
        int64_t *l_3074 = &l_2929[1][2][0];
        int64_t ** const l_3073 = &l_3074;
        int64_t ***l_3080 = (void*)0;
        int i, j, k;
    }
    if (g_43)
        goto lbl_3075;
    l_3162++;
    return (*g_382);
}


/* ------------------------------------------ */
/* 
 * reads : g_309 g_199 g_526 g_148
 * writes: g_309 g_119
 */
static uint64_t  func_46(uint32_t * p_47, int32_t  p_48, uint32_t * p_49)
{ /* block id: 930 */
    uint32_t l_2510[1][6][2] = {{{0UL,18446744073709551614UL},{9UL,0UL},{0xB9BCA5D1L,0xB9BCA5D1L},{0xB9BCA5D1L,0UL},{9UL,18446744073709551614UL},{0UL,18446744073709551614UL}}};
    int32_t l_2511 = 0xF598BC96L;
    uint8_t *l_2514 = &g_309;
    uint8_t l_2533 = 1UL;
    int32_t l_2535 = 9L;
    int32_t l_2536 = 0x9555F0D8L;
    int32_t l_2537 = (-1L);
    int32_t l_2539 = 0xF24AE4F8L;
    int32_t l_2540[6][7] = {{(-1L),0x4DDCF5EAL,(-1L),(-1L),0x4DDCF5EAL,(-1L),(-1L)},{0x6BFD07CFL,0xACE80D36L,0xE676AEBCL,0xACE80D36L,0x6BFD07CFL,(-5L),0x6BFD07CFL},{0x4DDCF5EAL,(-1L),(-1L),0x4DDCF5EAL,(-1L),(-1L),0x4DDCF5EAL},{(-9L),0xACE80D36L,(-9L),8L,0x6BFD07CFL,8L,(-9L)},{0x4DDCF5EAL,0x4DDCF5EAL,0xC01FD4C1L,0x4DDCF5EAL,0x4DDCF5EAL,0xC01FD4C1L,0x4DDCF5EAL},{0x6BFD07CFL,8L,(-9L),0xACE80D36L,(-9L),8L,0x6BFD07CFL}};
    uint32_t l_2541 = 1UL;
    uint8_t l_2572 = 2UL;
    struct S0 **l_2612 = &g_413;
    struct S0 ***l_2611 = &l_2612;
    int32_t *l_2622[4][3][8] = {{{&g_119[0][1],&l_2535,(void*)0,&l_2535,(void*)0,&l_2535,(void*)0,&l_2535},{&g_2[0][4][0],&l_2540[3][0],&g_119[0][1],&l_2536,&l_2535,&g_90,&l_2536,&g_60},{&l_2536,(void*)0,&g_2[2][1][0],(void*)0,&g_2[0][4][0],&l_2540[2][1],&l_2536,&l_2535}},{{&g_60,(void*)0,&g_119[0][1],&g_90,&g_1057,(void*)0,(void*)0,&g_1057},{&g_1057,&g_60,&g_60,&l_2535,&g_2[2][1][0],&g_60,&l_2540[3][0],&g_5},{(void*)0,&g_90,&l_2536,&l_2535,&l_2540[3][0],(void*)0,&g_119[0][1],&g_60}},{{&g_5,&g_90,&g_2[2][1][0],&g_119[0][1],&g_90,&g_60,&l_2540[2][1],&l_2535},{(void*)0,&g_60,&g_119[0][1],&g_119[0][1],&g_119[0][1],&g_60,(void*)0,&g_60},{&g_90,&l_2540[3][0],&l_2536,(void*)0,&g_60,&l_2536,(void*)0,&g_119[0][0]}},{{&g_60,&g_119[0][1],&l_2540[2][1],&g_119[0][1],&g_60,&g_2[2][1][0],&g_60,&g_119[0][1]},{&g_90,&l_2540[2][1],&g_5,&g_119[0][0],&g_119[0][1],&g_119[0][1],&g_119[0][0],&g_5},{(void*)0,(void*)0,(void*)0,(void*)0,&g_90,&l_2536,&l_2535,&l_2540[3][0]}}};
    uint64_t l_2641 = 0xF62056F3D11DD643LL;
    int8_t l_2670 = (-4L);
    int8_t l_2677[6];
    int32_t l_2681 = (-1L);
    int16_t l_2682 = 0xE609L;
    uint16_t l_2684 = 65534UL;
    int16_t ** const **l_2733[9];
    int16_t ***l_2735 = (void*)0;
    int16_t ****l_2734 = &l_2735;
    uint32_t l_2827 = 18446744073709551609UL;
    int i, j, k;
    for (i = 0; i < 6; i++)
        l_2677[i] = (-7L);
    for (i = 0; i < 9; i++)
        l_2733[i] = &g_1769;
    l_2511 ^= l_2510[0][1][0];
    (*g_199) = (safe_lshift_func_uint8_t_u_u((--(*l_2514)), 0));
    return (*g_526);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint32_t * func_50(uint32_t * p_51, uint32_t  p_52)
{ /* block id: 9 */
    int32_t l_1753 = 0L;
    int16_t * const l_1762[1][7] = {{&g_1763,&g_1763,&g_1763,&g_1763,&g_1763,&g_1763,&g_1763}};
    int16_t * const *l_1761[1][7][4] = {{{&l_1762[0][0],&l_1762[0][0],&l_1762[0][5],&l_1762[0][5]},{&l_1762[0][5],&l_1762[0][1],&l_1762[0][5],&l_1762[0][1]},{&l_1762[0][0],&l_1762[0][5],&l_1762[0][5],&l_1762[0][5]},{&l_1762[0][1],&l_1762[0][5],&l_1762[0][5],&l_1762[0][1]},{&l_1762[0][5],&l_1762[0][1],&l_1762[0][0],&l_1762[0][5]},{&l_1762[0][5],&l_1762[0][0],&l_1762[0][5],&l_1762[0][5]},{&l_1762[0][1],&l_1762[0][5],&l_1762[0][5],&l_1762[0][5]}}};
    int16_t * const **l_1760 = &l_1761[0][3][2];
    int32_t l_1802 = 0x3E9D4F68L;
    int32_t l_1803 = 1L;
    int32_t l_1806 = 0x8CB62639L;
    int32_t l_1807[5][7][7] = {{{0x53F49CEBL,0x0D8C56F8L,1L,0xFEFE9491L,(-1L),0x1FDFF70FL,0xFFB604F3L},{0x0D8C56F8L,(-2L),0xF92B2430L,0xFFB604F3L,2L,0x4BDD9087L,0x53F49CEBL},{0x4BDD9087L,0x96BC2A4FL,0xF92B2430L,2L,0x3FFD10FBL,0x3FFD10FBL,2L},{1L,(-1L),1L,(-1L),0xAE8C19FEL,0L,1L},{0xF9D9BCDFL,0xAE8C19FEL,(-7L),2L,4L,(-1L),0x3FFD10FBL},{1L,0x94ED170EL,(-1L),(-7L),1L,0L,4L},{0xFE15B255L,(-5L),0x13A1BA4AL,0x69060C65L,(-1L),0x3FFD10FBL,(-7L)}},{{0L,0x53F49CEBL,0xFE15B255L,0x0D8C56F8L,1L,0x4BDD9087L,0xF9D9BCDFL},{0xAE8C19FEL,0x53F49CEBL,0xDDC484D7L,0x1FDFF70FL,0xF92B2430L,0x1FDFF70FL,0xDDC484D7L},{(-5L),(-5L),(-1L),0L,0x0DD58231L,2L,0x96BC2A4FL},{0x2F017571L,0x94ED170EL,0x1FDFF70FL,1L,(-9L),0xC48896C2L,0xAE8C19FEL},{1L,0xAE8C19FEL,1L,0x53F49CEBL,0x0DD58231L,0xF9D9BCDFL,2L},{9L,(-1L),0xFFB604F3L,0x4BDD9087L,0xF92B2430L,0x0DD58231L,(-1L)},{(-1L),1L,0xFE15B255L,0x0DD58231L,0x69060C65L,(-5L),0x4BDD9087L}},{{2L,(-1L),(-1L),0x53F49CEBL,0x53F49CEBL,(-1L),(-1L)},{0x0DD58231L,0xFFB604F3L,0x94ED170EL,0xFE15B255L,0xDDC484D7L,(-2L),(-7L)},{0xDDC484D7L,1L,0x69060C65L,2L,(-1L),0L,0xF92B2430L},{0x0D8C56F8L,1L,(-1L),0xFE15B255L,(-1L),0xF92B2430L,(-9L)},{(-1L),0xF92B2430L,(-7L),0x53F49CEBL,2L,0x2F017571L,(-5L)},{(-1L),0x96BC2A4FL,2L,0x0DD58231L,0L,(-1L),(-5L)},{(-9L),1L,(-5L),0xAE8C19FEL,(-5L),1L,(-9L)}},{{0xC48896C2L,0x1FDFF70FL,4L,(-1L),(-1L),0x0DD58231L,0xF92B2430L},{0x69060C65L,0xFEFE9491L,0x1FDFF70FL,0x4BDD9087L,0x0DD58231L,4L,(-7L)},{1L,0x0D8C56F8L,4L,(-9L),0x96BC2A4FL,0xFFB604F3L,(-1L)},{0xF9D9BCDFL,0x94ED170EL,(-5L),(-5L),1L,0x69060C65L,0x4BDD9087L},{0xAE8C19FEL,4L,2L,0xFFB604F3L,(-9L),0x69060C65L,2L},{0xFFB604F3L,0x2F017571L,(-7L),(-7L),0x2F017571L,0xFFB604F3L,6L},{(-1L),0x4BDD9087L,(-1L),0x2F017571L,0x3FFD10FBL,4L,(-1L)}},{{0xF92B2430L,0xF9D9BCDFL,0x69060C65L,6L,(-1L),0x0DD58231L,1L},{0xFE15B255L,0x4BDD9087L,0x94ED170EL,(-2L),6L,1L,0x96BC2A4FL},{1L,0x2F017571L,(-1L),0x13A1BA4AL,0x0D8C56F8L,(-1L),1L},{(-1L),4L,0xFE15B255L,1L,0x0D8C56F8L,0x2F017571L,0x2F017571L},{6L,0x94ED170EL,1L,0x94ED170EL,6L,0xF92B2430L,(-1L)},{(-7L),0x0D8C56F8L,2L,0x1FDFF70FL,(-1L),0L,2L},{1L,0xFEFE9491L,(-5L),(-1L),0x3FFD10FBL,(-2L),2L}}};
    int8_t l_1812 = 1L;
    int64_t l_1819 = 0x72C9718DB647028BLL;
    int64_t l_1859 = 0x635F33F317D15FACLL;
    uint32_t l_1860 = 0x6EE4E912L;
    int8_t **l_1885 = &g_195;
    int32_t *l_1886 = &l_1802;
    int8_t l_1918 = 0x11L;
    uint64_t ***l_1922[5][8] = {{&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525},{&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525},{&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525},{&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525},{&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525,&g_525}};
    uint8_t *l_2048 = &g_280;
    uint16_t l_2049 = 0UL;
    uint16_t *l_2058 = &g_1157;
    int16_t l_2059 = 0x5B0BL;
    int16_t l_2060[7][8][4] = {{{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)}},{{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)}},{{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)}},{{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)}},{{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)}},{{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-10L),1L,(-10L)},{(-10L),(-2L),(-2L),(-10L)},{(-2L),(-10L),(-2L),(-2L)},{(-10L),(-2L),(-10L),(-2L)}},{{(-2L),1L,1L,(-2L)},{1L,(-2L),1L,1L},{(-2L),(-2L),(-10L),(-2L)},{(-2L),1L,1L,(-2L)},{1L,(-2L),1L,1L},{(-2L),(-2L),(-10L),(-2L)},{(-2L),1L,1L,(-2L)},{1L,(-2L),1L,1L}}};
    int16_t l_2091 = 1L;
    int64_t *l_2192 = &g_958;
    int64_t **l_2191[5];
    uint16_t l_2290[1][2];
    int32_t l_2308 = 0x92F4315DL;
    int64_t l_2407 = 0x6EB63C1EF7312319LL;
    uint8_t l_2430[7] = {253UL,253UL,253UL,253UL,253UL,253UL,253UL};
    uint64_t * const * const *l_2507 = (void*)0;
    uint64_t * const * const * const *l_2506 = &l_2507;
    uint64_t * const * const * const **l_2505 = &l_2506;
    int i, j, k;
    for (i = 0; i < 5; i++)
        l_2191[i] = &l_2192;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 2; j++)
            l_2290[i][j] = 65526UL;
    }
    return &g_54;
}


/* ------------------------------------------ */
/* 
 * reads : g_55.f1 g_1726 g_1060 g_199
 * writes: g_55.f1 g_309 g_90 g_1726
 */
static int32_t * func_63(int32_t * p_64)
{ /* block id: 20 */
    uint32_t l_66 = 0x00D13BCEL;
    uint64_t l_67[3];
    int32_t l_217 = 0xAF9EDCDBL;
    uint8_t l_220 = 7UL;
    int32_t l_330 = 0L;
    int32_t l_331 = (-3L);
    int32_t l_332 = 0x6BA99FDAL;
    int32_t l_333 = 0L;
    int32_t l_334[6][5] = {{0x68735869L,(-10L),0xB6C8E8B9L,0x9A2DE6C3L,(-6L)},{(-1L),0L,0L,(-1L),0x9A2DE6C3L},{0x68735869L,4L,1L,0x61F99BEEL,0x9A2DE6C3L},{0L,0x68735869L,(-6L),(-1L),(-6L)},{(-1L),(-1L),0x9A2DE6C3L,0x61F99BEEL,1L},{0x0886D678L,0L,0x9A2DE6C3L,(-1L),0L}};
    uint8_t *l_408 = &g_309;
    uint8_t * const *l_407 = &l_408;
    uint64_t *l_523 = &l_67[2];
    uint64_t **l_522 = &l_523;
    uint64_t ** const *l_521 = &l_522;
    int16_t l_621[1][8][5] = {{{1L,0xE835L,0x4B37L,0x956AL,0x6355L},{0xE634L,0x1279L,0x1279L,0xE634L,(-1L)},{0x2971L,0xE634L,0x4B37L,0x6355L,0xE835L},{0x2971L,0x4B37L,(-1L),0x4B37L,0x2971L},{0xE634L,0x956AL,1L,0x6355L,0x1279L},{1L,0x956AL,0xE634L,0xE634L,0x956AL},{(-1L),0x4B37L,0x2971L,0x956AL,0x1279L},{0x4B37L,0xE634L,0x2971L,0L,0x2971L}}};
    int8_t **l_659[2];
    uint64_t *l_662 = &g_148;
    uint32_t l_674 = 4294967295UL;
    uint8_t l_682 = 0xF6L;
    const struct S0 *l_739[3][3] = {{&g_742,(void*)0,&g_742},{&g_740,&g_740,&g_740},{&g_742,(void*)0,&g_742}};
    const int16_t *l_841 = &g_152[0][0];
    const int16_t **l_840 = &l_841;
    int16_t l_842 = 5L;
    uint64_t l_861 = 0x30C3FADC096AE690LL;
    int8_t ***l_987 = &g_697[1][5][1];
    const int8_t ***l_988 = (void*)0;
    uint32_t l_1034 = 1UL;
    int32_t **l_1220 = &g_199;
    int16_t *l_1270 = &l_842;
    const int16_t l_1344[4][6] = {{0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L},{0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L},{0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L},{0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L,0xDE68L}};
    const int32_t *l_1349[7][3] = {{&g_60,&g_60,(void*)0},{(void*)0,(void*)0,(void*)0},{(void*)0,&l_330,&g_2[2][1][0]},{(void*)0,&l_330,(void*)0},{&g_60,(void*)0,&g_2[2][1][0]},{&g_60,&g_60,(void*)0},{(void*)0,(void*)0,(void*)0}};
    const int32_t **l_1348 = &l_1349[6][1];
    const int32_t ***l_1347[1];
    uint64_t l_1560[3][2][1] = {{{0x9DCC768A815D9726LL},{0UL}},{{0x9DCC768A815D9726LL},{0UL}},{{0x9DCC768A815D9726LL},{0UL}}};
    uint32_t l_1569[3];
    int16_t l_1600 = (-1L);
    int64_t l_1603 = 1L;
    const int16_t l_1719 = 1L;
    int64_t l_1723 = 1L;
    int32_t *l_1725[8] = {&l_332,&l_330,&l_332,&l_332,&l_330,&l_332,&l_332,&l_330};
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_67[i] = 0x996DCEBFDCAE3649LL;
    for (i = 0; i < 2; i++)
        l_659[i] = &g_195;
    for (i = 0; i < 1; i++)
        l_1347[i] = &l_1348;
    for (i = 0; i < 3; i++)
        l_1569[i] = 1UL;
    g_55.f1 ^= l_66;
    for (l_66 = 0; (l_66 <= 2); l_66 += 1)
    { /* block id: 24 */
        int8_t l_74 = 0x09L;
        int32_t *l_82 = &g_60;
        uint8_t l_225 = 255UL;
        int8_t l_269[2][5][6] = {{{0L,0x2FL,0x2FL,0L,0x2FL,0x2FL},{0L,0x2FL,0x2FL,0L,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L}},{{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L},{0x2FL,8L,8L,0x2FL,8L,8L}}};
        int32_t l_320 = 0x5C3BC544L;
        int32_t l_321 = 0xB2242C10L;
        int32_t l_324[4] = {0L,0L,0L,0L};
        uint32_t l_325[3];
        uint8_t l_335 = 248UL;
        int64_t l_364 = 0L;
        struct S0 *l_411 = &g_55;
        uint64_t l_416 = 1UL;
        uint16_t *l_510[10] = {&g_511,&g_511,&g_511,&g_511,&g_511,&g_511,&g_511,&g_511,&g_511,&g_511};
        uint32_t l_537 = 5UL;
        int32_t l_627 = 0xB951FCD1L;
        int32_t l_641 = 1L;
        int32_t l_650 = 1L;
        uint16_t l_652[6][10][3] = {{{65530UL,65535UL,65535UL},{65528UL,65535UL,0xE1B0L},{65535UL,65535UL,0xE8E6L},{65530UL,1UL,65530UL},{65535UL,0UL,65530UL},{0xB038L,4UL,0xE8E6L},{0xE8E6L,65530UL,0xE1B0L},{0UL,0x1246L,65535UL},{0xE8E6L,0xCA6EL,65528UL},{0xB038L,0xB038L,1UL}},{{65535UL,0xB038L,4UL},{65530UL,0xCA6EL,0xB038L},{65535UL,0x1246L,0xEB50L},{65528UL,65530UL,0xB038L},{65530UL,4UL,4UL},{6UL,0UL,1UL},{6UL,1UL,65528UL},{65530UL,65535UL,65535UL},{65528UL,65535UL,0xE1B0L},{65535UL,65535UL,0xE8E6L}},{{65530UL,1UL,65530UL},{65535UL,0UL,65530UL},{0xB038L,4UL,0xE8E6L},{0xE8E6L,65530UL,0xE1B0L},{0UL,0x1246L,65535UL},{0xE8E6L,0xCA6EL,65528UL},{0xB038L,0xB038L,1UL},{65535UL,0xB038L,4UL},{65530UL,0xCA6EL,0xB038L},{65535UL,0x1246L,0xEB50L}},{{65528UL,65530UL,0xB038L},{65530UL,4UL,4UL},{6UL,0UL,1UL},{6UL,1UL,65528UL},{65530UL,65535UL,65535UL},{65528UL,65535UL,0xE1B0L},{65535UL,65535UL,0xE8E6L},{65530UL,1UL,65530UL},{65535UL,0UL,65530UL},{0xB038L,4UL,0xE8E6L}},{{0xE8E6L,65530UL,0xE1B0L},{0UL,0x1246L,65535UL},{0xE8E6L,0xB038L,0UL},{65528UL,65528UL,0x1246L},{4UL,65528UL,0xE1B0L},{65534UL,0xB038L,65528UL},{0xCA6EL,65535UL,0xE8E6L},{0UL,65534UL,65528UL},{6UL,0xE1B0L,0xE1B0L},{65535UL,65530UL,0x1246L}},{{65535UL,0x1246L,0UL},{6UL,4UL,65535UL},{0UL,0xCA6EL,0xEB50L},{0xCA6EL,4UL,65530UL},{65534UL,0x1246L,65534UL},{4UL,65530UL,65534UL},{65528UL,0xE1B0L,65530UL},{65530UL,65534UL,0xEB50L},{65530UL,65535UL,65535UL},{65530UL,0xB038L,0UL}}};
        int32_t l_679[10][1] = {{(-9L)},{0L},{(-9L)},{0L},{(-9L)},{0L},{(-9L)},{0L},{(-9L)},{0L}};
        int8_t ***l_750 = &l_659[1];
        uint32_t l_766[7][7] = {{0xC2A1944EL,0x730B8683L,0xC2A1944EL,18446744073709551612UL,0x7847BE73L,0x3CB2DA0BL,1UL},{0UL,0x67B4DC09L,18446744073709551615UL,18446744073709551615UL,0x67B4DC09L,0UL,0x67B4DC09L},{0xC2A1944EL,18446744073709551612UL,0x7847BE73L,0x3CB2DA0BL,1UL,0x3CB2DA0BL,0x7847BE73L},{0x6C99318BL,0x6C99318BL,0UL,18446744073709551615UL,0UL,0x6C99318BL,0x6C99318BL},{0x40A10E92L,18446744073709551612UL,0xB02DFFE0L,18446744073709551612UL,0x40A10E92L,5UL,0x7847BE73L},{0UL,0x67B4DC09L,0UL,0UL,0UL,0UL,0x67B4DC09L},{0x7847BE73L,0x730B8683L,0xB02DFFE0L,18446744073709551608UL,1UL,18446744073709551612UL,1UL}};
        int16_t **l_804 = (void*)0;
        uint64_t l_846 = 0xA4BB94830E206B42LL;
        int32_t l_864 = 0L;
        int i, j, k;
        for (i = 0; i < 3; i++)
            l_325[i] = 0x19DE6B23L;
    }
lbl_1724:
    for (l_66 = (-11); (l_66 == 34); ++l_66)
    { /* block id: 352 */
        int64_t l_971 = (-1L);
        int32_t l_972 = 0x81843F0EL;
        int32_t l_973 = 6L;
        int32_t l_974 = 0L;
        int32_t l_975 = 1L;
        int32_t l_976[1];
        uint8_t l_977 = 2UL;
        int8_t *l_984[2][1][5];
        int16_t l_1031[9][9] = {{(-7L),0L,0L,(-7L),(-7L),(-7L),0L,0L,(-7L)},{0xFB43L,3L,0L,3L,0xFB43L,9L,(-1L),0x790BL,(-1L)},{0L,(-7L),1L,1L,(-7L),0L,(-7L),1L,1L},{0xFB43L,9L,(-1L),0x790BL,(-1L),9L,0xFB43L,3L,0L},{(-7L),(-7L),(-7L),0L,0L,(-7L),(-7L),(-7L),0L},{0xFEACL,3L,(-1L),7L,0xAAA3L,7L,(-1L),3L,0xFEACL},{0xE094L,0L,1L,0L,0xE094L,0xE094L,0L,1L,0L},{(-1L),(-1L),0L,0x790BL,0xAAA3L,3L,0xAAA3L,0x790BL,0L},{0xE094L,0xE094L,0L,1L,0L,0xE094L,0xE094L,(-7L),(-7L)}};
        int64_t l_1033[9] = {0x05F7FC7CC32F5B01LL,0x69B99BB102C5B24FLL,0x05F7FC7CC32F5B01LL,0x05F7FC7CC32F5B01LL,0x69B99BB102C5B24FLL,0x05F7FC7CC32F5B01LL,0x05F7FC7CC32F5B01LL,0x69B99BB102C5B24FLL,0x05F7FC7CC32F5B01LL};
        int64_t l_1099 = 0L;
        uint64_t l_1130 = 18446744073709551609UL;
        int8_t l_1135 = 0x65L;
        int8_t ** const ***l_1144[1];
        int32_t **l_1200[1];
        int32_t *l_1248 = &g_5;
        int32_t l_1275 = 0x516F4D07L;
        uint8_t **l_1296[9][3][1] = {{{(void*)0},{&l_408},{&l_408}},{{&l_408},{(void*)0},{&l_408}},{{&l_408},{(void*)0},{(void*)0}},{{&l_408},{&l_408},{(void*)0}},{{&l_408},{&l_408},{&l_408}},{{(void*)0},{&l_408},{&l_408}},{{(void*)0},{(void*)0},{&l_408}},{{&l_408},{(void*)0},{&l_408}},{{&l_408},{&l_408},{(void*)0}}};
        int16_t *l_1325 = &g_152[3][1];
        uint32_t l_1409 = 0UL;
        int64_t l_1529 = 1L;
        int32_t l_1557 = 0xCD17A332L;
        uint16_t *l_1570 = &g_1157;
        int64_t l_1625 = 0x506E157157890A41LL;
        struct S0 **l_1626 = &g_413;
        uint64_t **l_1720 = &g_526;
        int32_t l_1721 = 1L;
        int32_t l_1722 = 4L;
        int i, j, k;
        for (i = 0; i < 1; i++)
            l_976[i] = 0x490D2D53L;
        for (i = 0; i < 2; i++)
        {
            for (j = 0; j < 1; j++)
            {
                for (k = 0; k < 5; k++)
                    l_984[i][j][k] = &g_182;
            }
        }
        for (i = 0; i < 1; i++)
            l_1144[i] = &g_1143;
        for (i = 0; i < 1; i++)
            l_1200[i] = &g_199;
        for (g_309 = (-15); (g_309 == 1); g_309 = safe_add_func_uint64_t_u_u(g_309, 9))
        { /* block id: 355 */
            int32_t *l_968 = &l_331;
            int32_t *l_969 = &g_119[0][1];
            int32_t *l_970[2];
            int8_t *l_983 = &g_151[0][0][0];
            uint64_t *l_1010 = &l_861;
            int16_t *l_1182 = (void*)0;
            const int32_t **l_1346 = (void*)0;
            const int32_t ***l_1345 = &l_1346;
            int32_t l_1366 = 0x3871FBF6L;
            const int32_t l_1426 = 0xFF341A14L;
            uint64_t l_1431[2];
            int16_t l_1474 = 0x9A84L;
            int64_t *l_1551 = &l_1033[0];
            uint8_t ***l_1552 = &l_1296[5][2][0];
            uint8_t ***l_1553[4][10][2] = {{{(void*)0,&g_1504},{(void*)0,(void*)0},{&g_1504,&g_1504},{&g_1504,(void*)0},{(void*)0,&g_1504},{(void*)0,&g_1504},{(void*)0,(void*)0},{(void*)0,&g_1504},{&g_1504,&g_1504},{&g_1504,(void*)0}},{{&g_1504,(void*)0},{(void*)0,(void*)0},{&g_1504,(void*)0},{&g_1504,&g_1504},{&g_1504,&g_1504},{(void*)0,(void*)0},{(void*)0,&g_1504},{(void*)0,&g_1504},{(void*)0,(void*)0},{&g_1504,&g_1504}},{{&g_1504,(void*)0},{(void*)0,&g_1504},{(void*)0,&g_1504},{(void*)0,(void*)0},{(void*)0,&g_1504},{&g_1504,&g_1504},{&g_1504,(void*)0},{&g_1504,(void*)0},{(void*)0,(void*)0},{&g_1504,(void*)0}},{{&g_1504,&g_1504},{&g_1504,&g_1504},{(void*)0,(void*)0},{(void*)0,&g_1504},{(void*)0,&g_1504},{(void*)0,(void*)0},{&g_1504,&g_1504},{&g_1504,(void*)0},{(void*)0,&g_1504},{(void*)0,&g_1504}}};
            uint8_t **l_1554 = &l_408;
            int64_t l_1558 = 9L;
            uint32_t l_1559 = 8UL;
            int i, j, k;
            for (i = 0; i < 2; i++)
                l_970[i] = &l_331;
            for (i = 0; i < 2; i++)
                l_1431[i] = 18446744073709551615UL;
            l_977--;
            for (g_90 = 0; (g_90 <= 1); g_90 += 1)
            { /* block id: 359 */
                int8_t *l_982 = &g_182;
                int32_t l_1032 = 1L;
                int8_t ***l_1044 = &g_697[0][0][1];
                int32_t l_1087 = 1L;
                int64_t l_1088 = 0L;
                int32_t l_1089 = (-1L);
                int32_t l_1090 = 0xC9311707L;
                int32_t l_1091 = 1L;
                int32_t l_1092 = 0xFABFA332L;
                int32_t l_1094[6] = {0xC9ECADCDL,0xC9ECADCDL,0xC9ECADCDL,0xC9ECADCDL,0xC9ECADCDL,0xC9ECADCDL};
                int16_t l_1136 = 0L;
                uint8_t l_1173 = 0x5AL;
                int16_t *l_1179 = (void*)0;
                int16_t **l_1178 = &l_1179;
                int16_t *** const l_1177[3][8] = {{&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178},{&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178},{&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178,&l_1178}};
                uint64_t **l_1212 = &g_526;
                int16_t l_1221 = 9L;
                uint16_t l_1250[9][4] = {{0x958CL,0x6A03L,0x66A6L,0x27F6L},{0x66A6L,0x27F6L,0x66A6L,0x6A03L},{0x958CL,0x27F6L,0x5DD3L,0x27F6L},{0x958CL,0x6A03L,0x66A6L,0x27F6L},{0x66A6L,0x27F6L,0x66A6L,0x6A03L},{0x958CL,0x27F6L,0x5DD3L,0x27F6L},{0x958CL,0x6A03L,0x66A6L,0x27F6L},{0x66A6L,0x27F6L,0x66A6L,0x6A03L},{0x958CL,0x27F6L,0x5DD3L,0x27F6L}};
                uint8_t *l_1257 = &l_682;
                int32_t *l_1271 = &g_1272[4];
                int32_t *l_1273 = &g_1274;
                const int8_t *l_1283 = &g_151[0][0][1];
                const int8_t **l_1282 = &l_1283;
                const int8_t ***l_1281 = &l_1282;
                int64_t l_1309[2];
                int8_t l_1427 = 9L;
                int i, j;
                for (i = 0; i < 2; i++)
                    l_1309[i] = 0xC967D57073B21EAALL;
            }
        }
        if (l_66)
            goto lbl_1724;
    }
    g_1726--;
    return (*g_1060);
}


/* ------------------------------------------ */
/* 
 * reads : g_90 g_96 g_55.f0 g_55.f1 g_55.f4 g_55.f3 g_85 g_151 g_148 g_55.f8 g_2 g_152 g_119 g_55.f2 g_55.f9 g_55.f7 g_5 g_60 g_182 g_92
 * writes: g_90 g_148 g_151 g_119 g_55.f2 g_182 g_195
 */
static int32_t * func_68(uint16_t  p_69, int16_t  p_70, uint8_t  p_71, uint32_t  p_72, uint32_t * p_73)
{ /* block id: 32 */
    int64_t l_108 = (-10L);
    int32_t l_117 = 0xF479F84CL;
    int32_t l_118[6];
    uint32_t l_120 = 18446744073709551615UL;
    uint64_t *l_179 = &g_148;
    int8_t *l_192 = &g_151[0][2][2];
    int8_t *l_194 = &g_182;
    int8_t **l_193[8][4] = {{&l_192,(void*)0,(void*)0,&l_192},{(void*)0,&l_192,&l_192,(void*)0},{&l_192,&l_192,&l_192,&l_194},{(void*)0,(void*)0,&l_194,&l_194},{&l_192,&l_192,&l_194,(void*)0},{(void*)0,(void*)0,&l_194,(void*)0},{&l_192,&l_192,&l_194,&l_194},{(void*)0,&l_192,&l_192,(void*)0}};
    int64_t *l_196 = &l_108;
    int32_t *l_197 = &l_117;
    int i, j;
    for (i = 0; i < 6; i++)
        l_118[i] = 0x967B2D6FL;
    for (p_70 = 0; (p_70 <= 2); p_70 += 1)
    { /* block id: 35 */
        int32_t *l_97 = &g_90;
        int32_t *l_98 = &g_90;
        int32_t *l_99 = (void*)0;
        int32_t *l_100 = &g_90;
        int32_t *l_101 = &g_90;
        int32_t *l_102 = &g_90;
        int32_t *l_103 = &g_90;
        int32_t l_104 = 0L;
        int32_t *l_105 = (void*)0;
        int32_t *l_106 = &l_104;
        int32_t *l_107 = &l_104;
        int32_t *l_109 = &g_90;
        int32_t *l_110 = &g_90;
        int32_t *l_111 = &g_90;
        int32_t *l_112 = &g_90;
        int32_t *l_113 = &g_90;
        int32_t *l_114 = &l_104;
        int32_t *l_115 = &g_90;
        int32_t *l_116[7] = {&g_2[2][1][0],&g_2[2][1][0],&g_5,&g_2[2][1][0],&g_2[2][1][0],&g_5,&g_2[2][1][0]};
        uint8_t l_146 = 0xB3L;
        int16_t l_180 = 0x9527L;
        int i;
        l_120++;
        for (g_90 = 2; (g_90 >= 0); g_90 -= 1)
        { /* block id: 39 */
            int64_t *l_145 = &l_108;
            uint64_t *l_147[2][10][10] = {{{&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148},{(void*)0,&g_148,(void*)0,(void*)0,(void*)0,&g_148,&g_148,&g_148,(void*)0,(void*)0},{(void*)0,&g_148,(void*)0,&g_148,(void*)0,&g_148,&g_148,&g_148,&g_148,&g_148},{(void*)0,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0,&g_148,&g_148,&g_148},{&g_148,&g_148,(void*)0,&g_148,&g_148,&g_148,(void*)0,&g_148,&g_148,(void*)0},{&g_148,&g_148,(void*)0,(void*)0,&g_148,(void*)0,(void*)0,&g_148,(void*)0,(void*)0},{(void*)0,(void*)0,&g_148,(void*)0,(void*)0,&g_148,&g_148,&g_148,&g_148,&g_148},{(void*)0,&g_148,&g_148,&g_148,(void*)0,&g_148,&g_148,(void*)0,&g_148,&g_148},{(void*)0,(void*)0,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0,&g_148,&g_148},{&g_148,&g_148,(void*)0,&g_148,(void*)0,&g_148,(void*)0,&g_148,(void*)0,&g_148}},{{&g_148,&g_148,(void*)0,(void*)0,(void*)0,&g_148,(void*)0,(void*)0,&g_148,(void*)0},{&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0,(void*)0},{&g_148,&g_148,&g_148,(void*)0,&g_148,&g_148,&g_148,&g_148,(void*)0,&g_148},{&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148},{(void*)0,&g_148,(void*)0,(void*)0,(void*)0,&g_148,&g_148,&g_148,(void*)0,(void*)0},{(void*)0,&g_148,(void*)0,&g_148,(void*)0,&g_148,&g_148,&g_148,&g_148,(void*)0},{&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0},{(void*)0,(void*)0,&g_148,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0,&g_148},{(void*)0,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,&g_148},{&g_148,&g_148,&g_148,&g_148,&g_148,&g_148,(void*)0,(void*)0,(void*)0,&g_148}}};
            int8_t *l_149 = (void*)0;
            int8_t *l_150 = &g_151[0][0][0];
            int32_t l_153 = (-9L);
            uint32_t *l_178[6][3] = {{&g_85,&g_85,&g_85},{&g_85,&g_85,&g_85},{&g_85,&g_85,&g_85},{&g_85,&g_85,&g_85},{&g_85,&g_85,&g_85},{&g_85,&g_85,&g_85}};
            int8_t *l_181 = &g_182;
            uint8_t *l_183 = &l_146;
            int32_t l_184 = (-6L);
            int i, j, k;
            (*l_106) |= ((safe_rshift_func_int8_t_s_u(((*l_150) &= (safe_mul_func_int16_t_s_s((((g_96[p_70] & (g_148 = ((safe_rshift_func_uint16_t_u_s((safe_sub_func_uint8_t_u_u((((safe_add_func_int16_t_s_s((safe_div_func_int64_t_s_s((safe_mul_func_int8_t_s_s((safe_rshift_func_int16_t_s_s(((safe_div_func_int8_t_s_s((-7L), (p_72 & (((void*)0 == p_73) && ((p_71 != ((safe_add_func_int64_t_s_s(g_55.f0, g_55.f1)) || (((*l_145) = (safe_rshift_func_int16_t_s_u(g_55.f4, 2))) > p_72))) > g_55.f0))))) || l_146), (*l_115))), l_118[3])), (-7L))), (-8L))) && 0x824790DEL) , 3UL), p_70)), 12)) & l_118[0]))) == g_55.f3) ^ p_70), g_85))), 6)) , g_148);
            l_114 = (g_55.f8 , &g_119[0][4]);
            (*l_114) |= ((g_2[2][1][0] , (g_152[2][1] & ((g_96[p_70] && l_153) && 0xEADF9545L))) ^ (safe_lshift_func_uint8_t_u_s(l_120, 5)));
            l_184 |= (((*l_183) = ((g_151[0][1][7] , ((+(safe_mul_func_int8_t_s_s((safe_sub_func_uint32_t_u_u(g_151[0][3][0], p_70)), ((((*l_181) ^= (safe_mul_func_int16_t_s_s(((!(l_118[1] > g_55.f0)) ^ ((((!(((safe_lshift_func_uint8_t_u_u(0x45L, p_69)) , (safe_mul_func_int16_t_s_s((safe_sub_func_int64_t_s_s((((g_55.f2 = ((*l_114) = (safe_mod_func_int32_t_s_s((safe_mul_func_int8_t_s_s((safe_add_func_int64_t_s_s((+(((0x3CCABF06CFF212B2LL & ((((*l_106) = (&g_151[0][0][0] != l_150)) , (*l_98)) | 4294967288UL)) == p_71) < g_55.f2)), 0xA619E33AE951E9A9LL)), l_153)), p_71)))) , l_147[0][8][5]) != l_179), 18446744073709551609UL)), g_55.f9))) | l_118[5])) > g_55.f7) != l_180) == g_5)), g_60))) , 0xC0ADD21D9937AC40LL) , 0xD1L)))) == g_96[p_70])) >= p_71)) <= 0x40L);
        }
    }
    (*l_197) &= (((((l_118[4] ^ ((((!((safe_rshift_func_int16_t_s_s(g_92, l_118[0])) & 0L)) & ((0xA36B31EAL == ((safe_mod_func_uint64_t_u_u((safe_sub_func_int8_t_s_s((l_192 != (g_195 = l_192)), 0x45L)), ((*l_196) = ((p_69 || 1L) | 255UL)))) <= p_70)) || g_182)) ^ g_151[0][1][5]) != 7UL)) & l_120) < l_118[3]) && p_69) != l_118[0]);
    return p_73;
}


/* ------------------------------------------ */
/* 
 * reads : g_92 g_60
 * writes: g_92
 */
static int32_t  func_76(int32_t * p_77, int32_t * p_78, uint32_t  p_79, int8_t  p_80, int16_t  p_81)
{ /* block id: 27 */
    int32_t *l_89 = &g_90;
    int32_t *l_91[1][6];
    int i, j;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 6; j++)
            l_91[i][j] = (void*)0;
    }
    p_78 = p_78;
    ++g_92;
    return (*p_77);
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 6; j++)
        {
            for (k = 0; k < 3; k++)
            {
                transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_5, "g_5", print_hash_value);
    transparent_crc(g_43, "g_43", print_hash_value);
    transparent_crc(g_54, "g_54", print_hash_value);
    transparent_crc(g_55.f0, "g_55.f0", print_hash_value);
    transparent_crc(g_55.f1, "g_55.f1", print_hash_value);
    transparent_crc(g_55.f2, "g_55.f2", print_hash_value);
    transparent_crc(g_55.f3, "g_55.f3", print_hash_value);
    transparent_crc(g_55.f4, "g_55.f4", print_hash_value);
    transparent_crc(g_55.f5, "g_55.f5", print_hash_value);
    transparent_crc(g_55.f6, "g_55.f6", print_hash_value);
    transparent_crc(g_55.f7, "g_55.f7", print_hash_value);
    transparent_crc(g_55.f8, "g_55.f8", print_hash_value);
    transparent_crc(g_55.f9, "g_55.f9", print_hash_value);
    transparent_crc(g_60, "g_60", print_hash_value);
    transparent_crc(g_85, "g_85", print_hash_value);
    transparent_crc(g_90, "g_90", print_hash_value);
    transparent_crc(g_92, "g_92", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_96[i], "g_96[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 6; j++)
        {
            transparent_crc(g_119[i][j], "g_119[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_148, "g_148", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 9; k++)
            {
                transparent_crc(g_151[i][j][k], "g_151[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 6; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_152[i][j], "g_152[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_182, "g_182", print_hash_value);
    transparent_crc(g_224, "g_224", print_hash_value);
    transparent_crc(g_280, "g_280", print_hash_value);
    transparent_crc(g_309, "g_309", print_hash_value);
    transparent_crc(g_329, "g_329", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 5; j++)
        {
            transparent_crc(g_371[i][j].f0, "g_371[i][j].f0", print_hash_value);
            transparent_crc(g_371[i][j].f1, "g_371[i][j].f1", print_hash_value);
            transparent_crc(g_371[i][j].f2, "g_371[i][j].f2", print_hash_value);
            transparent_crc(g_371[i][j].f3, "g_371[i][j].f3", print_hash_value);
            transparent_crc(g_371[i][j].f4, "g_371[i][j].f4", print_hash_value);
            transparent_crc(g_371[i][j].f5, "g_371[i][j].f5", print_hash_value);
            transparent_crc(g_371[i][j].f6, "g_371[i][j].f6", print_hash_value);
            transparent_crc(g_371[i][j].f7, "g_371[i][j].f7", print_hash_value);
            transparent_crc(g_371[i][j].f8, "g_371[i][j].f8", print_hash_value);
            transparent_crc(g_371[i][j].f9, "g_371[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 4; j++)
        {
            for (k = 0; k < 2; k++)
            {
                transparent_crc(g_383[i][j][k], "g_383[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_420, "g_420", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_442[i].f0, "g_442[i].f0", print_hash_value);
        transparent_crc(g_442[i].f1, "g_442[i].f1", print_hash_value);
        transparent_crc(g_442[i].f2, "g_442[i].f2", print_hash_value);
        transparent_crc(g_442[i].f3, "g_442[i].f3", print_hash_value);
        transparent_crc(g_442[i].f4, "g_442[i].f4", print_hash_value);
        transparent_crc(g_442[i].f5, "g_442[i].f5", print_hash_value);
        transparent_crc(g_442[i].f6, "g_442[i].f6", print_hash_value);
        transparent_crc(g_442[i].f7, "g_442[i].f7", print_hash_value);
        transparent_crc(g_442[i].f8, "g_442[i].f8", print_hash_value);
        transparent_crc(g_442[i].f9, "g_442[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_468, "g_468", print_hash_value);
    transparent_crc(g_484, "g_484", print_hash_value);
    transparent_crc(g_501, "g_501", print_hash_value);
    transparent_crc(g_511, "g_511", print_hash_value);
    transparent_crc(g_570.f0, "g_570.f0", print_hash_value);
    transparent_crc(g_570.f1, "g_570.f1", print_hash_value);
    transparent_crc(g_570.f2, "g_570.f2", print_hash_value);
    transparent_crc(g_570.f3, "g_570.f3", print_hash_value);
    transparent_crc(g_570.f4, "g_570.f4", print_hash_value);
    transparent_crc(g_570.f5, "g_570.f5", print_hash_value);
    transparent_crc(g_570.f6, "g_570.f6", print_hash_value);
    transparent_crc(g_570.f7, "g_570.f7", print_hash_value);
    transparent_crc(g_570.f8, "g_570.f8", print_hash_value);
    transparent_crc(g_570.f9, "g_570.f9", print_hash_value);
    transparent_crc(g_644.f0, "g_644.f0", print_hash_value);
    transparent_crc(g_644.f1, "g_644.f1", print_hash_value);
    transparent_crc(g_644.f2, "g_644.f2", print_hash_value);
    transparent_crc(g_644.f3, "g_644.f3", print_hash_value);
    transparent_crc(g_644.f4, "g_644.f4", print_hash_value);
    transparent_crc(g_644.f5, "g_644.f5", print_hash_value);
    transparent_crc(g_644.f6, "g_644.f6", print_hash_value);
    transparent_crc(g_644.f7, "g_644.f7", print_hash_value);
    transparent_crc(g_644.f8, "g_644.f8", print_hash_value);
    transparent_crc(g_644.f9, "g_644.f9", print_hash_value);
    transparent_crc(g_673, "g_673", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_715[i][j].f0, "g_715[i][j].f0", print_hash_value);
            transparent_crc(g_715[i][j].f1, "g_715[i][j].f1", print_hash_value);
            transparent_crc(g_715[i][j].f2, "g_715[i][j].f2", print_hash_value);
            transparent_crc(g_715[i][j].f3, "g_715[i][j].f3", print_hash_value);
            transparent_crc(g_715[i][j].f4, "g_715[i][j].f4", print_hash_value);
            transparent_crc(g_715[i][j].f5, "g_715[i][j].f5", print_hash_value);
            transparent_crc(g_715[i][j].f6, "g_715[i][j].f6", print_hash_value);
            transparent_crc(g_715[i][j].f7, "g_715[i][j].f7", print_hash_value);
            transparent_crc(g_715[i][j].f8, "g_715[i][j].f8", print_hash_value);
            transparent_crc(g_715[i][j].f9, "g_715[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_737.f0, "g_737.f0", print_hash_value);
    transparent_crc(g_737.f1, "g_737.f1", print_hash_value);
    transparent_crc(g_737.f2, "g_737.f2", print_hash_value);
    transparent_crc(g_737.f3, "g_737.f3", print_hash_value);
    transparent_crc(g_737.f4, "g_737.f4", print_hash_value);
    transparent_crc(g_737.f5, "g_737.f5", print_hash_value);
    transparent_crc(g_737.f6, "g_737.f6", print_hash_value);
    transparent_crc(g_737.f7, "g_737.f7", print_hash_value);
    transparent_crc(g_737.f8, "g_737.f8", print_hash_value);
    transparent_crc(g_737.f9, "g_737.f9", print_hash_value);
    transparent_crc(g_740.f0, "g_740.f0", print_hash_value);
    transparent_crc(g_740.f1, "g_740.f1", print_hash_value);
    transparent_crc(g_740.f2, "g_740.f2", print_hash_value);
    transparent_crc(g_740.f3, "g_740.f3", print_hash_value);
    transparent_crc(g_740.f4, "g_740.f4", print_hash_value);
    transparent_crc(g_740.f5, "g_740.f5", print_hash_value);
    transparent_crc(g_740.f6, "g_740.f6", print_hash_value);
    transparent_crc(g_740.f7, "g_740.f7", print_hash_value);
    transparent_crc(g_740.f8, "g_740.f8", print_hash_value);
    transparent_crc(g_740.f9, "g_740.f9", print_hash_value);
    transparent_crc(g_741.f0, "g_741.f0", print_hash_value);
    transparent_crc(g_741.f1, "g_741.f1", print_hash_value);
    transparent_crc(g_741.f2, "g_741.f2", print_hash_value);
    transparent_crc(g_741.f3, "g_741.f3", print_hash_value);
    transparent_crc(g_741.f4, "g_741.f4", print_hash_value);
    transparent_crc(g_741.f5, "g_741.f5", print_hash_value);
    transparent_crc(g_741.f6, "g_741.f6", print_hash_value);
    transparent_crc(g_741.f7, "g_741.f7", print_hash_value);
    transparent_crc(g_741.f8, "g_741.f8", print_hash_value);
    transparent_crc(g_741.f9, "g_741.f9", print_hash_value);
    transparent_crc(g_742.f0, "g_742.f0", print_hash_value);
    transparent_crc(g_742.f1, "g_742.f1", print_hash_value);
    transparent_crc(g_742.f2, "g_742.f2", print_hash_value);
    transparent_crc(g_742.f3, "g_742.f3", print_hash_value);
    transparent_crc(g_742.f4, "g_742.f4", print_hash_value);
    transparent_crc(g_742.f5, "g_742.f5", print_hash_value);
    transparent_crc(g_742.f6, "g_742.f6", print_hash_value);
    transparent_crc(g_742.f7, "g_742.f7", print_hash_value);
    transparent_crc(g_742.f8, "g_742.f8", print_hash_value);
    transparent_crc(g_742.f9, "g_742.f9", print_hash_value);
    transparent_crc(g_786.f0, "g_786.f0", print_hash_value);
    transparent_crc(g_786.f1, "g_786.f1", print_hash_value);
    transparent_crc(g_786.f2, "g_786.f2", print_hash_value);
    transparent_crc(g_786.f3, "g_786.f3", print_hash_value);
    transparent_crc(g_786.f4, "g_786.f4", print_hash_value);
    transparent_crc(g_786.f5, "g_786.f5", print_hash_value);
    transparent_crc(g_786.f6, "g_786.f6", print_hash_value);
    transparent_crc(g_786.f7, "g_786.f7", print_hash_value);
    transparent_crc(g_786.f8, "g_786.f8", print_hash_value);
    transparent_crc(g_786.f9, "g_786.f9", print_hash_value);
    transparent_crc(g_899, "g_899", print_hash_value);
    transparent_crc(g_958, "g_958", print_hash_value);
    transparent_crc(g_1026.f0, "g_1026.f0", print_hash_value);
    transparent_crc(g_1026.f1, "g_1026.f1", print_hash_value);
    transparent_crc(g_1026.f2, "g_1026.f2", print_hash_value);
    transparent_crc(g_1026.f3, "g_1026.f3", print_hash_value);
    transparent_crc(g_1026.f4, "g_1026.f4", print_hash_value);
    transparent_crc(g_1026.f5, "g_1026.f5", print_hash_value);
    transparent_crc(g_1026.f6, "g_1026.f6", print_hash_value);
    transparent_crc(g_1026.f7, "g_1026.f7", print_hash_value);
    transparent_crc(g_1026.f8, "g_1026.f8", print_hash_value);
    transparent_crc(g_1026.f9, "g_1026.f9", print_hash_value);
    transparent_crc(g_1043, "g_1043", print_hash_value);
    transparent_crc(g_1057, "g_1057", print_hash_value);
    transparent_crc(g_1058.f0, "g_1058.f0", print_hash_value);
    transparent_crc(g_1058.f1, "g_1058.f1", print_hash_value);
    transparent_crc(g_1058.f2, "g_1058.f2", print_hash_value);
    transparent_crc(g_1058.f3, "g_1058.f3", print_hash_value);
    transparent_crc(g_1058.f4, "g_1058.f4", print_hash_value);
    transparent_crc(g_1058.f5, "g_1058.f5", print_hash_value);
    transparent_crc(g_1058.f6, "g_1058.f6", print_hash_value);
    transparent_crc(g_1058.f7, "g_1058.f7", print_hash_value);
    transparent_crc(g_1058.f8, "g_1058.f8", print_hash_value);
    transparent_crc(g_1058.f9, "g_1058.f9", print_hash_value);
    transparent_crc(g_1147.f0, "g_1147.f0", print_hash_value);
    transparent_crc(g_1147.f1, "g_1147.f1", print_hash_value);
    transparent_crc(g_1147.f2, "g_1147.f2", print_hash_value);
    transparent_crc(g_1147.f3, "g_1147.f3", print_hash_value);
    transparent_crc(g_1147.f4, "g_1147.f4", print_hash_value);
    transparent_crc(g_1147.f5, "g_1147.f5", print_hash_value);
    transparent_crc(g_1147.f6, "g_1147.f6", print_hash_value);
    transparent_crc(g_1147.f7, "g_1147.f7", print_hash_value);
    transparent_crc(g_1147.f8, "g_1147.f8", print_hash_value);
    transparent_crc(g_1147.f9, "g_1147.f9", print_hash_value);
    transparent_crc(g_1157, "g_1157", print_hash_value);
    transparent_crc(g_1197.f0, "g_1197.f0", print_hash_value);
    transparent_crc(g_1197.f1, "g_1197.f1", print_hash_value);
    transparent_crc(g_1197.f2, "g_1197.f2", print_hash_value);
    transparent_crc(g_1197.f3, "g_1197.f3", print_hash_value);
    transparent_crc(g_1197.f4, "g_1197.f4", print_hash_value);
    transparent_crc(g_1197.f5, "g_1197.f5", print_hash_value);
    transparent_crc(g_1197.f6, "g_1197.f6", print_hash_value);
    transparent_crc(g_1197.f7, "g_1197.f7", print_hash_value);
    transparent_crc(g_1197.f8, "g_1197.f8", print_hash_value);
    transparent_crc(g_1197.f9, "g_1197.f9", print_hash_value);
    transparent_crc(g_1201, "g_1201", print_hash_value);
    transparent_crc(g_1237.f0, "g_1237.f0", print_hash_value);
    transparent_crc(g_1237.f1, "g_1237.f1", print_hash_value);
    transparent_crc(g_1237.f2, "g_1237.f2", print_hash_value);
    transparent_crc(g_1237.f3, "g_1237.f3", print_hash_value);
    transparent_crc(g_1237.f4, "g_1237.f4", print_hash_value);
    transparent_crc(g_1237.f5, "g_1237.f5", print_hash_value);
    transparent_crc(g_1237.f6, "g_1237.f6", print_hash_value);
    transparent_crc(g_1237.f7, "g_1237.f7", print_hash_value);
    transparent_crc(g_1237.f8, "g_1237.f8", print_hash_value);
    transparent_crc(g_1237.f9, "g_1237.f9", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        transparent_crc(g_1272[i], "g_1272[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1274, "g_1274", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_1408[i].f0, "g_1408[i].f0", print_hash_value);
        transparent_crc(g_1408[i].f1, "g_1408[i].f1", print_hash_value);
        transparent_crc(g_1408[i].f2, "g_1408[i].f2", print_hash_value);
        transparent_crc(g_1408[i].f3, "g_1408[i].f3", print_hash_value);
        transparent_crc(g_1408[i].f4, "g_1408[i].f4", print_hash_value);
        transparent_crc(g_1408[i].f5, "g_1408[i].f5", print_hash_value);
        transparent_crc(g_1408[i].f6, "g_1408[i].f6", print_hash_value);
        transparent_crc(g_1408[i].f7, "g_1408[i].f7", print_hash_value);
        transparent_crc(g_1408[i].f8, "g_1408[i].f8", print_hash_value);
        transparent_crc(g_1408[i].f9, "g_1408[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1423.f0, "g_1423.f0", print_hash_value);
    transparent_crc(g_1423.f1, "g_1423.f1", print_hash_value);
    transparent_crc(g_1423.f2, "g_1423.f2", print_hash_value);
    transparent_crc(g_1423.f3, "g_1423.f3", print_hash_value);
    transparent_crc(g_1423.f4, "g_1423.f4", print_hash_value);
    transparent_crc(g_1423.f5, "g_1423.f5", print_hash_value);
    transparent_crc(g_1423.f6, "g_1423.f6", print_hash_value);
    transparent_crc(g_1423.f7, "g_1423.f7", print_hash_value);
    transparent_crc(g_1423.f8, "g_1423.f8", print_hash_value);
    transparent_crc(g_1423.f9, "g_1423.f9", print_hash_value);
    transparent_crc(g_1726, "g_1726", print_hash_value);
    transparent_crc(g_1763, "g_1763", print_hash_value);
    transparent_crc(g_1768, "g_1768", print_hash_value);
    transparent_crc(g_1828.f0, "g_1828.f0", print_hash_value);
    transparent_crc(g_1828.f1, "g_1828.f1", print_hash_value);
    transparent_crc(g_1828.f2, "g_1828.f2", print_hash_value);
    transparent_crc(g_1828.f3, "g_1828.f3", print_hash_value);
    transparent_crc(g_1828.f4, "g_1828.f4", print_hash_value);
    transparent_crc(g_1828.f5, "g_1828.f5", print_hash_value);
    transparent_crc(g_1828.f6, "g_1828.f6", print_hash_value);
    transparent_crc(g_1828.f7, "g_1828.f7", print_hash_value);
    transparent_crc(g_1828.f8, "g_1828.f8", print_hash_value);
    transparent_crc(g_1828.f9, "g_1828.f9", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 9; j++)
        {
            transparent_crc(g_1979[i][j].f0, "g_1979[i][j].f0", print_hash_value);
            transparent_crc(g_1979[i][j].f1, "g_1979[i][j].f1", print_hash_value);
            transparent_crc(g_1979[i][j].f2, "g_1979[i][j].f2", print_hash_value);
            transparent_crc(g_1979[i][j].f3, "g_1979[i][j].f3", print_hash_value);
            transparent_crc(g_1979[i][j].f4, "g_1979[i][j].f4", print_hash_value);
            transparent_crc(g_1979[i][j].f5, "g_1979[i][j].f5", print_hash_value);
            transparent_crc(g_1979[i][j].f6, "g_1979[i][j].f6", print_hash_value);
            transparent_crc(g_1979[i][j].f7, "g_1979[i][j].f7", print_hash_value);
            transparent_crc(g_1979[i][j].f8, "g_1979[i][j].f8", print_hash_value);
            transparent_crc(g_1979[i][j].f9, "g_1979[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_2021.f0, "g_2021.f0", print_hash_value);
    transparent_crc(g_2021.f1, "g_2021.f1", print_hash_value);
    transparent_crc(g_2021.f2, "g_2021.f2", print_hash_value);
    transparent_crc(g_2021.f3, "g_2021.f3", print_hash_value);
    transparent_crc(g_2021.f4, "g_2021.f4", print_hash_value);
    transparent_crc(g_2021.f5, "g_2021.f5", print_hash_value);
    transparent_crc(g_2021.f6, "g_2021.f6", print_hash_value);
    transparent_crc(g_2021.f7, "g_2021.f7", print_hash_value);
    transparent_crc(g_2021.f8, "g_2021.f8", print_hash_value);
    transparent_crc(g_2021.f9, "g_2021.f9", print_hash_value);
    transparent_crc(g_2061, "g_2061", print_hash_value);
    transparent_crc(g_2069.f0, "g_2069.f0", print_hash_value);
    transparent_crc(g_2069.f1, "g_2069.f1", print_hash_value);
    transparent_crc(g_2069.f2, "g_2069.f2", print_hash_value);
    transparent_crc(g_2069.f3, "g_2069.f3", print_hash_value);
    transparent_crc(g_2069.f4, "g_2069.f4", print_hash_value);
    transparent_crc(g_2069.f5, "g_2069.f5", print_hash_value);
    transparent_crc(g_2069.f6, "g_2069.f6", print_hash_value);
    transparent_crc(g_2069.f7, "g_2069.f7", print_hash_value);
    transparent_crc(g_2069.f8, "g_2069.f8", print_hash_value);
    transparent_crc(g_2069.f9, "g_2069.f9", print_hash_value);
    transparent_crc(g_2155.f0, "g_2155.f0", print_hash_value);
    transparent_crc(g_2155.f1, "g_2155.f1", print_hash_value);
    transparent_crc(g_2155.f2, "g_2155.f2", print_hash_value);
    transparent_crc(g_2155.f3, "g_2155.f3", print_hash_value);
    transparent_crc(g_2155.f4, "g_2155.f4", print_hash_value);
    transparent_crc(g_2155.f5, "g_2155.f5", print_hash_value);
    transparent_crc(g_2155.f6, "g_2155.f6", print_hash_value);
    transparent_crc(g_2155.f7, "g_2155.f7", print_hash_value);
    transparent_crc(g_2155.f8, "g_2155.f8", print_hash_value);
    transparent_crc(g_2155.f9, "g_2155.f9", print_hash_value);
    transparent_crc(g_2215.f0, "g_2215.f0", print_hash_value);
    transparent_crc(g_2215.f1, "g_2215.f1", print_hash_value);
    transparent_crc(g_2215.f2, "g_2215.f2", print_hash_value);
    transparent_crc(g_2215.f3, "g_2215.f3", print_hash_value);
    transparent_crc(g_2215.f4, "g_2215.f4", print_hash_value);
    transparent_crc(g_2215.f5, "g_2215.f5", print_hash_value);
    transparent_crc(g_2215.f6, "g_2215.f6", print_hash_value);
    transparent_crc(g_2215.f7, "g_2215.f7", print_hash_value);
    transparent_crc(g_2215.f8, "g_2215.f8", print_hash_value);
    transparent_crc(g_2215.f9, "g_2215.f9", print_hash_value);
    transparent_crc(g_2307.f0, "g_2307.f0", print_hash_value);
    transparent_crc(g_2307.f1, "g_2307.f1", print_hash_value);
    transparent_crc(g_2307.f2, "g_2307.f2", print_hash_value);
    transparent_crc(g_2307.f3, "g_2307.f3", print_hash_value);
    transparent_crc(g_2307.f4, "g_2307.f4", print_hash_value);
    transparent_crc(g_2307.f5, "g_2307.f5", print_hash_value);
    transparent_crc(g_2307.f6, "g_2307.f6", print_hash_value);
    transparent_crc(g_2307.f7, "g_2307.f7", print_hash_value);
    transparent_crc(g_2307.f8, "g_2307.f8", print_hash_value);
    transparent_crc(g_2307.f9, "g_2307.f9", print_hash_value);
    transparent_crc(g_2378.f0, "g_2378.f0", print_hash_value);
    transparent_crc(g_2378.f1, "g_2378.f1", print_hash_value);
    transparent_crc(g_2378.f2, "g_2378.f2", print_hash_value);
    transparent_crc(g_2378.f3, "g_2378.f3", print_hash_value);
    transparent_crc(g_2378.f4, "g_2378.f4", print_hash_value);
    transparent_crc(g_2378.f5, "g_2378.f5", print_hash_value);
    transparent_crc(g_2378.f6, "g_2378.f6", print_hash_value);
    transparent_crc(g_2378.f7, "g_2378.f7", print_hash_value);
    transparent_crc(g_2378.f8, "g_2378.f8", print_hash_value);
    transparent_crc(g_2378.f9, "g_2378.f9", print_hash_value);
    transparent_crc(g_2591.f0, "g_2591.f0", print_hash_value);
    transparent_crc(g_2591.f1, "g_2591.f1", print_hash_value);
    transparent_crc(g_2591.f2, "g_2591.f2", print_hash_value);
    transparent_crc(g_2591.f3, "g_2591.f3", print_hash_value);
    transparent_crc(g_2591.f4, "g_2591.f4", print_hash_value);
    transparent_crc(g_2591.f5, "g_2591.f5", print_hash_value);
    transparent_crc(g_2591.f6, "g_2591.f6", print_hash_value);
    transparent_crc(g_2591.f7, "g_2591.f7", print_hash_value);
    transparent_crc(g_2591.f8, "g_2591.f8", print_hash_value);
    transparent_crc(g_2591.f9, "g_2591.f9", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        transparent_crc(g_2606[i].f0, "g_2606[i].f0", print_hash_value);
        transparent_crc(g_2606[i].f1, "g_2606[i].f1", print_hash_value);
        transparent_crc(g_2606[i].f2, "g_2606[i].f2", print_hash_value);
        transparent_crc(g_2606[i].f3, "g_2606[i].f3", print_hash_value);
        transparent_crc(g_2606[i].f4, "g_2606[i].f4", print_hash_value);
        transparent_crc(g_2606[i].f5, "g_2606[i].f5", print_hash_value);
        transparent_crc(g_2606[i].f6, "g_2606[i].f6", print_hash_value);
        transparent_crc(g_2606[i].f7, "g_2606[i].f7", print_hash_value);
        transparent_crc(g_2606[i].f8, "g_2606[i].f8", print_hash_value);
        transparent_crc(g_2606[i].f9, "g_2606[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_2618[i], "g_2618[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2642, "g_2642", print_hash_value);
    transparent_crc(g_2669, "g_2669", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_2706[i].f0, "g_2706[i].f0", print_hash_value);
        transparent_crc(g_2706[i].f1, "g_2706[i].f1", print_hash_value);
        transparent_crc(g_2706[i].f2, "g_2706[i].f2", print_hash_value);
        transparent_crc(g_2706[i].f3, "g_2706[i].f3", print_hash_value);
        transparent_crc(g_2706[i].f4, "g_2706[i].f4", print_hash_value);
        transparent_crc(g_2706[i].f5, "g_2706[i].f5", print_hash_value);
        transparent_crc(g_2706[i].f6, "g_2706[i].f6", print_hash_value);
        transparent_crc(g_2706[i].f7, "g_2706[i].f7", print_hash_value);
        transparent_crc(g_2706[i].f8, "g_2706[i].f8", print_hash_value);
        transparent_crc(g_2706[i].f9, "g_2706[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2796.f0, "g_2796.f0", print_hash_value);
    transparent_crc(g_2796.f1, "g_2796.f1", print_hash_value);
    transparent_crc(g_2796.f2, "g_2796.f2", print_hash_value);
    transparent_crc(g_2796.f3, "g_2796.f3", print_hash_value);
    transparent_crc(g_2796.f4, "g_2796.f4", print_hash_value);
    transparent_crc(g_2796.f5, "g_2796.f5", print_hash_value);
    transparent_crc(g_2796.f6, "g_2796.f6", print_hash_value);
    transparent_crc(g_2796.f7, "g_2796.f7", print_hash_value);
    transparent_crc(g_2796.f8, "g_2796.f8", print_hash_value);
    transparent_crc(g_2796.f9, "g_2796.f9", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_2826[i], "g_2826[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2859.f0, "g_2859.f0", print_hash_value);
    transparent_crc(g_2859.f1, "g_2859.f1", print_hash_value);
    transparent_crc(g_2859.f2, "g_2859.f2", print_hash_value);
    transparent_crc(g_2859.f3, "g_2859.f3", print_hash_value);
    transparent_crc(g_2859.f4, "g_2859.f4", print_hash_value);
    transparent_crc(g_2859.f5, "g_2859.f5", print_hash_value);
    transparent_crc(g_2859.f6, "g_2859.f6", print_hash_value);
    transparent_crc(g_2859.f7, "g_2859.f7", print_hash_value);
    transparent_crc(g_2859.f8, "g_2859.f8", print_hash_value);
    transparent_crc(g_2859.f9, "g_2859.f9", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 3; j++)
        {
            for (k = 0; k < 5; k++)
            {
                transparent_crc(g_2918[i][j][k].f0, "g_2918[i][j][k].f0", print_hash_value);
                transparent_crc(g_2918[i][j][k].f1, "g_2918[i][j][k].f1", print_hash_value);
                transparent_crc(g_2918[i][j][k].f2, "g_2918[i][j][k].f2", print_hash_value);
                transparent_crc(g_2918[i][j][k].f3, "g_2918[i][j][k].f3", print_hash_value);
                transparent_crc(g_2918[i][j][k].f4, "g_2918[i][j][k].f4", print_hash_value);
                transparent_crc(g_2918[i][j][k].f5, "g_2918[i][j][k].f5", print_hash_value);
                transparent_crc(g_2918[i][j][k].f6, "g_2918[i][j][k].f6", print_hash_value);
                transparent_crc(g_2918[i][j][k].f7, "g_2918[i][j][k].f7", print_hash_value);
                transparent_crc(g_2918[i][j][k].f8, "g_2918[i][j][k].f8", print_hash_value);
                transparent_crc(g_2918[i][j][k].f9, "g_2918[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_3009.f0, "g_3009.f0", print_hash_value);
    transparent_crc(g_3009.f1, "g_3009.f1", print_hash_value);
    transparent_crc(g_3009.f2, "g_3009.f2", print_hash_value);
    transparent_crc(g_3009.f3, "g_3009.f3", print_hash_value);
    transparent_crc(g_3009.f4, "g_3009.f4", print_hash_value);
    transparent_crc(g_3009.f5, "g_3009.f5", print_hash_value);
    transparent_crc(g_3009.f6, "g_3009.f6", print_hash_value);
    transparent_crc(g_3009.f7, "g_3009.f7", print_hash_value);
    transparent_crc(g_3009.f8, "g_3009.f8", print_hash_value);
    transparent_crc(g_3009.f9, "g_3009.f9", print_hash_value);
    transparent_crc(g_3031, "g_3031", print_hash_value);
    transparent_crc(g_3118, "g_3118", print_hash_value);
    transparent_crc(g_3165.f0, "g_3165.f0", print_hash_value);
    transparent_crc(g_3165.f1, "g_3165.f1", print_hash_value);
    transparent_crc(g_3165.f2, "g_3165.f2", print_hash_value);
    transparent_crc(g_3165.f3, "g_3165.f3", print_hash_value);
    transparent_crc(g_3165.f4, "g_3165.f4", print_hash_value);
    transparent_crc(g_3165.f5, "g_3165.f5", print_hash_value);
    transparent_crc(g_3165.f6, "g_3165.f6", print_hash_value);
    transparent_crc(g_3165.f7, "g_3165.f7", print_hash_value);
    transparent_crc(g_3165.f8, "g_3165.f8", print_hash_value);
    transparent_crc(g_3165.f9, "g_3165.f9", print_hash_value);
    transparent_crc(g_3186, "g_3186", print_hash_value);
    transparent_crc(g_3292, "g_3292", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_3301[i], "g_3301[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_3309, "g_3309", print_hash_value);
    transparent_crc(g_3314.f0, "g_3314.f0", print_hash_value);
    transparent_crc(g_3314.f1, "g_3314.f1", print_hash_value);
    transparent_crc(g_3314.f2, "g_3314.f2", print_hash_value);
    transparent_crc(g_3314.f3, "g_3314.f3", print_hash_value);
    transparent_crc(g_3314.f4, "g_3314.f4", print_hash_value);
    transparent_crc(g_3314.f5, "g_3314.f5", print_hash_value);
    transparent_crc(g_3314.f6, "g_3314.f6", print_hash_value);
    transparent_crc(g_3314.f7, "g_3314.f7", print_hash_value);
    transparent_crc(g_3314.f8, "g_3314.f8", print_hash_value);
    transparent_crc(g_3314.f9, "g_3314.f9", print_hash_value);
    transparent_crc(g_3344.f0, "g_3344.f0", print_hash_value);
    transparent_crc(g_3344.f1, "g_3344.f1", print_hash_value);
    transparent_crc(g_3344.f2, "g_3344.f2", print_hash_value);
    transparent_crc(g_3344.f3, "g_3344.f3", print_hash_value);
    transparent_crc(g_3344.f4, "g_3344.f4", print_hash_value);
    transparent_crc(g_3344.f5, "g_3344.f5", print_hash_value);
    transparent_crc(g_3344.f6, "g_3344.f6", print_hash_value);
    transparent_crc(g_3344.f7, "g_3344.f7", print_hash_value);
    transparent_crc(g_3344.f8, "g_3344.f8", print_hash_value);
    transparent_crc(g_3344.f9, "g_3344.f9", print_hash_value);
    transparent_crc(g_3511, "g_3511", print_hash_value);
    transparent_crc(g_3545, "g_3545", print_hash_value);
    transparent_crc(g_3546.f0, "g_3546.f0", print_hash_value);
    transparent_crc(g_3546.f1, "g_3546.f1", print_hash_value);
    transparent_crc(g_3546.f2, "g_3546.f2", print_hash_value);
    transparent_crc(g_3546.f3, "g_3546.f3", print_hash_value);
    transparent_crc(g_3546.f4, "g_3546.f4", print_hash_value);
    transparent_crc(g_3546.f5, "g_3546.f5", print_hash_value);
    transparent_crc(g_3546.f6, "g_3546.f6", print_hash_value);
    transparent_crc(g_3546.f7, "g_3546.f7", print_hash_value);
    transparent_crc(g_3546.f8, "g_3546.f8", print_hash_value);
    transparent_crc(g_3546.f9, "g_3546.f9", print_hash_value);
    transparent_crc(g_3628.f0, "g_3628.f0", print_hash_value);
    transparent_crc(g_3628.f1, "g_3628.f1", print_hash_value);
    transparent_crc(g_3628.f2, "g_3628.f2", print_hash_value);
    transparent_crc(g_3628.f3, "g_3628.f3", print_hash_value);
    transparent_crc(g_3628.f4, "g_3628.f4", print_hash_value);
    transparent_crc(g_3628.f5, "g_3628.f5", print_hash_value);
    transparent_crc(g_3628.f6, "g_3628.f6", print_hash_value);
    transparent_crc(g_3628.f7, "g_3628.f7", print_hash_value);
    transparent_crc(g_3628.f8, "g_3628.f8", print_hash_value);
    transparent_crc(g_3628.f9, "g_3628.f9", print_hash_value);
    transparent_crc(g_3636.f0, "g_3636.f0", print_hash_value);
    transparent_crc(g_3636.f1, "g_3636.f1", print_hash_value);
    transparent_crc(g_3636.f2, "g_3636.f2", print_hash_value);
    transparent_crc(g_3636.f3, "g_3636.f3", print_hash_value);
    transparent_crc(g_3636.f4, "g_3636.f4", print_hash_value);
    transparent_crc(g_3636.f5, "g_3636.f5", print_hash_value);
    transparent_crc(g_3636.f6, "g_3636.f6", print_hash_value);
    transparent_crc(g_3636.f7, "g_3636.f7", print_hash_value);
    transparent_crc(g_3636.f8, "g_3636.f8", print_hash_value);
    transparent_crc(g_3636.f9, "g_3636.f9", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_3658[i], "g_3658[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_3676[i][j].f0, "g_3676[i][j].f0", print_hash_value);
            transparent_crc(g_3676[i][j].f1, "g_3676[i][j].f1", print_hash_value);
            transparent_crc(g_3676[i][j].f2, "g_3676[i][j].f2", print_hash_value);
            transparent_crc(g_3676[i][j].f3, "g_3676[i][j].f3", print_hash_value);
            transparent_crc(g_3676[i][j].f4, "g_3676[i][j].f4", print_hash_value);
            transparent_crc(g_3676[i][j].f5, "g_3676[i][j].f5", print_hash_value);
            transparent_crc(g_3676[i][j].f6, "g_3676[i][j].f6", print_hash_value);
            transparent_crc(g_3676[i][j].f7, "g_3676[i][j].f7", print_hash_value);
            transparent_crc(g_3676[i][j].f8, "g_3676[i][j].f8", print_hash_value);
            transparent_crc(g_3676[i][j].f9, "g_3676[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_3732.f0, "g_3732.f0", print_hash_value);
    transparent_crc(g_3732.f1, "g_3732.f1", print_hash_value);
    transparent_crc(g_3732.f2, "g_3732.f2", print_hash_value);
    transparent_crc(g_3732.f3, "g_3732.f3", print_hash_value);
    transparent_crc(g_3732.f4, "g_3732.f4", print_hash_value);
    transparent_crc(g_3732.f5, "g_3732.f5", print_hash_value);
    transparent_crc(g_3732.f6, "g_3732.f6", print_hash_value);
    transparent_crc(g_3732.f7, "g_3732.f7", print_hash_value);
    transparent_crc(g_3732.f8, "g_3732.f8", print_hash_value);
    transparent_crc(g_3732.f9, "g_3732.f9", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 7; j++)
        {
            transparent_crc(g_3773[i][j].f0, "g_3773[i][j].f0", print_hash_value);
            transparent_crc(g_3773[i][j].f1, "g_3773[i][j].f1", print_hash_value);
            transparent_crc(g_3773[i][j].f2, "g_3773[i][j].f2", print_hash_value);
            transparent_crc(g_3773[i][j].f3, "g_3773[i][j].f3", print_hash_value);
            transparent_crc(g_3773[i][j].f4, "g_3773[i][j].f4", print_hash_value);
            transparent_crc(g_3773[i][j].f5, "g_3773[i][j].f5", print_hash_value);
            transparent_crc(g_3773[i][j].f6, "g_3773[i][j].f6", print_hash_value);
            transparent_crc(g_3773[i][j].f7, "g_3773[i][j].f7", print_hash_value);
            transparent_crc(g_3773[i][j].f8, "g_3773[i][j].f8", print_hash_value);
            transparent_crc(g_3773[i][j].f9, "g_3773[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_3816.f0, "g_3816.f0", print_hash_value);
    transparent_crc(g_3816.f1, "g_3816.f1", print_hash_value);
    transparent_crc(g_3816.f2, "g_3816.f2", print_hash_value);
    transparent_crc(g_3816.f3, "g_3816.f3", print_hash_value);
    transparent_crc(g_3816.f4, "g_3816.f4", print_hash_value);
    transparent_crc(g_3816.f5, "g_3816.f5", print_hash_value);
    transparent_crc(g_3816.f6, "g_3816.f6", print_hash_value);
    transparent_crc(g_3816.f7, "g_3816.f7", print_hash_value);
    transparent_crc(g_3816.f8, "g_3816.f8", print_hash_value);
    transparent_crc(g_3816.f9, "g_3816.f9", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 875
   depth: 1, occurrence: 36
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 9
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 1
XXX volatile bitfields defined in structs: 2
XXX structs with bitfields in the program: 66
breakdown:
   indirect level: 0, occurrence: 36
   indirect level: 1, occurrence: 12
   indirect level: 2, occurrence: 6
   indirect level: 3, occurrence: 6
   indirect level: 4, occurrence: 2
   indirect level: 5, occurrence: 4
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 17
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 40
XXX times a single bitfield on LHS: 8
XXX times a single bitfield on RHS: 144

XXX max expression depth: 36
breakdown:
   depth: 1, occurrence: 63
   depth: 2, occurrence: 22
   depth: 3, occurrence: 3
   depth: 5, occurrence: 2
   depth: 7, occurrence: 1
   depth: 21, occurrence: 1
   depth: 22, occurrence: 1
   depth: 26, occurrence: 1
   depth: 27, occurrence: 3
   depth: 30, occurrence: 1
   depth: 36, occurrence: 2

XXX total number of pointers: 708

XXX times a variable address is taken: 1559
XXX times a pointer is dereferenced on RHS: 554
breakdown:
   depth: 1, occurrence: 439
   depth: 2, occurrence: 100
   depth: 3, occurrence: 15
XXX times a pointer is dereferenced on LHS: 461
breakdown:
   depth: 1, occurrence: 398
   depth: 2, occurrence: 38
   depth: 3, occurrence: 23
   depth: 4, occurrence: 2
XXX times a pointer is compared with null: 62
XXX times a pointer is compared with address of another variable: 15
XXX times a pointer is compared with another pointer: 29
XXX times a pointer is qualified to be dereferenced: 15555

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 2396
   level: 2, occurrence: 479
   level: 3, occurrence: 131
   level: 4, occurrence: 22
   level: 5, occurrence: 23
XXX number of pointers point to pointers: 301
XXX number of pointers point to scalars: 392
XXX number of pointers point to structs: 15
XXX percent of pointers has null in alias set: 28.8
XXX average alias set size: 1.56

XXX times a non-volatile is read: 2955
XXX times a non-volatile is write: 1394
XXX times a volatile is read: 213
XXX    times read thru a pointer: 47
XXX times a volatile is write: 35
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 1.21e+04
XXX percentage of non-volatile access: 94.6

XXX forward jumps: 3
XXX backward jumps: 24

XXX stmts: 69
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 29
   depth: 1, occurrence: 12
   depth: 2, occurrence: 14
   depth: 3, occurrence: 8
   depth: 4, occurrence: 4
   depth: 5, occurrence: 2

XXX percentage a fresh-made variable is used: 14.5
XXX percentage an existing variable is used: 85.5
FYI: the random generator makes assumptions about the integer size. See platform.info for more details.
********************* end of statistics **********************/

