/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/jolly_mietner.cpp
 * Seed:      239143057
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
#pragma pack(push)
#pragma pack(1)
struct S0 {
   int64_t  f0;
   int64_t  f1;
   int64_t  f2;
   volatile uint64_t  f3;
   const unsigned f4 : 22;
   unsigned f5 : 25;
};
#pragma pack(pop)

union U1 {
   const volatile uint16_t  f0;
   int16_t  f1;
   int8_t  f2;
   int16_t  f3;
};

union U2 {
   uint16_t  f0;
   const volatile int32_t  f1;
   const int16_t  f2;
   const int64_t  f3;
   volatile uint8_t  f4;
};

/* --- GLOBAL VARIABLES --- */
static int32_t g_2[7] = {0xFCB143E9L,0xFCB143E9L,0xFCB143E9L,0xFCB143E9L,0xFCB143E9L,0xFCB143E9L,0xFCB143E9L};
static int32_t *g_7 = (void*)0;
static int32_t ** volatile g_10 = (void*)0;/* VOLATILE GLOBAL g_10 */
static union U1 g_18 = {65531UL};/* VOLATILE GLOBAL g_18 */
static int32_t g_29[6][2][8] = {{{0L,0xB25631CDL,0x18394D25L,5L,(-7L),0x0BCA0BECL,(-7L),5L},{0x6B221494L,3L,0x6B221494L,0xC6DCFF2FL,5L,0x0BCA0BECL,0x18394D25L,0x18394D25L}},{{0x18394D25L,0xB25631CDL,0L,0L,0xB25631CDL,0x18394D25L,5L,(-7L)},{0x18394D25L,6L,0x72157666L,0xB25631CDL,5L,0xB25631CDL,0x72157666L,6L}},{{0x6B221494L,0x72157666L,0x0BCA0BECL,0xB25631CDL,(-7L),0xC6DCFF2FL,0xC6DCFF2FL,0xC6DCFF2FL},{(-7L),0xC6DCFF2FL,0xC6DCFF2FL,(-7L),0xB25631CDL,0x0BCA0BECL,0x72157666L,0x6B221494L}},{{3L,(-7L),0x18394D25L,0x72157666L,0x18394D25L,(-7L),3L,6L},{0x18394D25L,(-7L),3L,6L,0x0BCA0BECL,0x0BCA0BECL,6L,3L}},{{0xC6DCFF2FL,0xC6DCFF2FL,(-7L),0xB25631CDL,0x0BCA0BECL,0x72157666L,0x6B221494L,0x72157666L},{0x18394D25L,3L,0xB25631CDL,3L,0x18394D25L,0L,0xC6DCFF2FL,0x72157666L}},{{3L,0x0BCA0BECL,0x6B221494L,0xB25631CDL,0xB25631CDL,0x6B221494L,0x0BCA0BECL,3L},{(-7L),0L,0x6B221494L,6L,0xC6DCFF2FL,0x18394D25L,0xC6DCFF2FL,6L}}};
static int32_t * const g_28 = &g_29[4][0][1];
static int32_t * const *g_27 = &g_28;
static int32_t g_32 = 0x1F356D9DL;
static uint32_t g_48 = 18446744073709551610UL;
static uint32_t g_76[4][6] = {{0x551B70F8L,0x8960BD9BL,0xB399D6DBL,0xB399D6DBL,0x8960BD9BL,0x551B70F8L},{0x6FC49175L,0x551B70F8L,0xAAD19DDAL,0x8960BD9BL,0xAAD19DDAL,0x551B70F8L},{0xAAD19DDAL,0x6FC49175L,0xB399D6DBL,0x493A7809L,0x493A7809L,0xB399D6DBL},{0xAAD19DDAL,0xAAD19DDAL,0x493A7809L,0x8960BD9BL,1UL,0x8960BD9BL}};
static int64_t g_85 = 0xB766298A20B4D66FLL;
static uint8_t g_114 = 0xB7L;
static uint32_t g_147 = 0x3372F705L;
static uint32_t *g_146[7] = {&g_147,&g_147,&g_147,&g_147,&g_147,&g_147,&g_147};
static uint8_t g_151 = 9UL;
static uint64_t g_164 = 18446744073709551615UL;
static uint64_t g_179 = 1UL;
static int32_t **g_180 = (void*)0;
static int16_t g_194 = 0L;
static int16_t *g_237 = &g_194;
static union U2 g_241 = {0xC1E0L};/* VOLATILE GLOBAL g_241 */
static union U2 g_242 = {65535UL};/* VOLATILE GLOBAL g_242 */
static union U2 g_243 = {0xFFE6L};/* VOLATILE GLOBAL g_243 */
static union U2 g_244 = {65535UL};/* VOLATILE GLOBAL g_244 */
static union U2 g_245 = {65534UL};/* VOLATILE GLOBAL g_245 */
static union U2 g_246[10] = {{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL},{0x9FCBL}};
static union U2 g_247 = {1UL};/* VOLATILE GLOBAL g_247 */
static union U2 g_248 = {65527UL};/* VOLATILE GLOBAL g_248 */
static union U2 g_249 = {0x0BF8L};/* VOLATILE GLOBAL g_249 */
static union U2 g_250[3] = {{0xD7C6L},{0xD7C6L},{0xD7C6L}};
static union U2 g_251[3][7][1] = {{{{9UL}},{{0x16E1L}},{{65526UL}},{{9UL}},{{1UL}},{{1UL}},{{9UL}}},{{{65526UL}},{{0x16E1L}},{{9UL}},{{0x16E1L}},{{65526UL}},{{9UL}},{{1UL}}},{{{1UL}},{{9UL}},{{65526UL}},{{0x16E1L}},{{9UL}},{{0x16E1L}},{{65526UL}}}};
static union U2 g_252[4][4] = {{{0x8E0EL},{5UL},{5UL},{0x8E0EL}},{{5UL},{0x8E0EL},{65527UL},{0x5388L}},{{5UL},{65527UL},{5UL},{65535UL}},{{0x8E0EL},{0x5388L},{65535UL},{65535UL}}};
static union U2 g_253[6] = {{65530UL},{65530UL},{65530UL},{65530UL},{65530UL},{65530UL}};
static union U2 g_254 = {65530UL};/* VOLATILE GLOBAL g_254 */
static union U2 g_255 = {0x82A8L};/* VOLATILE GLOBAL g_255 */
static union U2 g_256 = {1UL};/* VOLATILE GLOBAL g_256 */
static union U2 g_257 = {0x9ED3L};/* VOLATILE GLOBAL g_257 */
static union U2 g_258 = {0UL};/* VOLATILE GLOBAL g_258 */
static union U2 g_259[10][6] = {{{0x0337L},{0xA3A8L},{0x0337L},{4UL},{0x5516L},{0x5516L}},{{65535UL},{0x0337L},{0x0337L},{65535UL},{0xA3A8L},{0x8F7AL}},{{0x8F7AL},{65535UL},{0x5516L},{65535UL},{0x8F7AL},{4UL}},{{65535UL},{0x8F7AL},{4UL},{4UL},{0x8F7AL},{65535UL}},{{0x0337L},{65535UL},{0xA3A8L},{0x8F7AL},{0xA3A8L},{65535UL}},{{0xA3A8L},{0x0337L},{4UL},{0x5516L},{0x5516L},{4UL}},{{0xA3A8L},{0xA3A8L},{0x5516L},{0x8F7AL},{1UL},{0x8F7AL}},{{0x0337L},{0xA3A8L},{0x0337L},{4UL},{0x5516L},{0xA3A8L}},{{0x0337L},{0x8F7AL},{0x8F7AL},{0x0337L},{1UL},{4UL}},{{4UL},{0x0337L},{0xA3A8L},{0x0337L},{4UL},{0x5516L}}};
static union U2 g_260 = {0x7011L};/* VOLATILE GLOBAL g_260 */
static union U2 g_261 = {0x4249L};/* VOLATILE GLOBAL g_261 */
static union U2 g_262 = {0x0012L};/* VOLATILE GLOBAL g_262 */
static union U2 g_263 = {0x9AB2L};/* VOLATILE GLOBAL g_263 */
static union U2 g_264 = {0x8F18L};/* VOLATILE GLOBAL g_264 */
static union U2 g_265 = {0x4388L};/* VOLATILE GLOBAL g_265 */
static union U2 g_266[1] = {{65531UL}};
static union U2 g_267 = {0x5F07L};/* VOLATILE GLOBAL g_267 */
static union U2 g_268 = {1UL};/* VOLATILE GLOBAL g_268 */
static union U2 g_269 = {0x9182L};/* VOLATILE GLOBAL g_269 */
static union U2 g_270 = {65529UL};/* VOLATILE GLOBAL g_270 */
static union U2 g_271[8][3] = {{{65529UL},{0xEB1FL},{65529UL}},{{65535UL},{65535UL},{65535UL}},{{65529UL},{0xEB1FL},{65529UL}},{{65535UL},{65535UL},{65535UL}},{{65529UL},{0xEB1FL},{65529UL}},{{65535UL},{65535UL},{65535UL}},{{65529UL},{0xEB1FL},{65529UL}},{{65535UL},{65535UL},{65535UL}}};
static union U2 g_272 = {1UL};/* VOLATILE GLOBAL g_272 */
static union U2 g_273 = {1UL};/* VOLATILE GLOBAL g_273 */
static union U2 g_274 = {65535UL};/* VOLATILE GLOBAL g_274 */
static union U2 g_275 = {0xDEF3L};/* VOLATILE GLOBAL g_275 */
static union U2 g_276 = {65535UL};/* VOLATILE GLOBAL g_276 */
static union U2 g_277 = {0x6F4AL};/* VOLATILE GLOBAL g_277 */
static union U2 g_278 = {0UL};/* VOLATILE GLOBAL g_278 */
static union U2 g_279[3] = {{65535UL},{65535UL},{65535UL}};
static union U2 g_280 = {65535UL};/* VOLATILE GLOBAL g_280 */
static union U2 g_281 = {0x34C1L};/* VOLATILE GLOBAL g_281 */
static union U2 g_282 = {0xD454L};/* VOLATILE GLOBAL g_282 */
static union U2 g_283 = {0xC66CL};/* VOLATILE GLOBAL g_283 */
static union U2 g_284[4][1][8] = {{{{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL}}},{{{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL}}},{{{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL}}},{{{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL},{5UL}}}};
static union U2 g_285 = {65528UL};/* VOLATILE GLOBAL g_285 */
static union U2 g_286[1] = {{0xC590L}};
static union U2 g_287 = {65535UL};/* VOLATILE GLOBAL g_287 */
static union U2 g_288 = {0x5DB7L};/* VOLATILE GLOBAL g_288 */
static union U2 g_289 = {0xF60BL};/* VOLATILE GLOBAL g_289 */
static union U2 g_290 = {65534UL};/* VOLATILE GLOBAL g_290 */
static union U2 g_291 = {0xFB47L};/* VOLATILE GLOBAL g_291 */
static union U2 g_292 = {0x708CL};/* VOLATILE GLOBAL g_292 */
static union U2 g_293 = {0xA29AL};/* VOLATILE GLOBAL g_293 */
static union U2 g_294 = {65534UL};/* VOLATILE GLOBAL g_294 */
static union U2 g_295 = {65535UL};/* VOLATILE GLOBAL g_295 */
static union U2 g_296 = {1UL};/* VOLATILE GLOBAL g_296 */
static union U2 g_297 = {65530UL};/* VOLATILE GLOBAL g_297 */
static union U2 g_298[10] = {{0UL},{4UL},{0UL},{4UL},{0UL},{4UL},{0UL},{4UL},{0UL},{4UL}};
static union U2 g_299 = {0xAB55L};/* VOLATILE GLOBAL g_299 */
static union U2 g_300 = {0xFDCDL};/* VOLATILE GLOBAL g_300 */
static union U2 g_301 = {0x4625L};/* VOLATILE GLOBAL g_301 */
static union U2 g_302 = {65535UL};/* VOLATILE GLOBAL g_302 */
static union U2 g_303[1] = {{65533UL}};
static union U2 g_304[5][5][7] = {{{{65530UL},{0UL},{0x4C34L},{0x135AL},{8UL},{0xFBA8L},{6UL}},{{65535UL},{65531UL},{65535UL},{0UL},{8UL},{0x8EDEL},{0x8EDEL}},{{0xD976L},{6UL},{0xAA73L},{6UL},{0xD976L},{0xE4B2L},{0x4C34L}},{{0x4528L},{0xCEBBL},{65535UL},{8UL},{65535UL},{0x15ECL},{0xCEBBL}},{{0UL},{8UL},{0x87DAL},{2UL},{0xA288L},{0UL},{0x0BFAL}}},{{{0x4528L},{8UL},{65533UL},{65535UL},{0UL},{65535UL},{65533UL}},{{0xD976L},{0xD976L},{0UL},{1UL},{0x4C34L},{65528UL},{0xE4B2L}},{{65535UL},{65535UL},{0x7BA4L},{0xADA1L},{65531UL},{65527UL},{8UL}},{{65530UL},{0xA288L},{0x135AL},{0x8F09L},{0x4C34L},{0x79ECL},{0xA288L}},{{65533UL},{0UL},{1UL},{1UL},{0UL},{65533UL},{0UL}}},{{{0x79ECL},{0x4C34L},{0x8F09L},{0x135AL},{0xA288L},{65530UL},{1UL}},{{65527UL},{65531UL},{0xADA1L},{0x7BA4L},{65535UL},{65535UL},{0x8EDEL}},{{65528UL},{0x4C34L},{1UL},{0UL},{0xD976L},{0xD976L},{0UL}},{{65535UL},{0UL},{65535UL},{65533UL},{8UL},{0x4528L},{0UL}},{{0UL},{0xA288L},{2UL},{0x87DAL},{8UL},{0UL},{0x894FL}}},{{{65527UL},{4UL},{0xBD23L},{0x7BA4L},{0x6023L},{7UL},{0x4528L}},{{1UL},{0UL},{0x135AL},{0x0BFAL},{0x135AL},{0UL},{1UL}},{{8UL},{0xBD23L},{0x90B8L},{4UL},{65533UL},{0xADA1L},{65535UL}},{{1UL},{0x5AD1L},{0x87DAL},{5UL},{0xFBA8L},{0xAA73L},{0x5AD1L}},{{0x15ECL},{0x6023L},{0x90B8L},{0UL},{0x8EDEL},{0x15ECL},{0x8EDEL}}},{{{0x87DAL},{0x135AL},{0x135AL},{0x87DAL},{0xE4B2L},{0x115DL},{65530UL}},{{0xBF02L},{65533UL},{0xBD23L},{0xCEBBL},{0x15ECL},{65535UL},{8UL}},{{0x8F09L},{0xFBA8L},{0x894FL},{0x79ECL},{0UL},{6UL},{65530UL}},{{0UL},{0x8EDEL},{0x7BA4L},{65535UL},{65535UL},{0x7BA4L},{0x8EDEL}},{{0xFBA8L},{0xE4B2L},{0xA288L},{8UL},{65528UL},{0xFBA8L},{0x5AD1L}}}};
static union U2 g_305 = {0x410EL};/* VOLATILE GLOBAL g_305 */
static union U2 g_306 = {65531UL};/* VOLATILE GLOBAL g_306 */
static union U2 g_307 = {0x7C95L};/* VOLATILE GLOBAL g_307 */
static union U2 g_308[9] = {{0x0A16L},{0x91AEL},{0x0A16L},{0x91AEL},{0x0A16L},{0x91AEL},{0x0A16L},{0x91AEL},{0x0A16L}};
static union U2 g_309[9] = {{65535UL},{65535UL},{65535UL},{65535UL},{65535UL},{65535UL},{65535UL},{65535UL},{65535UL}};
static union U2 g_310 = {1UL};/* VOLATILE GLOBAL g_310 */
static union U2 g_311 = {9UL};/* VOLATILE GLOBAL g_311 */
static union U2 g_312 = {65534UL};/* VOLATILE GLOBAL g_312 */
static union U2 g_313 = {65535UL};/* VOLATILE GLOBAL g_313 */
static union U2 g_314 = {65529UL};/* VOLATILE GLOBAL g_314 */
static union U2 g_315 = {0xAB5FL};/* VOLATILE GLOBAL g_315 */
static union U2 g_316 = {0x3F3DL};/* VOLATILE GLOBAL g_316 */
static union U2 g_317[7] = {{0x62DAL},{0x62DAL},{0x62DAL},{0x62DAL},{0x62DAL},{0x62DAL},{0x62DAL}};
static union U2 g_318 = {0x8944L};/* VOLATILE GLOBAL g_318 */
static union U2 g_319 = {5UL};/* VOLATILE GLOBAL g_319 */
static union U2 g_320 = {0x0E5CL};/* VOLATILE GLOBAL g_320 */
static union U2 g_321 = {0x0391L};/* VOLATILE GLOBAL g_321 */
static union U2 g_322 = {0xF5FAL};/* VOLATILE GLOBAL g_322 */
static union U2 g_323 = {0xF30BL};/* VOLATILE GLOBAL g_323 */
static union U2 g_324 = {0x6809L};/* VOLATILE GLOBAL g_324 */
static union U2 g_325[10] = {{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L},{0xA585L}};
static union U2 g_326[6] = {{1UL},{1UL},{1UL},{1UL},{1UL},{1UL}};
static union U2 g_327 = {0x3A63L};/* VOLATILE GLOBAL g_327 */
static union U2 g_328 = {0x1677L};/* VOLATILE GLOBAL g_328 */
static union U2 g_329 = {65527UL};/* VOLATILE GLOBAL g_329 */
static union U2 g_330 = {0xF892L};/* VOLATILE GLOBAL g_330 */
static union U2 g_331 = {0UL};/* VOLATILE GLOBAL g_331 */
static union U2 g_332 = {0x2065L};/* VOLATILE GLOBAL g_332 */
static union U2 g_333 = {65535UL};/* VOLATILE GLOBAL g_333 */
static union U2 g_334 = {0xF098L};/* VOLATILE GLOBAL g_334 */
static uint32_t g_342 = 18446744073709551609UL;
static uint32_t *g_341[7][6][6] = {{{&g_342,&g_342,(void*)0,&g_342,(void*)0,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,(void*)0},{&g_342,&g_342,&g_342,(void*)0,&g_342,&g_342},{(void*)0,&g_342,(void*)0,(void*)0,&g_342,(void*)0},{(void*)0,&g_342,(void*)0,&g_342,&g_342,&g_342},{&g_342,(void*)0,&g_342,(void*)0,&g_342,&g_342}},{{&g_342,&g_342,&g_342,&g_342,&g_342,(void*)0},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,(void*)0},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342}},{{&g_342,&g_342,(void*)0,(void*)0,&g_342,(void*)0},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,(void*)0,(void*)0,&g_342,&g_342},{&g_342,&g_342,(void*)0,&g_342,&g_342,&g_342},{(void*)0,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342}},{{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,(void*)0,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,(void*)0,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342}},{{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,(void*)0,&g_342,&g_342},{(void*)0,&g_342,(void*)0,&g_342,&g_342,&g_342},{&g_342,(void*)0,(void*)0,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342}},{{&g_342,&g_342,&g_342,&g_342,(void*)0,&g_342},{(void*)0,(void*)0,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,(void*)0,&g_342,&g_342},{(void*)0,&g_342,&g_342,&g_342,(void*)0,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342}},{{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,&g_342,(void*)0,&g_342,&g_342},{&g_342,&g_342,&g_342,&g_342,&g_342,&g_342},{&g_342,&g_342,(void*)0,&g_342,&g_342,&g_342},{&g_342,&g_342,(void*)0,&g_342,&g_342,&g_342}}};
static int32_t ***g_361 = (void*)0;
static int32_t ***g_362 = &g_180;
static int16_t g_367 = 0x8BCCL;
static int8_t g_388[6] = {0x3EL,0x3EL,0x3EL,0x3EL,0x3EL,0x3EL};
static union U2 * volatile g_413 = (void*)0;/* VOLATILE GLOBAL g_413 */
static union U2 * volatile *g_412 = &g_413;
static union U2 g_423[2] = {{1UL},{1UL}};
static int32_t g_440[7] = {0x49B540DEL,0x49B540DEL,0x49B540DEL,0x49B540DEL,0x49B540DEL,0x49B540DEL,0x49B540DEL};
static uint64_t g_441 = 9UL;
static const uint16_t g_461 = 0xAEB2L;
static const uint16_t *g_460 = &g_461;
static const union U2 g_465 = {0UL};/* VOLATILE GLOBAL g_465 */
static volatile int64_t **g_599 = (void*)0;
static union U2 g_614 = {2UL};/* VOLATILE GLOBAL g_614 */
static union U2 *g_613 = &g_614;
static union U2 g_617 = {65535UL};/* VOLATILE GLOBAL g_617 */
static int32_t g_618 = (-1L);
static const int32_t *g_653[6] = {&g_440[6],&g_440[6],&g_440[6],&g_440[6],&g_440[6],&g_440[6]};
static int64_t *g_655 = &g_85;
static int64_t **g_654 = &g_655;
static int64_t **g_659 = &g_655;
static uint32_t g_701 = 4294967295UL;
static volatile uint32_t ***g_767 = (void*)0;
static int16_t g_771 = 0L;
static union U2 g_858 = {1UL};/* VOLATILE GLOBAL g_858 */
static int64_t g_927 = 0x817C1244536E1971LL;
static volatile int32_t g_954 = 0xD8A0E02CL;/* VOLATILE GLOBAL g_954 */
static volatile int32_t *g_953 = &g_954;
static struct S0 g_956 = {0x48709603621DE972LL,0L,-3L,0x37238BC2E5ED6E22LL,958,5305};/* VOLATILE GLOBAL g_956 */
static uint32_t g_973 = 0xD5C5FAF7L;
static int32_t *g_978[8][5] = {{&g_29[3][0][1],&g_2[0],&g_29[2][0][3],(void*)0,&g_2[4]},{&g_29[3][0][1],&g_29[2][0][3],(void*)0,&g_29[2][0][3],&g_29[3][0][1]},{&g_2[0],&g_2[5],(void*)0,(void*)0,&g_29[4][1][6]},{(void*)0,&g_2[5],&g_2[0],&g_2[0],&g_2[5]},{(void*)0,&g_29[2][0][3],&g_29[3][0][1],&g_2[5],&g_29[4][1][6]},{&g_29[2][0][3],&g_2[0],&g_29[3][0][1],(void*)0,&g_29[3][0][1]},{&g_29[4][1][6],&g_29[4][1][6],&g_2[0],(void*)0,&g_2[4]},{&g_29[2][0][3],&g_2[4],(void*)0,(void*)0,(void*)0}};
static int16_t **g_987 = (void*)0;
static volatile int16_t g_1005 = 0x560CL;/* VOLATILE GLOBAL g_1005 */
static volatile int16_t *g_1004 = &g_1005;
static volatile int16_t * volatile *g_1003 = &g_1004;
static volatile int16_t * volatile * const  volatile * volatile g_1002 = &g_1003;/* VOLATILE GLOBAL g_1002 */
static uint8_t g_1039[1] = {0x32L};
static int32_t ** const  volatile g_1046 = &g_978[5][3];/* VOLATILE GLOBAL g_1046 */
static volatile union U2 g_1081 = {65529UL};/* VOLATILE GLOBAL g_1081 */
static volatile uint32_t * volatile *g_1099 = (void*)0;
static volatile uint32_t * volatile **g_1098 = &g_1099;
static volatile uint32_t * volatile ** volatile * const g_1097 = &g_1098;
static volatile int8_t *g_1125 = (void*)0;
static volatile int8_t ** volatile g_1124 = &g_1125;/* VOLATILE GLOBAL g_1124 */
static int32_t ** volatile * volatile g_1184[9][1][8] = {{{&g_10,&g_10,&g_10,(void*)0,(void*)0,&g_10,(void*)0,&g_10}},{{&g_180,(void*)0,(void*)0,&g_10,&g_180,(void*)0,(void*)0,&g_180}},{{&g_180,&g_10,&g_10,&g_180,(void*)0,&g_10,(void*)0,&g_10}},{{&g_10,&g_10,&g_10,(void*)0,&g_10,&g_10,&g_10,&g_10}},{{&g_180,&g_10,(void*)0,&g_10,&g_180,&g_10,&g_180,&g_10}},{{&g_10,&g_10,&g_180,&g_10,(void*)0,(void*)0,&g_10,&g_10}},{{&g_10,(void*)0,&g_180,&g_180,(void*)0,&g_10,&g_180,(void*)0}},{{(void*)0,&g_10,(void*)0,&g_10,&g_10,&g_10,&g_10,&g_10}},{{(void*)0,&g_10,&g_10,&g_10,&g_10,&g_10,(void*)0,(void*)0}}};
static volatile int64_t g_1193 = 0L;/* VOLATILE GLOBAL g_1193 */
static volatile int64_t *g_1192 = &g_1193;
static volatile int64_t **g_1191 = &g_1192;
static struct S0 *g_1252 = (void*)0;
static struct S0 ** volatile g_1251 = &g_1252;/* VOLATILE GLOBAL g_1251 */
static volatile union U2 **g_1256 = (void*)0;
static volatile union U2 ***g_1255 = &g_1256;
static volatile union U2 **** volatile g_1254 = &g_1255;/* VOLATILE GLOBAL g_1254 */
static uint32_t **g_1284[5][1] = {{&g_341[4][3][2]},{&g_341[4][3][2]},{&g_341[4][3][2]},{&g_341[4][3][2]},{&g_341[4][3][2]}};
static int64_t ***g_1288[5][1] = {{&g_654},{&g_654},{&g_654},{&g_654},{&g_654}};
static struct S0 g_1337[3][7][7] = {{{{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{0x3D5378E1A9E2ED8BLL,0x2D18757D0C186860LL,0x35CB9FAEE2DAD515LL,18446744073709551615UL,1720,2082},{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{0x1EEE398DE3FFFA88LL,7L,0x695776167C6F0E33LL,0xAE58FFA7C8F63FA7LL,524,106},{6L,-9L,0L,0x4888A8227BA31A5ALL,1374,3148},{0xD43E53EEA3C23264LL,0x4D7FBE0F34104A76LL,-1L,18446744073709551606UL,673,5008},{0xFC661600D03D3AAFLL,0xD4919864C2A9EF07LL,0x1317F8D5C8C23CBCLL,0x151DB220516D6DA4LL,815,1359}},{{0x349CFA75303D7AB2LL,0xF2926BDCC4461DC5LL,0x3563E87335E06BADLL,6UL,1333,1673},{0xC756BE3A03A93FE5LL,0x58351002E80F2470LL,0x90EE1A2D83357D92LL,7UL,1497,4928},{0L,0L,7L,1UL,790,4297},{0x7B3A9E776C51DCA8LL,0xCBC3AED6C5FC07A8LL,-9L,0x842C35DDF0E63F69LL,933,2349},{0x2F8BE0B1AA3B4FA8LL,-10L,0x3940B4837B0B7EEBLL,0x5E8901E598EC6F24LL,1610,2979},{-1L,0x6ABFA4B4002C8BEDLL,0x26D9D2119709214DLL,18446744073709551610UL,884,3527},{0xEC69502AF2911C7BLL,0x95FC56760DB11884LL,-1L,1UL,299,905}},{{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{0x1EEE398DE3FFFA88LL,7L,0x695776167C6F0E33LL,0xAE58FFA7C8F63FA7LL,524,106},{0xEC0BD0F877C7BA67LL,1L,0x24FD2C0E7750A9F9LL,0xCDAA1718278D35ADLL,1703,510},{0L,-10L,0x49FC66F1B9783453LL,18446744073709551606UL,2016,3663},{0L,4L,-4L,1UL,230,1440},{0x4E43E9F499094009LL,3L,-8L,0UL,498,1815},{-1L,0x3FFDADEACBBE7291LL,0xCC8C0C9185BB0CC0LL,0xCE88DF766385A055LL,1822,5270}},{{0L,0x45BEA15A00C94464LL,1L,0x6CBA203EAE97AFF3LL,1561,3450},{0x9F0C1D54079E8794LL,0L,0x3939FC90AA58973BLL,18446744073709551608UL,58,275},{-1L,-4L,0xDBBB3FE2B8FA5747LL,0xFD98561409F80DA5LL,476,5711},{0L,0L,7L,1UL,790,4297},{0L,0L,7L,1UL,790,4297},{-1L,-4L,0xDBBB3FE2B8FA5747LL,0xFD98561409F80DA5LL,476,5711},{0x9F0C1D54079E8794LL,0L,0x3939FC90AA58973BLL,18446744073709551608UL,58,275}},{{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{0x42A99A1E3FA3FCD0LL,0xF3B9E1FF42BD8079LL,0xF2B76694BDD89D5BLL,0UL,490,1050},{-1L,0x3FFDADEACBBE7291LL,0xCC8C0C9185BB0CC0LL,0xCE88DF766385A055LL,1822,5270},{0x7EECC5581AAE07D4LL,1L,-6L,0x6FF4EE7B1E0EFDD7LL,679,5739},{-2L,0L,1L,18446744073709551608UL,109,289},{0x3D5378E1A9E2ED8BLL,0x2D18757D0C186860LL,0x35CB9FAEE2DAD515LL,18446744073709551615UL,1720,2082},{0x0A47D6BDE863B7E5LL,0xBAD9489047B1DFA9LL,0xD5A6F83287131721LL,18446744073709551615UL,1820,822}},{{0xC7EFD906F5C94636LL,-1L,8L,0x62C811817DF9DA77LL,1514,4213},{0x5B64F7FD34C1346ELL,-1L,-1L,18446744073709551606UL,1100,5150},{0x3994DAB1067E285DLL,-1L,0x824DFD98F81E3622LL,3UL,815,4696},{0x29DED4F8B2518AB3LL,0x49A4D9CD46AC13EBLL,-10L,18446744073709551615UL,149,4036},{7L,-4L,1L,0xED3F9B55D59F9EE1LL,1517,4294},{-1L,0x3DCB67D667FAEFD3LL,-1L,1UL,276,111},{0L,0x45BEA15A00C94464LL,1L,0x6CBA203EAE97AFF3LL,1561,3450}},{{0x3B1E3EDBFECBDCE5LL,0x1B38E9A047550AA6LL,0x1EBE64E440090AAFLL,0xE22016A5E8DBD52BLL,1525,2499},{-1L,0x3FFDADEACBBE7291LL,0xCC8C0C9185BB0CC0LL,0xCE88DF766385A055LL,1822,5270},{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{0x7EECC5581AAE07D4LL,1L,-6L,0x6FF4EE7B1E0EFDD7LL,679,5739},{0xD43E53EEA3C23264LL,0x4D7FBE0F34104A76LL,-1L,18446744073709551606UL,673,5008},{2L,0x415775D82522871BLL,0x31D6386B71C385B4LL,1UL,14,1105},{-2L,0L,1L,18446744073709551608UL,109,289}}},{{{6L,0x7F4191567F0F4712LL,3L,0x0EAF5332838570A8LL,2005,2651},{0L,0x45BEA15A00C94464LL,1L,0x6CBA203EAE97AFF3LL,1561,3450},{0x62A7EEF86EBD2171LL,-5L,-1L,0UL,1202,2319},{0L,0L,7L,1UL,790,4297},{1L,0x443315EDD04E0FA9LL,0xB7BB704E9200581FLL,9UL,1101,4301},{0xC7EFD906F5C94636LL,-1L,8L,0x62C811817DF9DA77LL,1514,4213},{1L,0x443315EDD04E0FA9LL,0xB7BB704E9200581FLL,9UL,1101,4301}},{{0L,-10L,0x49FC66F1B9783453LL,18446744073709551606UL,2016,3663},{0xA995881C3DE48117LL,2L,-5L,0x8AF649D5A0BBAC14LL,1321,659},{0xA995881C3DE48117LL,2L,-5L,0x8AF649D5A0BBAC14LL,1321,659},{0L,-10L,0x49FC66F1B9783453LL,18446744073709551606UL,2016,3663},{0xBEAA8C5F9FBDF2D4LL,0xD664CC2BE48B92C6LL,0xC51CA54FD2E79386LL,18446744073709551614UL,1585,2012},{0xDCDD7E23EDE77162LL,0x4D60569C57DAFC0DLL,0x5FB5E59A921F972ELL,0xD47857C9A79C2E1CLL,484,3990},{0xFCF23D10AAFA868FLL,0L,-1L,18446744073709551615UL,1177,1449}},{{-1L,0x3DCB67D667FAEFD3LL,-1L,1UL,276,111},{0x88E692241FB1611ELL,0xFD41495437008B2BLL,-8L,18446744073709551609UL,1397,4536},{0x9F0C1D54079E8794LL,0L,0x3939FC90AA58973BLL,18446744073709551608UL,58,275},{0x0A9A8EC2BCC95361LL,0L,-9L,0xDDBE91C57AA4AF4CLL,1887,3653},{0xDB0BE86104754105LL,8L,0x554C7966AA2BD21ALL,0xA892DD97E9186C84LL,533,568},{0x9F0C1D54079E8794LL,0L,0x3939FC90AA58973BLL,18446744073709551608UL,58,275},{6L,0x7F4191567F0F4712LL,3L,0x0EAF5332838570A8LL,2005,2651}},{{0x12317B3597C9119BLL,0L,-1L,0UL,336,4151},{0x4E43E9F499094009LL,3L,-8L,0UL,498,1815},{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{0xFCF23D10AAFA868FLL,0L,-1L,18446744073709551615UL,1177,1449},{0xC7DCF0CD7312D3ABLL,0xEFAC375614A5ACECLL,0x5EB4C71B10AF3560LL,0UL,1980,5624},{0xFC661600D03D3AAFLL,0xD4919864C2A9EF07LL,0x1317F8D5C8C23CBCLL,0x151DB220516D6DA4LL,815,1359},{-1L,0x3FFDADEACBBE7291LL,0xCC8C0C9185BB0CC0LL,0xCE88DF766385A055LL,1822,5270}},{{0x9F0C1D54079E8794LL,0L,0x3939FC90AA58973BLL,18446744073709551608UL,58,275},{-1L,0x3DCB67D667FAEFD3LL,-1L,1UL,276,111},{0x7B3A9E776C51DCA8LL,0xCBC3AED6C5FC07A8LL,-9L,0x842C35DDF0E63F69LL,933,2349},{0x349CFA75303D7AB2LL,0xF2926BDCC4461DC5LL,0x3563E87335E06BADLL,6UL,1333,1673},{0x2F8BE0B1AA3B4FA8LL,-10L,0x3940B4837B0B7EEBLL,0x5E8901E598EC6F24LL,1610,2979},{1L,0x443315EDD04E0FA9LL,0xB7BB704E9200581FLL,9UL,1101,4301},{0x29DED4F8B2518AB3LL,0x49A4D9CD46AC13EBLL,-10L,18446744073709551615UL,149,4036}},{{-7L,1L,-1L,18446744073709551615UL,1101,3402},{0x7EECC5581AAE07D4LL,1L,-6L,0x6FF4EE7B1E0EFDD7LL,679,5739},{0xFCF23D10AAFA868FLL,0L,-1L,18446744073709551615UL,1177,1449},{0x0A47D6BDE863B7E5LL,0xBAD9489047B1DFA9LL,0xD5A6F83287131721LL,18446744073709551615UL,1820,822},{0xFCF23D10AAFA868FLL,0L,-1L,18446744073709551615UL,1177,1449},{0x7EECC5581AAE07D4LL,1L,-6L,0x6FF4EE7B1E0EFDD7LL,679,5739},{-7L,1L,-1L,18446744073709551615UL,1101,3402}},{{0x88E692241FB1611ELL,0xFD41495437008B2BLL,-8L,18446744073709551609UL,1397,4536},{0x2F8BE0B1AA3B4FA8LL,-10L,0x3940B4837B0B7EEBLL,0x5E8901E598EC6F24LL,1610,2979},{0x62A7EEF86EBD2171LL,-5L,-1L,0UL,1202,2319},{8L,0x1A7E0A81E5B2658ELL,0x25141D9BC023F44ELL,0UL,1518,508},{0x5ADBB153CDE4F186LL,1L,-1L,18446744073709551615UL,535,4513},{0L,0x4BE107D51336A150LL,0xB127D07A2806EEF0LL,1UL,806,1623},{0xEC69502AF2911C7BLL,0x95FC56760DB11884LL,-1L,1UL,299,905}}},{{{0L,4L,-4L,1UL,230,1440},{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{0x42A99A1E3FA3FCD0LL,0xF3B9E1FF42BD8079LL,0xF2B76694BDD89D5BLL,0UL,490,1050},{-7L,1L,-1L,18446744073709551615UL,1101,3402},{0xDCDD7E23EDE77162LL,0x4D60569C57DAFC0DLL,0x5FB5E59A921F972ELL,0xD47857C9A79C2E1CLL,484,3990},{-1L,0xF6181309CE2D6A1DLL,0x737FD0A65E134993LL,0xE1C26D2F07537383LL,1683,2924},{0x1412F89522FE2DA8LL,0x648073F2E7FEDFBDLL,0x87E82EBD12A2DD29LL,0x78791537D5781F4BLL,1920,4124}},{{-1L,-4L,0xDBBB3FE2B8FA5747LL,0xFD98561409F80DA5LL,476,5711},{0xC756BE3A03A93FE5LL,0x58351002E80F2470LL,0x90EE1A2D83357D92LL,7UL,1497,4928},{0x62A7EEF86EBD2171LL,-5L,-1L,0UL,1202,2319},{-1L,0x3DCB67D667FAEFD3LL,-1L,1UL,276,111},{0x5905DB21A887F5D1LL,-7L,-7L,18446744073709551615UL,2039,4404},{7L,-4L,1L,0xED3F9B55D59F9EE1LL,1517,4294},{0x5B64F7FD34C1346ELL,-1L,-1L,18446744073709551606UL,1100,5150}},{{0x3B1E3EDBFECBDCE5LL,0x1B38E9A047550AA6LL,0x1EBE64E440090AAFLL,0xE22016A5E8DBD52BLL,1525,2499},{0L,4L,-4L,1UL,230,1440},{0xFCF23D10AAFA868FLL,0L,-1L,18446744073709551615UL,1177,1449},{0x46BF128D8D489B75LL,0x47CCF306AA647578LL,0x707A07D78865ED05LL,0xCB68A902D8CC090CLL,1919,188},{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{0x46BF128D8D489B75LL,0x47CCF306AA647578LL,0x707A07D78865ED05LL,0xCB68A902D8CC090CLL,1919,188}},{{0x7B3A9E776C51DCA8LL,0xCBC3AED6C5FC07A8LL,-9L,0x842C35DDF0E63F69LL,933,2349},{0x3994DAB1067E285DLL,-1L,0x824DFD98F81E3622LL,3UL,815,4696},{0x7B3A9E776C51DCA8LL,0xCBC3AED6C5FC07A8LL,-9L,0x842C35DDF0E63F69LL,933,2349},{0xC756BE3A03A93FE5LL,0x58351002E80F2470LL,0x90EE1A2D83357D92LL,7UL,1497,4928},{0x38A5F786CC36B5D8LL,0xAB1362BB3467E6A0LL,0xD71F5DB2E8503344LL,0UL,1593,2527},{0x88E692241FB1611ELL,0xFD41495437008B2BLL,-8L,18446744073709551609UL,1397,4536},{0x5739197017678AE3LL,0x526730500F4745D2LL,0x3F6EE3D5BA076317LL,0x8831886F0DBD25D9LL,2007,2136}},{{0x4E43E9F499094009LL,3L,-8L,0UL,498,1815},{0xFC661600D03D3AAFLL,0xD4919864C2A9EF07LL,0x1317F8D5C8C23CBCLL,0x151DB220516D6DA4LL,815,1359},{-1L,0xF047409CD1E2E107LL,0xE0C826CAA3A61F6ELL,0UL,1772,1478},{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{0L,4L,-4L,1UL,230,1440},{0x12317B3597C9119BLL,0L,-1L,0UL,336,4151},{8L,0xE242EAD255DF8BA7LL,0L,0xA3215043AF54BF42LL,370,675}},{{0x349CFA75303D7AB2LL,0xF2926BDCC4461DC5LL,0x3563E87335E06BADLL,6UL,1333,1673},{-1L,0x6ABFA4B4002C8BEDLL,0x26D9D2119709214DLL,18446744073709551610UL,884,3527},{0x5B64F7FD34C1346ELL,-1L,-1L,18446744073709551606UL,1100,5150},{6L,0x7F4191567F0F4712LL,3L,0x0EAF5332838570A8LL,2005,2651},{7L,-4L,1L,0xED3F9B55D59F9EE1LL,1517,4294},{0x88E692241FB1611ELL,0xFD41495437008B2BLL,-8L,18446744073709551609UL,1397,4536},{-5L,-1L,0x8A338F7B0981ECEBLL,0UL,614,2614}},{{-1L,0x3FFDADEACBBE7291LL,0xCC8C0C9185BB0CC0LL,0xCE88DF766385A055LL,1822,5270},{0xC7DCF0CD7312D3ABLL,0xEFAC375614A5ACECLL,0x5EB4C71B10AF3560LL,0UL,1980,5624},{-1L,0xF6181309CE2D6A1DLL,0x737FD0A65E134993LL,0xE1C26D2F07537383LL,1683,2924},{0x1EEE398DE3FFFA88LL,7L,0x695776167C6F0E33LL,0xAE58FFA7C8F63FA7LL,524,106},{0x1412F89522FE2DA8LL,0x648073F2E7FEDFBDLL,0x87E82EBD12A2DD29LL,0x78791537D5781F4BLL,1920,4124},{1L,-7L,0x6638A966494962F9LL,2UL,717,2381},{0xD43E53EEA3C23264LL,0x4D7FBE0F34104A76LL,-1L,18446744073709551606UL,673,5008}}}};
static struct S0 *g_1336[2] = {&g_1337[2][5][6],&g_1337[2][5][6]};
static union U2 **g_1359 = &g_613;
static union U2 g_1360 = {0x73AFL};/* VOLATILE GLOBAL g_1360 */
static union U2 **g_1361 = &g_613;
static union U2 ***g_1378[6][1] = {{&g_1359},{&g_1361},{&g_1359},{&g_1361},{&g_1359},{&g_1361}};
static union U2 ****g_1377 = &g_1378[2][0];
static union U2 g_1383 = {5UL};/* VOLATILE GLOBAL g_1383 */
static volatile struct S0 g_1390 = {0L,0xD67CC9A5EA39BBCFLL,0xCB6A58E5FA00FABALL,18446744073709551614UL,583,5084};/* VOLATILE GLOBAL g_1390 */
static volatile int64_t g_1399[2][2] = {{0xC3D1A4230F36C198LL,0xC3D1A4230F36C198LL},{0xC3D1A4230F36C198LL,0xC3D1A4230F36C198LL}};
static uint64_t g_1519[1] = {1UL};
static uint32_t g_1549 = 1UL;
static uint32_t **g_1574 = &g_146[5];
static volatile int32_t g_1641 = 1L;/* VOLATILE GLOBAL g_1641 */
static int64_t g_1642[3][3] = {{0x35DF4D3AAC1E5036LL,0x35DF4D3AAC1E5036LL,0x35DF4D3AAC1E5036LL},{0x73EAB7109BF405BBLL,0x73EAB7109BF405BBLL,0x73EAB7109BF405BBLL},{0x35DF4D3AAC1E5036LL,0x35DF4D3AAC1E5036LL,0x35DF4D3AAC1E5036LL}};
static int32_t g_1666 = 0x35DA94C4L;
static uint32_t g_1682[9] = {1UL,4294967295UL,4294967295UL,1UL,4294967295UL,4294967295UL,1UL,4294967295UL,4294967295UL};
static union U2 g_1707 = {5UL};/* VOLATILE GLOBAL g_1707 */
static union U2 g_1709 = {1UL};/* VOLATILE GLOBAL g_1709 */
static const volatile int32_t g_1712[10][9][2] = {{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}},{{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L},{9L,9L}}};
static const int32_t g_1735 = 0x1C2C1E86L;
static volatile struct S0 g_1782 = {1L,0x88EFE1873D99DA85LL,9L,0x1CFF217DE9EC038BLL,859,2734};/* VOLATILE GLOBAL g_1782 */
static struct S0 g_1816 = {0xC78DC98F541D5D41LL,-1L,1L,0UL,1944,1820};/* VOLATILE GLOBAL g_1816 */
static const uint16_t **g_1865 = &g_460;
static const uint16_t *** volatile g_1864 = &g_1865;/* VOLATILE GLOBAL g_1864 */
static volatile struct S0 g_1914[2] = {{0x5F97FEFF3F35AC2BLL,0L,0xF364F2AEADA85C32LL,18446744073709551613UL,733,1533},{0x5F97FEFF3F35AC2BLL,0L,0xF364F2AEADA85C32LL,18446744073709551613UL,733,1533}};
static union U1 g_1918 = {65535UL};/* VOLATILE GLOBAL g_1918 */
static volatile union U1 g_1952 = {0UL};/* VOLATILE GLOBAL g_1952 */
static int32_t ** volatile g_1976 = (void*)0;/* VOLATILE GLOBAL g_1976 */
static int32_t ** const  volatile g_1977 = &g_978[4][0];/* VOLATILE GLOBAL g_1977 */
static const int64_t g_2015 = 1L;
static union U2 **g_2023 = &g_613;
static union U2 **g_2024[8][5][6] = {{{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{(void*)0,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,(void*)0,(void*)0,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613}},{{&g_613,(void*)0,&g_613,(void*)0,&g_613,(void*)0},{&g_613,&g_613,&g_613,&g_613,&g_613,(void*)0},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,(void*)0,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613}},{{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,(void*)0},{(void*)0,&g_613,&g_613,(void*)0,&g_613,(void*)0},{&g_613,(void*)0,&g_613,&g_613,(void*)0,&g_613}},{{&g_613,&g_613,&g_613,(void*)0,&g_613,&g_613},{&g_613,&g_613,&g_613,(void*)0,(void*)0,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,(void*)0,&g_613,(void*)0,&g_613,&g_613},{&g_613,(void*)0,&g_613,&g_613,&g_613,&g_613}},{{&g_613,&g_613,&g_613,&g_613,&g_613,(void*)0},{(void*)0,&g_613,&g_613,&g_613,&g_613,&g_613},{(void*)0,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613}},{{&g_613,(void*)0,(void*)0,&g_613,&g_613,&g_613},{&g_613,(void*)0,&g_613,(void*)0,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,(void*)0,&g_613},{(void*)0,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,(void*)0,&g_613}},{{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,(void*)0,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613}},{{&g_613,&g_613,&g_613,&g_613,&g_613,(void*)0},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613},{&g_613,&g_613,&g_613,&g_613,&g_613,&g_613}}};
static union U2 **g_2025[4] = {&g_613,&g_613,&g_613,&g_613};
static union U2 *** const g_2022[9] = {&g_2023,&g_2023,&g_2023,&g_2023,&g_2023,&g_2023,&g_2023,&g_2023,&g_2023};
static union U2 *** const *g_2021 = &g_2022[8];
static int32_t g_2034 = 1L;
static int16_t g_2051 = 1L;
static uint32_t **g_2081[1] = {&g_341[4][3][2]};
static uint8_t g_2099[2][7] = {{0x6CL,0x6CL,0x6CL,0x6CL,0x6CL,0x6CL,0x6CL},{0xAFL,0UL,0xAFL,0UL,0xAFL,0UL,0xAFL}};


/* --- FORWARD DECLARATIONS --- */
static uint32_t  func_1(void);
static int32_t * func_12(int32_t * const * p_13, uint64_t  p_14, int64_t  p_15);
static const int32_t ** func_30(const uint64_t  p_31);
static const int32_t * func_33(int32_t ** const * const  p_34);
static int32_t ** const * func_35(uint64_t  p_36);
static uint64_t  func_41(uint32_t  p_42, int32_t *** p_43, int32_t *** p_44, int32_t  p_45);
static int32_t *** func_50(int32_t * p_51, int32_t * p_52, int64_t  p_53, uint32_t * p_54);
static int32_t * func_56(int32_t *** p_57, uint32_t  p_58, uint32_t  p_59);
static int32_t * func_63(int32_t  p_64, uint32_t * p_65);
static int32_t * func_66(int16_t  p_67, int32_t ** p_68, uint8_t  p_69, int16_t  p_70);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_1735
 * writes:
 */
static uint32_t  func_1(void)
{ /* block id: 0 */
    int32_t * const l_9 = (void*)0;
    int32_t l_909 = (-1L);
    int8_t l_910 = 0x6CL;
    int32_t l_932 = 0L;
    uint64_t *l_963 = &g_179;
    uint64_t *l_964[2][3][10] = {{{&g_441,&g_164,&g_164,&g_441,&g_179,&g_179,&g_179,&g_164,&g_164,&g_179},{(void*)0,&g_179,&g_164,(void*)0,&g_441,&g_164,&g_441,(void*)0,&g_441,&g_441},{&g_441,&g_179,&g_179,(void*)0,&g_164,(void*)0,&g_179,&g_179,&g_441,&g_164}},{{&g_179,&g_164,(void*)0,(void*)0,&g_441,(void*)0,&g_179,&g_441,&g_441,&g_441},{&g_164,(void*)0,&g_179,(void*)0,(void*)0,&g_441,&g_164,&g_164,&g_441,(void*)0},{(void*)0,&g_441,&g_441,(void*)0,&g_164,&g_179,(void*)0,&g_179,&g_441,&g_164}}};
    int32_t l_969[9][7] = {{0xB1BB19FEL,6L,6L,0xB1BB19FEL,1L,0xC025A892L,0L},{0x81FA499AL,0xB7CFE843L,6L,(-9L),0L,0x81FA499AL,0x81FA499AL},{0xB7CFE843L,0L,1L,0L,0xB7CFE843L,(-5L),0L},{0xB1BB19FEL,1L,0xC025A892L,0L,6L,0xC025A892L,0x5B567C79L},{6L,0x5B567C79L,(-9L),(-9L),0x5B567C79L,6L,1L},{0xB1BB19FEL,0L,(-1L),0xB1BB19FEL,0x5B567C79L,0xF12483DFL,0L},{0xB7CFE843L,0x81FA499AL,6L,(-1L),6L,0x81FA499AL,0xB7CFE843L},{0x81FA499AL,0L,(-9L),6L,0xB7CFE843L,0x81FA499AL,6L},{0xB1BB19FEL,0x5B567C79L,0xF12483DFL,0L,0L,0xF12483DFL,0x5B567C79L}};
    int16_t **l_986[4] = {&g_237,&g_237,&g_237,&g_237};
    uint8_t l_1011 = 0xDAL;
    int64_t ***l_1018 = &g_659;
    uint32_t l_1057 = 1UL;
    uint32_t l_1136 = 0x687870F9L;
    int64_t ***l_1143 = &g_654;
    union U2 **l_1146[7];
    union U2 ***l_1145 = &l_1146[1];
    union U2 **** const l_1144[9] = {&l_1145,&l_1145,&l_1145,&l_1145,&l_1145,&l_1145,&l_1145,&l_1145,&l_1145};
    int32_t l_1164 = 0x898B80A2L;
    int16_t l_1167 = (-7L);
    int64_t **l_1190 = &g_655;
    int8_t l_1197[3][2];
    int32_t *l_1248 = (void*)0;
    struct S0 *l_1260 = &g_956;
    uint32_t l_1268 = 0x6C304ADAL;
    uint16_t l_1338[8][7][4] = {{{0x4F9EL,0x52D9L,0x2A53L,0x2A53L},{0x52D9L,0x52D9L,0xA009L,0x97A6L},{65535UL,0xDB7CL,0x2A53L,0x97A6L},{0xDB7CL,0x52D9L,0x8E63L,0x2A53L},{65535UL,0x52D9L,0x36D9L,0x97A6L},{0x52D9L,0xDB7CL,0x8E63L,0x97A6L},{0x4F9EL,0x52D9L,0x2A53L,0x2A53L}},{{0x52D9L,0x52D9L,0xA009L,0x97A6L},{65535UL,0xDB7CL,0x2A53L,0x97A6L},{0xDB7CL,0x52D9L,0x8E63L,0x2A53L},{65535UL,0x52D9L,0x36D9L,0x97A6L},{0x52D9L,0xDB7CL,0x8E63L,0x97A6L},{0x4F9EL,0x52D9L,0x2A53L,0x2A53L},{0x52D9L,0x52D9L,0xA009L,0x97A6L}},{{65535UL,0xDB7CL,0x2A53L,0x97A6L},{0xDB7CL,0x52D9L,0x8E63L,0x2A53L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L}},{{0x441BL,0xDB7CL,0xA009L,0x36D9L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L},{0x441BL,0xDB7CL,0xA009L,0x36D9L}},{{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L},{0x441BL,0xDB7CL,0xA009L,0x36D9L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L}},{{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L},{0x441BL,0xDB7CL,0xA009L,0x36D9L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L}},{{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L},{0x441BL,0xDB7CL,0xA009L,0x36D9L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L}},{{0xDB7CL,0xDB7CL,0x7905L,0x2A53L},{0x4F9EL,0x441BL,0x36D9L,0x2A53L},{0x441BL,0xDB7CL,0xA009L,0x36D9L},{0x4F9EL,0xDB7CL,0x97A6L,0x2A53L},{0xDB7CL,0x441BL,0xA009L,0x2A53L},{0x5A13L,0xDB7CL,0x36D9L,0x36D9L},{0xDB7CL,0xDB7CL,0x7905L,0x2A53L}}};
    int8_t l_1352 = (-10L);
    const int32_t l_1391[5] = {0x6F8B2480L,0x6F8B2480L,0x6F8B2480L,0x6F8B2480L,0x6F8B2480L};
    int32_t l_1392 = 0x2EFB97FAL;
    int32_t l_1415 = 0xC0B3EB2EL;
    uint8_t l_1528 = 0x3CL;
    uint32_t ****l_1568 = (void*)0;
    int16_t l_1619[10] = {5L,(-3L),5L,(-3L),5L,(-3L),5L,(-3L),5L,(-3L)};
    uint32_t l_1704 = 1UL;
    int32_t l_1731 = (-9L);
    const int32_t *l_1734 = &g_1735;
    int64_t l_1742 = 0xF4C8FA59FEFA9877LL;
    uint8_t l_1768[1][7];
    uint32_t l_1774 = 4294967295UL;
    uint32_t **l_1932[1][7][4];
    uint64_t l_1968 = 0xD71589FC1932CD18LL;
    uint8_t l_1978 = 0UL;
    uint32_t l_2010 = 0UL;
    uint8_t l_2036[1][2];
    uint64_t l_2065 = 0x51FEB7E2664D7A8BLL;
    uint32_t l_2095 = 4294967295UL;
    uint8_t l_2098 = 248UL;
    int i, j, k;
    for (i = 0; i < 7; i++)
        l_1146[i] = &g_613;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
            l_1197[i][j] = 0L;
    }
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 7; j++)
            l_1768[i][j] = 0x68L;
    }
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 4; k++)
                l_1932[i][j][k] = &g_341[4][3][2];
        }
    }
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 2; j++)
            l_2036[i][j] = 0x93L;
    }
    return (*l_1734);
}


/* ------------------------------------------ */
/* 
 * reads : g_28 g_29 g_275.f0
 * writes: g_29 g_440 g_275.f0
 */
static int32_t * func_12(int32_t * const * p_13, uint64_t  p_14, int64_t  p_15)
{ /* block id: 377 */
    int32_t *l_911 = (void*)0;
    int32_t *l_912 = &g_440[2];
    int32_t l_917 = 0x0B165312L;
    int32_t l_918 = 0L;
    int32_t l_919 = 0xF3928DAEL;
    int32_t l_920 = (-1L);
    int32_t l_921 = 0x9C3349F6L;
    int32_t l_922 = (-4L);
    int32_t l_923 = (-6L);
    int32_t l_924 = 0x031F4486L;
    int32_t l_925 = (-1L);
    int32_t l_926 = 1L;
    int32_t l_928[6][1] = {{0x1EA2ADC5L},{1L},{0x1EA2ADC5L},{1L},{0x1EA2ADC5L},{1L}};
    uint32_t l_929[10][9] = {{0x52316719L,0x38500127L,0xBE6E436AL,9UL,0xBE6E436AL,0x38500127L,0x52316719L,0UL,0x38500127L},{9UL,4294967289UL,4294967295UL,0UL,0UL,0xD910141AL,2UL,0UL,4294967289UL},{4294967291UL,4294967293UL,0x27B5DD13L,2UL,4294967295UL,4294967295UL,2UL,0x27B5DD13L,4294967293UL},{4294967294UL,0x27B5DD13L,0xD910141AL,0xBE6E436AL,4294967295UL,0xD910141AL,4294967291UL,4294967293UL,0x27B5DD13L},{0UL,0UL,0xD910141AL,2UL,0UL,4294967289UL,0xBE6E436AL,4294967289UL,0UL},{0UL,0x27B5DD13L,0x27B5DD13L,0UL,4294967293UL,0UL,4294967294UL,4294967289UL,0x27B5DD13L},{4294967294UL,4294967293UL,4294967295UL,0UL,0xD7B7D5D5L,0UL,0xBE6E436AL,4294967293UL,4294967293UL},{4294967291UL,4294967289UL,4294967293UL,0UL,4294967293UL,4294967289UL,4294967291UL,0x27B5DD13L,4294967289UL},{0UL,4294967289UL,4294967295UL,0UL,0UL,0xD910141AL,2UL,0UL,4294967289UL},{4294967291UL,4294967293UL,0x27B5DD13L,2UL,4294967295UL,4294967295UL,2UL,0x27B5DD13L,4294967293UL}};
    int i, j;
    (*l_912) = ((*g_28) = (*g_28));
    for (g_275.f0 = 0; (g_275.f0 != 36); g_275.f0 = safe_add_func_uint16_t_u_u(g_275.f0, 4))
    { /* block id: 382 */
        int64_t l_915[2];
        int32_t *l_916[8][6] = {{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]},{(void*)0,&g_440[4],&g_440[4],(void*)0,&g_440[4],&g_440[4]}};
        int i, j;
        for (i = 0; i < 2; i++)
            l_915[i] = (-8L);
        l_929[0][2]++;
    }
    return &g_29[4][0][1];
}


/* ------------------------------------------ */
/* 
 * reads : g_32
 * writes: g_32
 */
static const int32_t ** func_30(const uint64_t  p_31)
{ /* block id: 13 */
    int32_t *l_55 = (void*)0;
    int32_t *l_94 = &g_29[5][0][4];
    int32_t **l_364[3];
    int32_t ***l_363 = &l_364[0];
    uint32_t l_680 = 18446744073709551615UL;
    uint32_t l_683 = 0x5EBBCABBL;
    int64_t l_719 = 0x2BDF448059CBEF64LL;
    int16_t **l_761 = &g_237;
    int16_t **l_762 = &g_237;
    int8_t *l_811[2][2][7] = {{{&g_388[0],&g_18.f2,&g_388[0],&g_18.f2,&g_388[0],&g_18.f2,&g_388[0]},{&g_388[1],&g_18.f2,&g_18.f2,&g_388[1],&g_388[1],&g_18.f2,&g_18.f2}},{{(void*)0,&g_18.f2,(void*)0,&g_18.f2,(void*)0,&g_18.f2,(void*)0},{&g_388[1],&g_388[1],&g_18.f2,&g_18.f2,&g_388[1],&g_388[1],&g_18.f2}}};
    int8_t **l_810 = &l_811[1][1][5];
    uint16_t l_867 = 0xA675L;
    const uint32_t *l_870[7][2] = {{&g_76[3][1],(void*)0},{(void*)0,&g_76[3][1]},{(void*)0,(void*)0},{&g_76[3][1],(void*)0},{(void*)0,&g_76[3][1]},{(void*)0,(void*)0},{&g_76[3][1],(void*)0}};
    const uint32_t **l_869 = &l_870[5][1];
    const uint32_t ***l_868 = &l_869;
    int64_t l_871 = (-8L);
    uint32_t **l_900 = &g_146[5];
    uint32_t l_902[10][6][4] = {{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}},{{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL},{1UL,0UL,4294967286UL,0UL},{1UL,0x40FE6D9AL,4294967286UL,0x40FE6D9AL}}};
    const int32_t **l_905 = (void*)0;
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_364[i] = &l_55;
    for (g_32 = 1; (g_32 >= 0); g_32 -= 1)
    { /* block id: 16 */
        uint32_t *l_46 = (void*)0;
        uint32_t *l_47[3][9] = {{&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48,&g_48}};
        int32_t l_49 = 3L;
        int32_t ***l_60 = (void*)0;
        int32_t l_95 = 0xD8B0AA5FL;
        uint16_t *l_626 = (void*)0;
        uint16_t *l_627 = &g_323.f0;
        uint32_t l_628 = 18446744073709551615UL;
        const int32_t *l_652 = (void*)0;
        const int32_t **l_651[10] = {&l_652,&l_652,&l_652,&l_652,&l_652,&l_652,&l_652,&l_652,&l_652,&l_652};
        int64_t ***l_656 = &g_654;
        int64_t **l_658 = &g_655;
        int64_t ***l_657[5][2] = {{&l_658,&l_658},{&l_658,&l_658},{&l_658,&l_658},{&l_658,&l_658},{&l_658,&l_658}};
        uint32_t **l_674 = &g_146[5];
        int32_t l_686 = 0x622AED32L;
        int32_t l_687 = (-6L);
        uint16_t l_688 = 0xE8FCL;
        uint32_t **l_739 = &l_47[0][0];
        const uint32_t l_770 = 18446744073709551610UL;
        union U2 *l_857 = &g_858;
        int16_t l_901[1][2][8] = {{{0x00BCL,0x00BCL,(-1L),0L,0xDC75L,0L,(-1L),0x00BCL},{0x00BCL,0L,0x5346L,(-1L),(-1L),0x5346L,0L,0x00BCL}}};
        int i, j, k;
    }
    return l_905;
}


/* ------------------------------------------ */
/* 
 * reads : g_7 g_2 g_28 g_29 g_280.f0 g_312.f0 g_237 g_194 g_18.f1 g_324.f0 g_332.f0 g_279.f2 g_287.f2 g_290.f2 g_48 g_18.f3 g_76 g_18.f2 g_85 g_151 g_164 g_179 g_147 g_114 g_290.f0 g_267.f2
 * writes: g_147 g_305.f0 g_29 g_194 g_7 g_48 g_114 g_146 g_151 g_164 g_179 g_180 g_237
 */
static const int32_t * func_33(int32_t ** const * const  p_34)
{ /* block id: 261 */
    int32_t l_634 = 0x8B18DFA1L;
    int32_t *l_635[9] = {&g_2[5],&g_2[5],&g_2[5],&g_2[5],&g_2[5],&g_2[5],&g_2[5],&g_2[5],&g_2[5]};
    uint8_t l_636 = 0xFFL;
    uint32_t l_637[1][4][3] = {{{0xD9EF4CB1L,0x5735397EL,0x5735397EL},{0xD9EF4CB1L,0x5735397EL,0x5735397EL},{0xD9EF4CB1L,0x5735397EL,0x5735397EL},{0xD9EF4CB1L,0x5735397EL,0x5735397EL}}};
    uint32_t l_642 = 0xA06DBDB7L;
    int16_t l_645 = (-1L);
    uint32_t *l_646 = &g_147;
    int32_t *l_647 = &g_440[0];
    int64_t l_648 = (-1L);
    int8_t l_649 = (-1L);
    uint16_t l_650 = 0UL;
    int i, j, k;
    l_634 = (safe_mod_func_int8_t_s_s(0xC9L, 251UL));
    l_635[5] = func_56(func_50(l_635[6], (l_647 = func_66(l_636, &l_635[6], l_637[0][3][0], ((((*l_646) = (((*g_7) <= 0x86F801FBL) , ((((((((safe_sub_func_int32_t_s_s((safe_div_func_uint16_t_u_u(((((*g_28) || l_642) < (safe_lshift_func_uint8_t_u_u((l_645 , g_280.f0), g_312.f0))) & (*g_7)), 1L)), 4294967294UL)) <= (*g_237)) || (-6L)) , (void*)0) != (void*)0) , g_324.f0) != g_332.f0) <= 18446744073709551615UL))) ^ (-10L)) || (-1L)))), g_279[2].f2, &l_642), l_648, l_649);
    (*g_28) ^= l_650;
    return l_635[6];
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t ** const * func_35(uint64_t  p_36)
{ /* block id: 258 */
    union U2 **l_631[10] = {&g_613,(void*)0,&g_613,(void*)0,&g_613,(void*)0,&g_613,(void*)0,&g_613,(void*)0};
    union U2 ***l_630 = &l_631[9];
    union U2 ****l_629 = &l_630;
    int i;
    (*l_629) = (void*)0;
    return &g_180;
}


/* ------------------------------------------ */
/* 
 * reads : g_194 g_361 g_180 g_294.f0 g_267.f0 g_114 g_388 g_28 g_29 g_288.f2 g_412 g_285.f0 g_268.f0 g_311.f2 g_237 g_18.f1 g_7 g_2 g_333.f2 g_332.f2 g_441 g_314.f0 g_331.f0 g_311.f0 g_248.f2 g_332.f0 g_179 g_151 g_281.f0 g_76 g_460 g_461 g_293.f0 g_310.f0 g_317.f0 g_283.f0 g_241.f2 g_313.f0 g_277.f2 g_282.f0 g_305.f2 g_254.f0 g_599 g_276.f2 g_613 g_618 g_263.f0
 * writes: g_194 g_367 g_114 g_331.f0 g_388 g_29 g_441 g_314.f0 g_460 g_342 g_332.f0 g_300.f0 g_179 g_151 g_281.f0 g_293.f0 g_310.f0 g_272.f0 g_278.f0 g_341 g_85 g_263.f0
 */
static uint64_t  func_41(uint32_t  p_42, int32_t *** p_43, int32_t *** p_44, int32_t  p_45)
{ /* block id: 107 */
    int16_t *l_365 = &g_194;
    int16_t *l_366 = &g_367;
    int32_t l_368 = (-1L);
    uint8_t *l_374 = &g_114;
    uint8_t l_380 = 250UL;
    uint16_t *l_381 = &g_331.f0;
    uint16_t *l_382 = (void*)0;
    int32_t l_383[3];
    uint8_t *l_384[7];
    int32_t l_385[1];
    uint8_t l_386 = 250UL;
    int8_t *l_387 = &g_388[1];
    int32_t l_389 = 0x4D6B2067L;
    int32_t *l_390 = &l_383[1];
    int16_t **l_394 = &l_365;
    int16_t **l_395 = &l_366;
    uint32_t *l_414 = (void*)0;
    uint32_t *l_415 = (void*)0;
    uint32_t *l_416[3];
    int64_t l_417 = 0x4BABEF5B7D920499LL;
    int8_t l_418[10] = {1L,0x8AL,0x8AL,1L,0x94L,1L,0x8AL,0x8AL,1L,0x94L};
    int32_t *l_419 = &l_383[1];
    union U2 *l_422[6];
    uint8_t l_430 = 1UL;
    uint32_t l_435 = 0x090CE907L;
    int16_t l_447 = 0x5BE7L;
    int32_t l_511 = 0x795AFABDL;
    uint32_t l_531 = 0x81ABB1ADL;
    int64_t l_548 = 0x27915107CC1C3E08LL;
    uint8_t l_560 = 0x45L;
    int32_t *l_563[1][9];
    int32_t l_570 = (-6L);
    int16_t l_572 = 0L;
    uint64_t l_575 = 18446744073709551615UL;
    const int64_t *l_585[7];
    const int64_t **l_584 = &l_585[2];
    int64_t **l_586 = (void*)0;
    int8_t **l_619 = &l_387;
    uint8_t l_620[2];
    int i, j;
    for (i = 0; i < 3; i++)
        l_383[i] = 0x69877478L;
    for (i = 0; i < 7; i++)
        l_384[i] = &g_151;
    for (i = 0; i < 1; i++)
        l_385[i] = 0x6BF15968L;
    for (i = 0; i < 3; i++)
        l_416[i] = (void*)0;
    for (i = 0; i < 6; i++)
        l_422[i] = &g_423[0];
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 9; j++)
            l_563[i][j] = &l_383[1];
    }
    for (i = 0; i < 7; i++)
        l_585[i] = &g_85;
    for (i = 0; i < 2; i++)
        l_620[i] = 0UL;
    l_390 = ((**p_44) = func_66(((*l_366) = ((*l_365) ^= p_45)), (*g_361), ((-1L) == l_368), ((safe_lshift_func_uint16_t_u_u(0UL, (l_389 = (safe_mul_func_uint16_t_u_u(g_294.f0, (+((g_267.f0 >= p_42) <= ((*l_387) &= (((((++(*l_374)) >= (l_385[0] = (((safe_sub_func_uint16_t_u_u((l_383[1] = ((*l_381) = ((~(l_380 != (-2L))) , 3UL))), 65527UL)) >= p_45) >= p_42))) | l_386) , 9UL) || 65532UL))))))))) <= 0xAE65L)));
    (*l_419) |= (safe_rshift_func_int16_t_s_u((+((((*l_394) = l_382) == ((*l_395) = l_381)) && ((((safe_mul_func_uint8_t_u_u(((safe_sub_func_uint32_t_u_u((l_417 |= (((((((safe_lshift_func_int16_t_s_s((p_42 || 0x99L), 9)) != ((safe_div_func_int8_t_s_s(((*l_387) = (l_368 | (*g_28))), (safe_mod_func_int16_t_s_s((safe_mod_func_int32_t_s_s((safe_div_func_int64_t_s_s((safe_add_func_uint8_t_u_u(((*l_374) = (g_288.f2 , ((g_412 == g_412) < 0x13L))), l_385[0])), g_285.f0)), (*g_28))), p_45)))) || g_268.f0)) || p_45) || g_311.f2) == p_45) <= p_45) != p_45)), (*g_28))) < (*g_237)), l_418[7])) < p_42) & (*g_7)) >= 4294967295UL))), 12));
    if ((safe_add_func_int8_t_s_s(((((((p_45 , l_422[4]) != (((safe_lshift_func_uint16_t_u_u(g_333.f2, 15)) , g_332.f2) , l_422[3])) && (safe_lshift_func_uint8_t_u_u((0xD20FL > p_42), (safe_sub_func_uint16_t_u_u(p_45, l_430))))) , (*g_28)) | 0x1A3A0C45L) && 1UL), 0xCEL)))
    { /* block id: 124 */
        int32_t l_431 = 0L;
        int32_t *l_432 = &l_368;
        int32_t *l_433 = &l_385[0];
        int32_t *l_434[1][5];
        const union U2 *l_464[8];
        uint32_t **l_472 = &g_341[4][3][2];
        int i, j;
        for (i = 0; i < 1; i++)
        {
            for (j = 0; j < 5; j++)
                l_434[i][j] = (void*)0;
        }
        for (i = 0; i < 8; i++)
            l_464[i] = &g_465;
        l_419 = (l_431 , (void*)0);
        l_435--;
        if (((*g_28) = (&g_180 != (void*)0)))
        { /* block id: 128 */
            int64_t l_438 = 2L;
            int32_t l_439[9] = {1L,0L,1L,0L,1L,0L,1L,0L,1L};
            uint64_t l_448 = 0xF9A2D5659A52E3E6LL;
            uint32_t *l_462 = &g_342;
            uint16_t *l_463 = &g_250[1].f0;
            int i;
            --g_441;
            for (g_314.f0 = (-27); (g_314.f0 == 44); g_314.f0 = safe_add_func_int64_t_s_s(g_314.f0, 5))
            { /* block id: 132 */
                int8_t l_446 = 0L;
                (**p_44) = (**p_44);
                return l_446;
            }
            ++l_448;
            (*g_28) ^= ((((((*l_381)--) ^ 1L) >= (safe_lshift_func_uint8_t_u_u(p_45, 4))) , (safe_lshift_func_int16_t_s_s((((+(((safe_lshift_func_uint8_t_u_s(((g_460 = g_237) != (((*l_462) = (g_311.f0 < 0x3A72L)) , l_463)), 5)) >= g_248.f2) , ((l_464[3] == l_464[3]) && 0L))) | 18446744073709551615UL) <= p_42), 15))) & p_42);
        }
        else
        { /* block id: 141 */
            uint32_t l_466 = 0x17AC6931L;
            int64_t *l_471 = &g_85;
            --l_466;
            for (g_332.f0 = 0; (g_332.f0 <= 47); g_332.f0 = safe_add_func_uint8_t_u_u(g_332.f0, 9))
            { /* block id: 145 */
                for (g_300.f0 = 1; (g_300.f0 <= 6); g_300.f0 += 1)
                { /* block id: 148 */
                    int32_t *** const l_475 = (void*)0;
                    if (l_466)
                    { /* block id: 149 */
                        uint32_t ***l_473 = (void*)0;
                        uint32_t ***l_474 = &l_472;
                        (*l_433) = ((p_42 , l_471) == &g_85);
                        (*l_474) = l_472;
                    }
                    else
                    { /* block id: 152 */
                        p_43 = l_475;
                        (**p_44) = (void*)0;
                    }
                }
            }
        }
    }
    else
    { /* block id: 159 */
        uint8_t l_491 = 1UL;
        const int8_t *l_492 = (void*)0;
        int32_t l_493 = 0x03F2F67CL;
        int32_t l_494[8][8] = {{(-3L),0x3756CC6EL,0L,0L,0x3756CC6EL,(-3L),0x983A9C4AL,(-3L)},{0x3756CC6EL,(-3L),0x983A9C4AL,(-3L),0x3756CC6EL,0L,0L,0x3756CC6EL},{(-3L),(-1L),(-1L),(-3L),3L,0x3756CC6EL,3L,(-3L)},{(-1L),3L,(-1L),0L,0x983A9C4AL,0x983A9C4AL,0L,(-1L)},{3L,3L,0x983A9C4AL,0x3756CC6EL,5L,0x3756CC6EL,0x983A9C4AL,3L},{3L,(-1L),0L,0x983A9C4AL,0x983A9C4AL,0L,(-1L),3L},{(-1L),(-1L),5L,0L,5L,(-1L),0x3756CC6EL,0x3756CC6EL},{(-1L),0L,0x983A9C4AL,0x983A9C4AL,0L,(-1L),3L,(-1L)}};
        int32_t *l_522 = &l_493;
        int32_t l_582 = (-1L);
        int i, j;
        for (g_179 = 0; (g_179 > 38); g_179 = safe_add_func_int16_t_s_s(g_179, 9))
        { /* block id: 162 */
            uint32_t **l_487 = &l_416[0];
            int32_t l_500 = 2L;
            uint64_t l_512 = 18446744073709551607UL;
            for (g_331.f0 = 0; (g_331.f0 <= 0); g_331.f0 += 1)
            { /* block id: 165 */
                uint8_t *l_482 = &g_114;
                int i, j;
                for (g_151 = 0; (g_151 <= 0); g_151 += 1)
                { /* block id: 168 */
                    int i;
                    l_385[g_331.f0] = l_385[g_151];
                }
                for (g_281.f0 = 0; (g_281.f0 <= 0); g_281.f0 += 1)
                { /* block id: 173 */
                    int i, j;
                    if (l_385[g_281.f0])
                        break;
                    l_385[g_331.f0] = (g_76[g_331.f0][g_331.f0] , g_76[(g_331.f0 + 3)][(g_281.f0 + 4)]);
                }
                l_494[5][7] &= ((((l_385[g_331.f0] == (safe_lshift_func_uint8_t_u_s((safe_add_func_int32_t_s_s((((*l_419) = (((void*)0 != l_482) > (l_385[g_331.f0] > (-1L)))) & l_385[g_331.f0]), (safe_rshift_func_int16_t_s_s((((safe_mul_func_int8_t_s_s(((void*)0 == l_487), (((((safe_mod_func_int64_t_s_s(((+(l_491 = g_76[(g_331.f0 + 1)][(g_331.f0 + 1)])) & p_42), p_42)) , l_492) == (void*)0) > 0x11L) && 0x74D19CB0L))) | p_45) > 0L), 12)))), l_493))) , 0x1B17L) && (*g_460)) , g_76[(g_331.f0 + 1)][(g_331.f0 + 1)]);
            }
            (*g_28) = 0L;
            for (l_447 = 19; (l_447 < (-7)); l_447--)
            { /* block id: 184 */
                int32_t l_499 = (-1L);
                int32_t l_510 = 8L;
                for (g_293.f0 = (-4); (g_293.f0 >= 16); g_293.f0 = safe_add_func_int8_t_s_s(g_293.f0, 2))
                { /* block id: 187 */
                    int32_t *l_501 = &l_383[1];
                    int32_t *l_502 = (void*)0;
                    int32_t *l_503 = &l_383[1];
                    int32_t *l_504 = (void*)0;
                    int32_t *l_505 = &g_440[0];
                    int32_t *l_506 = (void*)0;
                    int32_t *l_507 = &g_440[0];
                    int32_t *l_508 = &l_494[5][7];
                    int32_t *l_509[4][2][9] = {{{&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0]},{&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32}},{{&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0]},{&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32}},{{&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0]},{&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32}},{{&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0],&l_385[0]},{&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32,&l_385[0],&g_32}}};
                    int i, j, k;
                    l_512--;
                    if (l_499)
                        break;
                }
            }
        }
        (*g_28) |= (*l_419);
        l_493 = (*l_419);
        for (g_310.f0 = 0; (g_310.f0 <= 19); g_310.f0 = safe_add_func_uint32_t_u_u(g_310.f0, 3))
        { /* block id: 197 */
            uint32_t **l_543[5] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
            int32_t l_556 = 0xE44D1852L;
            int32_t l_557 = 0x3A4746D6L;
            int32_t l_558 = 0x8BCD272BL;
            int32_t l_559 = 0x79981121L;
            int32_t l_566 = 0xEBC6D4E4L;
            int32_t l_567 = (-8L);
            int32_t l_568[1];
            int64_t *l_591[7][10][3] = {{{&l_417,&l_548,&l_417},{&l_548,&g_85,&l_548},{&g_85,&l_548,(void*)0},{(void*)0,(void*)0,&l_548},{(void*)0,&l_548,&l_417},{(void*)0,&g_85,&l_548},{&l_417,&l_548,(void*)0},{&l_548,&l_548,&l_548},{(void*)0,&l_548,&l_417},{(void*)0,&l_548,&l_548}},{{(void*)0,&l_548,(void*)0},{(void*)0,(void*)0,&l_548},{&l_417,&l_548,&l_417},{&l_548,&g_85,&l_548},{&g_85,&l_548,(void*)0},{(void*)0,(void*)0,&l_548},{(void*)0,&l_548,&l_417},{(void*)0,&g_85,&l_548},{&l_417,&l_548,(void*)0},{&l_548,&l_548,&l_548}},{{(void*)0,&l_548,&l_417},{(void*)0,&l_548,&l_548},{(void*)0,&l_548,(void*)0},{(void*)0,(void*)0,&l_548},{&l_417,&l_548,&l_417},{&l_548,&g_85,&l_548},{&g_85,&l_548,(void*)0},{(void*)0,(void*)0,&l_548},{(void*)0,&l_548,&l_417},{(void*)0,&g_85,&l_548}},{{&l_417,&l_548,(void*)0},{&l_548,&l_548,&l_548},{(void*)0,&l_548,&l_417},{(void*)0,(void*)0,&g_85},{&l_417,&l_417,(void*)0},{&g_85,(void*)0,&g_85},{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85},{&l_417,&l_417,(void*)0},{(void*)0,&g_85,&g_85}},{{(void*)0,&l_417,(void*)0},{&g_85,&g_85,&g_85},{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85},{(void*)0,&l_417,(void*)0},{(void*)0,(void*)0,&g_85},{&l_417,&l_417,(void*)0},{&g_85,(void*)0,&g_85},{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85}},{{&l_417,&l_417,(void*)0},{(void*)0,&g_85,&g_85},{(void*)0,&l_417,(void*)0},{&g_85,&g_85,&g_85},{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85},{(void*)0,&l_417,(void*)0},{(void*)0,(void*)0,&g_85},{&l_417,&l_417,(void*)0},{&g_85,(void*)0,&g_85}},{{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85},{&l_417,&l_417,(void*)0},{(void*)0,&g_85,&g_85},{(void*)0,&l_417,(void*)0},{&g_85,&g_85,&g_85},{&l_548,(void*)0,(void*)0},{&l_548,&l_548,&g_85},{(void*)0,&l_417,(void*)0},{(void*)0,(void*)0,&g_85}}};
            int64_t **l_590 = &l_591[5][8][2];
            int16_t **l_593 = &l_366;
            union U2 *l_616 = &g_617;
            int i, j, k;
            for (i = 0; i < 1; i++)
                l_568[i] = (-1L);
            for (g_272.f0 = 0; (g_272.f0 != 18); g_272.f0++)
            { /* block id: 200 */
                int32_t * const l_521 = (void*)0;
                int32_t l_527 = 0xBF730784L;
                int32_t l_528 = (-1L);
                int32_t l_529[8][10] = {{(-9L),(-9L),(-7L),0x0A76803DL,1L,(-7L),1L,0x0A76803DL,(-7L),(-9L)},{1L,0L,0x75C0D9CEL,1L,(-2L),(-2L),1L,0x75C0D9CEL,0L,1L},{0x75C0D9CEL,(-9L),0L,(-2L),(-9L),(-2L),0L,(-9L),0x75C0D9CEL,0x75C0D9CEL},{1L,0x0A76803DL,(-7L),(-9L),(-9L),(-7L),0x0A76803DL,1L,(-7L),1L},{(-9L),0L,(-2L),(-9L),(-2L),0L,(-9L),0x75C0D9CEL,0x75C0D9CEL,(-9L)},{0x75C0D9CEL,1L,(-2L),(-2L),1L,0x75C0D9CEL,0L,1L,0L,0x75C0D9CEL},{0x0A76803DL,1L,(-7L),1L,0x0A76803DL,(-7L),(-9L),(-9L),(-7L),0x0A76803DL},{0x0A76803DL,0L,0L,0x0A76803DL,(-2L),0x75C0D9CEL,0x0A76803DL,0x75C0D9CEL,(-2L),0x0A76803DL}};
                int16_t l_569 = 7L;
                int i, j;
                for (g_278.f0 = 0; (g_278.f0 >= 49); g_278.f0 = safe_add_func_int8_t_s_s(g_278.f0, 9))
                { /* block id: 203 */
                    uint8_t l_525 = 0xEAL;
                    int32_t l_526 = 6L;
                    int32_t l_530[10][3][8] = {{{0L,(-1L),1L,7L,0L,7L,1L,(-1L)},{0L,8L,7L,0L,(-1L),0x423314E7L,7L,1L},{0L,0xC41575A0L,0x550606AEL,0xC0917CFAL,0L,0x83F5EEDCL,7L,0x0E391393L}},{{(-1L),0xC0917CFAL,7L,0x423314E7L,(-10L),0x5016C90EL,1L,7L},{(-10L),0x5016C90EL,1L,7L,0x40884247L,1L,0xFE54F21CL,0xD616655CL},{(-1L),0x9213B34CL,0L,6L,0x0E391393L,(-1L),(-10L),0L}},{{0x370F6E64L,0x94C7BD57L,0L,0x085800BBL,6L,0x40884247L,0x423314E7L,0xC0917CFAL},{0x66604B4EL,0xFABA3D5BL,0x370F6E64L,1L,(-1L),1L,(-1L),0xBA438DEEL},{0xC0917CFAL,0xFE54F21CL,0xC9B86D0DL,0x94C7BD57L,0x9213B34CL,0xB10498ECL,0xC0917CFAL,0xC41575A0L}},{{0x62664931L,0xC0917CFAL,1L,0x370F6E64L,(-1L),0xD616655CL,(-1L),0L},{(-1L),5L,0x40884247L,0x4F6DEDC0L,0x0780F7D8L,0x423314E7L,(-1L),1L},{6L,(-1L),(-1L),0L,0x9213B34CL,0xD9863270L,0L,0L}},{{(-1L),(-1L),1L,1L,(-1L),(-1L),0x6C513C96L,(-1L)},{0x66604B4EL,0x423314E7L,0x8E0FB35FL,0x9213B34CL,1L,(-1L),6L,(-1L)},{(-2L),0L,(-10L),0x9213B34CL,0x0E391393L,(-2L),(-1L),(-1L)}},{{0x0780F7D8L,0x0E391393L,0xD616655CL,1L,7L,0x085800BBL,8L,0L},{(-10L),0x911A96F8L,0x62664931L,0L,0xD616655CL,0x6C513C96L,0xEDC4F0FAL,1L},{(-1L),(-1L),0xB10498ECL,0x4F6DEDC0L,0L,0x68DA9909L,(-2L),0L}},{{0x911A96F8L,(-6L),0x5016C90EL,0x370F6E64L,0xC0917CFAL,0x0780F7D8L,(-1L),0xC41575A0L},{0L,1L,0x62664931L,0x94C7BD57L,0xBA438DEEL,8L,(-1L),0xBA438DEEL},{1L,(-10L),0x83F5EEDCL,1L,0xC41575A0L,0x31B92F92L,(-1L),0xC0917CFAL}},{{0xA1779872L,(-1L),5L,0x085800BBL,0L,0x370F6E64L,0x62664931L,0L},{(-1L),0x0CED98E7L,0x8E0FB35FL,6L,1L,(-1L),0x3B793811L,0xD616655CL},{0x0E391393L,(-10L),0x374987E1L,7L,0L,1L,0x8E0FB35FL,0xBA438DEEL}},{{0xFA74B379L,0L,0xFA74B379L,(-10L),0x370F6E64L,0xD9863270L,0x68DA9909L,2L},{1L,0x76F5A416L,0x550606AEL,0x911A96F8L,(-1L),0xB10498ECL,0x370F6E64L,0x38AF96B5L},{1L,0x085800BBL,1L,1L,0x370F6E64L,0x4F6DEDC0L,0x911A96F8L,1L}},{{0xFA74B379L,(-1L),0x9F654C83L,1L,0x8E0FB35FL,0x2DC67AE3L,1L,0x0780F7D8L},{2L,0xE76FA653L,0xF9D7A78DL,(-1L),(-1L),0x68DA9909L,5L,0xD9863270L},{(-1L),1L,(-10L),(-1L),(-1L),(-2L),0x0CED98E7L,7L}}};
                    int64_t *l_538 = &l_417;
                    uint32_t **l_545 = (void*)0;
                    uint32_t ***l_544 = &l_545;
                    uint32_t **l_546 = &g_341[1][1][0];
                    uint8_t l_596 = 249UL;
                    int i, j, k;
                    l_522 = l_521;
                    (*l_419) |= (safe_add_func_int32_t_s_s(7L, (p_42 & (((((((((*l_538) = (((((l_525 >= (++l_531)) , (safe_lshift_func_int8_t_s_s(g_317[4].f0, 0))) < ((*g_460) & ((0x6FL & (0xDAL || (((*l_366) = (((safe_mod_func_int8_t_s_s((((8UL == 0xFDB6L) | 0x6BC0L) < 251UL), p_42)) != 6UL) >= g_283.f0)) == (-9L)))) && l_526))) > p_45) | g_241.f2)) != (-10L)) | p_42) ^ g_313.f0) , 7L) , l_494[5][7]) >= 0x70D705B708518795LL) <= g_277.f2))));
                    if (((safe_sub_func_uint64_t_u_u((safe_rshift_func_uint8_t_u_s((l_543[4] != ((*l_544) = (void*)0)), 3)), ((((&g_367 != &g_367) & ((0xC074220CL || (((*l_546) = l_522) != &p_42)) == (((((safe_unary_minus_func_uint8_t_u(((*g_237) < ((*g_460) | p_42)))) ^ 4294967295UL) != l_530[3][2][7]) == p_45) != g_282.f0))) > (-6L)) || g_305.f2))) || 0x5B65673DL))
                    { /* block id: 211 */
                        int32_t *l_549 = &l_389;
                        int32_t *l_550 = &g_440[0];
                        int32_t *l_551 = &l_529[2][0];
                        int32_t *l_552 = &l_494[6][3];
                        int32_t *l_553 = &l_530[5][0][7];
                        int32_t *l_554 = &g_440[1];
                        int32_t *l_555[3];
                        int i;
                        for (i = 0; i < 3; i++)
                            l_555[i] = &l_529[4][6];
                        l_560++;
                        (**p_44) = (**p_44);
                        l_563[0][1] = &g_29[4][0][1];
                        (*l_553) = p_42;
                    }
                    else
                    { /* block id: 216 */
                        int32_t l_564 = 0xB9DC7967L;
                        int32_t l_565 = 0x8DC383D3L;
                        int32_t l_571 = 1L;
                        int32_t l_573 = 1L;
                        int32_t l_574[6] = {0L,0L,0L,0L,0L,0L};
                        int64_t ***l_587 = &l_586;
                        int64_t **l_589 = &l_538;
                        int64_t ***l_588[7][7] = {{&l_589,&l_589,(void*)0,&l_589,&l_589,&l_589,(void*)0},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,(void*)0,(void*)0,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,(void*)0},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,(void*)0,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,(void*)0,(void*)0}};
                        int16_t ***l_592[3];
                        int i, j;
                        for (i = 0; i < 3; i++)
                            l_592[i] = &l_394;
                        --l_575;
                        (**p_44) = &l_368;
                        if ((***p_44))
                            break;
                        (*g_28) = ((safe_lshift_func_int16_t_s_u((l_574[0] >= (safe_mod_func_uint32_t_u_u((((g_254.f0 <= (l_582 < ((l_596 = ((safe_unary_minus_func_int8_t_s(((p_42 ^ (l_584 == (l_590 = ((*l_587) = l_586)))) != (((l_593 = &g_237) != &g_237) , ((safe_sub_func_uint64_t_u_u(p_42, p_45)) , 0xB44139F9L))))) || (*g_28))) < (*g_460)))) || p_42) ^ p_42), (-1L)))), 4)) > p_42);
                    }
                }
                if ((((((((-1L) < (g_599 != (void*)0)) , (safe_sub_func_int8_t_s_s((((((l_568[0] = p_45) , p_42) | (g_18.f1 , (g_85 = (safe_rshift_func_uint8_t_u_s((0xE7E53B02L == (((**l_395) = ((p_45 , (p_42 && 0L)) , p_45)) & p_45)), 1))))) >= g_276.f2) | (-10L)), 0xD0L))) | 0xEA5B71CFBB1A6358LL) , 0x688FL) >= (*g_460)) , 0x428340F4L))
                { /* block id: 230 */
                    int32_t l_610 = 0x215C90B1L;
                    for (l_527 = 0; (l_527 <= 1); l_527 += 1)
                    { /* block id: 233 */
                        int16_t *l_604[10][4] = {{(void*)0,&g_18.f1,&l_572,&g_18.f3},{&g_194,&g_18.f1,&g_18.f1,&g_194},{&g_18.f1,&g_194,(void*)0,&l_447},{&g_18.f1,(void*)0,&g_18.f1,&l_572},{&g_194,&l_447,&l_572,&l_572},{(void*)0,(void*)0,&g_18.f3,&l_447},{&l_447,&g_194,&g_18.f3,&g_194},{(void*)0,&g_18.f1,&l_572,&g_18.f3},{&g_194,&g_18.f1,&g_18.f1,&g_194},{&g_18.f1,&g_194,(void*)0,&l_447}};
                        int i, j, k;
                        g_29[(l_527 + 3)][l_527][(l_527 + 5)] = (((*l_381) = (*g_460)) <= ((g_194 = (*l_419)) == (safe_div_func_uint16_t_u_u((safe_unary_minus_func_int8_t_s((l_610 || (0x29E9FB67L >= 1UL)))), (*g_460)))));
                    }
                    (*l_419) = ((p_42 <= (-1L)) < ((safe_lshift_func_int8_t_s_u(0x6DL, 2)) , (65535UL ^ ((*l_381) = 65533UL))));
                }
                else
                { /* block id: 240 */
                    union U2 **l_615 = &l_422[2];
                    l_616 = ((*l_615) = g_613);
                    return g_618;
                }
                l_619 = (void*)0;
                l_620[0]++;
            }
        }
    }
    for (g_263.f0 = 0; (g_263.f0 != 43); g_263.f0++)
    { /* block id: 252 */
        int64_t l_625 = 8L;
        if ((*g_28))
            break;
        if (l_625)
            continue;
    }
    return g_283.f0;
}


/* ------------------------------------------ */
/* 
 * reads : g_305.f0 g_287.f2 g_29 g_290.f2 g_28 g_194
 * writes: g_305.f0 g_29 g_194
 */
static int32_t *** func_50(int32_t * p_51, int32_t * p_52, int64_t  p_53, uint32_t * p_54)
{ /* block id: 93 */
    int8_t l_346 = 1L;
    int32_t l_348 = 0x919F8683L;
    int32_t l_349 = 0x0764D266L;
    int32_t l_350 = (-1L);
    int32_t l_351 = (-9L);
    int32_t l_352 = 0xFE50595EL;
    int32_t l_353[9][7] = {{0x925DAA8CL,(-1L),(-1L),0x925DAA8CL,0x621DFF24L,0x925DAA8CL,(-1L)},{(-1L),(-1L),0xD608B34CL,(-1L),0xD608B34CL,(-1L),(-1L)},{0xF4D58D47L,(-1L),0x318A9A59L,(-1L),0xF4D58D47L,0xF4D58D47L,(-1L)},{1L,0xAC4A2D65L,1L,0xD608B34CL,0xD608B34CL,1L,0xAC4A2D65L},{(-1L),0x621DFF24L,0x318A9A59L,0x318A9A59L,0x621DFF24L,(-1L),0x621DFF24L},{1L,0xD608B34CL,0xD608B34CL,1L,0xAC4A2D65L,1L,0xD608B34CL},{0xF4D58D47L,0xF4D58D47L,(-1L),0x318A9A59L,0x925DAA8CL,(-1L),(-1L)},{0xD608B34CL,1L,0xAC4A2D65L,1L,0xD608B34CL,0xD608B34CL,1L},{0x318A9A59L,0xF4D58D47L,0x318A9A59L,0x925DAA8CL,0x925DAA8CL,0x318A9A59L,0xF4D58D47L}};
    int32_t l_354[2];
    uint32_t l_355 = 0xA3AA215BL;
    int i, j;
    for (i = 0; i < 2; i++)
        l_354[i] = 9L;
    for (g_305.f0 = (-14); (g_305.f0 <= 54); ++g_305.f0)
    { /* block id: 96 */
        int32_t *l_345 = &g_29[4][0][1];
        int32_t *l_347[4] = {&g_2[0],&g_2[0],&g_2[0],&g_2[0]};
        int16_t *l_360 = &g_194;
        int i;
        --l_355;
        l_354[1] = (~(l_348 = ((*l_360) |= ((((!p_53) == ((p_53 == 0UL) < g_287.f2)) <= (((*g_28) = ((-1L) ^ ((0xB15FL < (0UL > (*l_345))) < g_290.f2))) && 1UL)) && p_53))));
        return &g_180;
    }
    return &g_180;
}


/* ------------------------------------------ */
/* 
 * reads : g_48 g_7 g_2 g_29 g_18.f3 g_76 g_18.f2 g_28 g_85 g_151 g_164 g_179 g_18.f1 g_147 g_194 g_114 g_237 g_290.f0 g_267.f2
 * writes: g_7 g_48 g_114 g_29 g_146 g_151 g_164 g_179 g_180 g_194 g_237
 */
static int32_t * func_56(int32_t *** p_57, uint32_t  p_58, uint32_t  p_59)
{ /* block id: 30 */
    int32_t *l_96 = &g_2[6];
    int32_t l_100 = (-1L);
    int32_t l_101 = 0xBD0F6480L;
    int32_t l_102[8][2][5] = {{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}},{{0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L,0x4E4257D9L},{(-1L),(-1L),(-1L),(-1L),(-1L)}}};
    uint8_t l_119 = 0x90L;
    int64_t *l_162 = (void*)0;
    int32_t l_210 = 4L;
    uint32_t l_232 = 0x7505CF3AL;
    int16_t *l_238[3];
    const uint16_t l_239 = 0x1932L;
    int32_t *l_340 = &l_102[4][0][3];
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_238[i] = &g_194;
    g_7 = l_96;
    for (g_48 = (-30); (g_48 <= 2); g_48 = safe_add_func_uint32_t_u_u(g_48, 1))
    { /* block id: 34 */
        int32_t *l_99[1][8][6] = {{{(void*)0,&g_2[4],&g_2[1],&g_32,&g_2[1],&g_2[4]},{(void*)0,&g_2[4],&g_29[4][0][1],&g_32,&g_29[4][0][1],&g_2[4]},{(void*)0,&g_2[4],&g_2[1],&g_32,&g_2[1],&g_2[4]},{(void*)0,&g_2[4],&g_29[4][0][1],&g_32,&g_29[4][0][1],&g_2[4]},{(void*)0,&g_2[4],&g_2[1],&g_32,&g_2[1],&g_2[4]},{(void*)0,&g_2[4],&g_29[4][0][1],&g_32,&g_29[4][0][1],&g_2[4]},{(void*)0,&g_2[4],&g_2[1],&g_32,&g_2[1],&g_2[4]},{(void*)0,&g_2[4],&g_29[4][0][1],&g_32,&g_29[4][0][1],&g_2[4]}}};
        uint32_t l_103 = 0x5A05CCE5L;
        uint8_t *l_113 = &g_114;
        uint32_t *l_120 = &l_103;
        const int32_t **l_121 = (void*)0;
        int32_t **l_122 = &l_99[0][0][4];
        int16_t *l_235 = &g_18.f1;
        int i, j, k;
        l_103++;
        (*g_28) = (((g_48 >= (((((*l_120) &= (safe_sub_func_int8_t_s_s(((p_58 ^ ((safe_div_func_uint32_t_u_u((+(*g_7)), (g_29[4][0][6] || ((safe_mul_func_int8_t_s_s(((((((*l_113) = g_2[2]) != (safe_rshift_func_int8_t_s_s((g_18.f3 <= ((safe_div_func_uint32_t_u_u(0xA9A75A9EL, (*g_7))) , ((g_2[6] ^ 0UL) ^ g_48))), p_58))) & g_76[3][4]) , l_119) > g_18.f2), 0x2DL)) == p_59)))) > 0UL)) , p_58), p_59))) >= (*l_96)) , l_121) != l_122)) ^ 0x41L) != 1UL);
        for (g_114 = 24; (g_114 != 9); --g_114)
        { /* block id: 41 */
            uint8_t l_125 = 8UL;
            int64_t **l_177 = &l_162;
            int32_t **l_182 = &l_99[0][2][1];
            int16_t *l_193 = &g_194;
            int8_t l_195 = 2L;
            union U2 *l_240[5][6][8] = {{{&g_262,&g_260,(void*)0,&g_317[4],&g_286[0],(void*)0,&g_282,&g_307},{&g_326[5],&g_312,&g_321,&g_257,&g_304[2][1][0],(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,&g_278,&g_292,&g_331,(void*)0,(void*)0,&g_288},{&g_284[0][0][5],&g_247,(void*)0,&g_333,&g_270,&g_314,(void*)0,&g_286[0]},{&g_272,&g_315,&g_290,&g_287,(void*)0,&g_243,(void*)0,&g_287},{&g_260,(void*)0,&g_299,&g_286[0],(void*)0,&g_314,&g_270,&g_333}},{{(void*)0,&g_321,&g_277,&g_245,&g_333,&g_255,(void*)0,&g_251[1][1][0]},{(void*)0,&g_309[5],&g_251[1][1][0],(void*)0,(void*)0,&g_292,&g_315,&g_270},{&g_299,&g_302,(void*)0,(void*)0,&g_249,&g_334,&g_255,&g_288},{&g_309[5],(void*)0,&g_314,&g_255,&g_307,(void*)0,&g_290,&g_312},{&g_324,&g_304[2][1][0],(void*)0,&g_329,(void*)0,&g_247,&g_332,&g_249},{&g_249,&g_312,&g_302,&g_314,&g_253[5],&g_304[2][1][0],&g_286[0],&g_286[0]}},{{&g_277,&g_326[5],&g_304[2][1][0],&g_304[2][1][0],&g_326[5],&g_277,&g_334,&g_324},{(void*)0,&g_249,&g_310,&g_299,&g_309[5],&g_245,&g_296,&g_278},{&g_334,(void*)0,(void*)0,&g_299,&g_298[9],&g_317[4],&g_266[0],&g_324},{&g_282,&g_298[9],&g_243,&g_304[2][1][0],&g_292,&g_299,&g_329,&g_286[0]},{(void*)0,&g_331,&g_268,&g_314,&g_290,&g_288,&g_304[2][1][0],&g_249},{&g_280,&g_277,&g_290,&g_329,&g_293,&g_282,&g_287,&g_312}},{{&g_329,&g_314,&g_321,&g_255,(void*)0,&g_280,(void*)0,&g_288},{&g_292,&g_270,&g_264,(void*)0,&g_314,(void*)0,&g_264,&g_270},{&g_262,&g_317[4],(void*)0,(void*)0,&g_332,&g_286[0],(void*)0,&g_251[1][1][0]},{(void*)0,&g_282,&g_253[5],&g_245,&g_262,(void*)0,(void*)0,&g_333},{&g_304[2][1][0],&g_245,(void*)0,&g_286[0],&g_288,&g_310,&g_264,(void*)0},{&g_288,&g_310,&g_264,(void*)0,&g_319,&g_332,(void*)0,&g_326[5]}},{{&g_278,&g_288,&g_321,(void*)0,&g_264,&g_266[0],&g_287,&g_329},{&g_270,&g_272,&g_290,&g_333,&g_302,&g_293,&g_304[2][1][0],&g_242},{&g_266[0],&g_255,&g_268,&g_296,&g_257,&g_329,&g_329,&g_257},{&g_268,&g_243,&g_243,&g_268,(void*)0,&g_278,&g_266[0],&g_277},{(void*)0,&g_333,(void*)0,&g_332,&g_272,&g_319,&g_296,(void*)0},{&g_324,(void*)0,&g_260,(void*)0,&g_280,&g_315,&g_284[0][0][5],&g_274}}};
            int i, j, k;
            l_125++;
            for (p_59 = 0; (p_59 > 47); p_59 = safe_add_func_int32_t_s_s(p_59, 7))
            { /* block id: 45 */
                int64_t l_134 = 0L;
                uint8_t *l_135 = &l_119;
                uint32_t **l_144 = (void*)0;
                uint32_t **l_145[1];
                int16_t l_148[4] = {0x68ECL,0x68ECL,0x68ECL,0x68ECL};
                int64_t *l_149 = (void*)0;
                int64_t *l_150 = &l_134;
                uint32_t *l_156[7] = {&g_76[1][4],&g_48,&g_76[1][4],&g_76[1][4],&g_48,&g_76[1][4],&g_76[1][4]};
                uint64_t l_160 = 1UL;
                int64_t **l_161 = (void*)0;
                uint64_t *l_163 = &g_164;
                uint64_t *l_178 = &g_179;
                int32_t ***l_181[2][4] = {{(void*)0,(void*)0,&l_122,(void*)0},{(void*)0,&l_122,&l_122,(void*)0}};
                int i, j;
                for (i = 0; i < 1; i++)
                    l_145[i] = &l_120;
                g_151 ^= (l_125 == (safe_sub_func_int64_t_s_s(g_29[4][1][1], (((p_58 , (void*)0) == (void*)0) | ((*l_150) = (((safe_mod_func_int64_t_s_s(((((g_29[4][0][1] < (((((*l_135) = l_134) < ((safe_lshift_func_uint8_t_u_u((safe_lshift_func_int8_t_s_u((((safe_add_func_uint8_t_u_u((safe_div_func_int64_t_s_s((((g_146[5] = func_66(g_85, &g_7, g_76[1][4], p_58)) == &g_147) != g_2[0]), 1L)), g_29[4][0][1])) , l_125) ^ 6UL), p_58)), 1)) && 0x24A68E686C562556LL)) || g_29[4][0][1]) ^ l_148[2])) | p_59) , (void*)0) == (void*)0), p_59)) , 0xDFB8A6804FA82FB5LL) ^ 9L))))));
                for (l_125 = 0; (l_125 >= 25); ++l_125)
                { /* block id: 52 */
                    return &g_2[6];
                }
                l_102[4][0][3] |= ((*g_28) |= ((safe_mod_func_uint32_t_u_u(((void*)0 == l_156[6]), (((((safe_rshift_func_uint8_t_u_s((((*l_163) |= (~((l_160 , (l_149 = &g_85)) != l_162))) ^ ((*l_178) &= (safe_sub_func_int64_t_s_s(((p_58 >= ((safe_lshift_func_uint8_t_u_s(((*l_135)++), 6)) , g_2[6])) || (safe_sub_func_int64_t_s_s((safe_div_func_int64_t_s_s((safe_div_func_uint8_t_u_u(((void*)0 == l_177), p_58)), g_2[5])), p_58))), 0xA1F6060BA4DF932BLL)))), 7)) , p_58) , &g_2[3]) != &g_29[3][1][0]) , p_59))) & 0xD1E8L));
                l_182 = (g_180 = &g_7);
            }
            if ((safe_mul_func_int16_t_s_s(((+g_29[1][1][5]) == ((~(safe_mul_func_int8_t_s_s(((*l_96) <= p_59), p_58))) && p_58)), ((((g_164 , (((((p_59 , ((*l_193) ^= (safe_mod_func_uint8_t_u_u(g_18.f1, (safe_rshift_func_uint8_t_u_s(g_147, 1)))))) & g_151) , 0x5FL) ^ 4UL) , g_2[4])) | g_29[4][0][1]) ^ l_195) || p_58))))
            { /* block id: 65 */
                uint32_t l_196 = 0x554DE583L;
                uint8_t *l_197 = &l_119;
                uint8_t *l_198 = (void*)0;
                uint8_t *l_199 = &l_125;
                uint32_t **l_217 = (void*)0;
                uint32_t **l_218 = &g_146[5];
                int32_t ***l_223 = &g_180;
                union U2 **l_335 = (void*)0;
                union U2 **l_336 = &l_240[4][4][0];
                l_196 = ((*g_28) = p_58);
                if ((((((*l_199) = ((*l_197) = 0UL)) != (safe_mod_func_int32_t_s_s((safe_sub_func_uint32_t_u_u(((g_76[3][2] < p_58) >= p_59), (((*l_193) = (safe_mul_func_uint16_t_u_u(((safe_mod_func_int32_t_s_s(((safe_lshift_func_int8_t_s_u(((((-4L) <= ((*l_120) = ((l_210 > ((safe_div_func_int8_t_s_s((((safe_mul_func_uint16_t_u_u(((-1L) & (safe_mod_func_int8_t_s_s((((*l_218) = l_96) != (void*)0), g_194))), 0xFA4DL)) <= 0xC9EE6F4BL) , g_18.f2), g_2[6])) ^ 1UL)) , p_58))) <= p_58) , 0L), 0)) | (-3L)), g_179)) != g_18.f1), (-8L)))) , 0xD1BDCF16L))), (*l_96)))) == 0L) == (*l_96)))
                { /* block id: 73 */
                    return &g_2[3];
                }
                else
                { /* block id: 75 */
                    int16_t *l_226 = &g_194;
                    int8_t *l_230[1][3][1];
                    int32_t l_231 = 1L;
                    int16_t **l_236[9][9] = {{(void*)0,&l_226,&l_226,&l_235,&l_226,&l_226,&l_235,(void*)0,&l_235},{&l_235,&l_226,&l_193,&l_235,&l_235,&l_235,&l_193,&l_235,&l_235},{&l_193,&l_193,&l_235,&l_226,&l_226,&l_235,&l_193,&l_193,&l_226},{&l_226,&l_235,&l_193,&l_193,(void*)0,&l_193,&l_235,&l_226,&l_226},{&l_193,&l_235,&l_235,&l_235,(void*)0,&l_193,(void*)0,&l_235,&l_226},{&l_226,&l_193,&l_226,&l_235,&l_235,&l_235,&l_235,&l_235,&l_235},{(void*)0,&l_193,(void*)0,&l_226,&l_235,(void*)0,&l_193,(void*)0,&l_235},{&l_235,&l_235,&l_226,&l_226,&l_226,&l_235,&l_193,(void*)0,&l_193},{&l_235,&l_235,&l_235,&l_226,&l_193,&l_193,&l_235,&l_226,&l_226}};
                    int i, j, k;
                    for (i = 0; i < 1; i++)
                    {
                        for (j = 0; j < 3; j++)
                        {
                            for (k = 0; k < 1; k++)
                                l_230[i][j][k] = &l_195;
                        }
                    }
                    (*g_28) &= (safe_div_func_int8_t_s_s((l_231 = ((0UL != (safe_sub_func_int32_t_s_s((-4L), (((void*)0 != l_223) < (safe_rshift_func_int8_t_s_s(9L, (1L <= (&g_194 != l_226)))))))) , (safe_sub_func_int8_t_s_s(((!p_58) , g_114), p_59)))), l_232));
                    (*g_28) = (safe_mul_func_uint16_t_u_u((18446744073709551608UL != g_147), ((((l_238[1] = (g_237 = l_235)) == (void*)0) , l_239) | (-1L))));
                }
                (*l_336) = l_240[4][2][5];
            }
            else
            { /* block id: 83 */
                if ((*g_28))
                    break;
                (*l_122) = &g_32;
            }
        }
        (*g_28) = (((*l_113) ^= (safe_mul_func_int16_t_s_s(((((l_102[4][0][3] = ((*l_96) , (!(*g_237)))) && (((void*)0 == l_235) ^ 0x3C21L)) , &l_235) == ((p_59 <= g_290.f0) , &l_238[1])), 0x5ED9L))) != g_267.f2);
    }
    return &g_2[6];
}


/* ------------------------------------------ */
/* 
 * reads : g_28 g_2 g_18.f3 g_18.f1 g_85 g_18.f2 g_48 g_32 g_7
 * writes: g_29 g_76 g_85 g_7
 */
static int32_t * func_63(int32_t  p_64, uint32_t * p_65)
{ /* block id: 18 */
    uint16_t l_75 = 0x6ADDL;
    int32_t * const *l_82 = &g_28;
    int32_t * const **l_81[6][5][2] = {{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}},{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}},{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}},{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}},{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}},{{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82},{&l_82,&l_82}}};
    int64_t *l_83 = (void*)0;
    int64_t *l_84 = &g_85;
    int32_t **l_86 = &g_7;
    uint8_t l_91 = 0xFDL;
    int i, j, k;
    (*l_86) = func_66((((safe_div_func_int8_t_s_s((((safe_add_func_uint16_t_u_u((((*g_28) = p_64) != p_64), g_2[6])) >= ((((g_76[1][4] = (l_75 &= g_18.f3)) < ((safe_add_func_int64_t_s_s(((*l_84) &= (safe_add_func_uint32_t_u_u((g_18.f1 && p_64), (g_2[6] <= (((void*)0 != l_81[0][3][0]) ^ p_64))))), g_18.f2)) > g_2[1])) , g_48) <= (-3L))) >= (-5L)), g_18.f1)) >= g_32) != g_18.f1), l_86, p_64, p_64);
    l_91++;
    return (*l_86);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t * func_66(int16_t  p_67, int32_t ** p_68, uint8_t  p_69, int16_t  p_70)
{ /* block id: 23 */
    uint16_t l_87 = 0UL;
    int32_t *l_90 = (void*)0;
    --l_87;
    return l_90;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_18.f0, "g_18.f0", print_hash_value);
    transparent_crc(g_18.f1, "g_18.f1", print_hash_value);
    transparent_crc(g_18.f2, "g_18.f2", print_hash_value);
    transparent_crc(g_18.f3, "g_18.f3", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 8; k++)
            {
                transparent_crc(g_29[i][j][k], "g_29[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_32, "g_32", print_hash_value);
    transparent_crc(g_48, "g_48", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 6; j++)
        {
            transparent_crc(g_76[i][j], "g_76[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_85, "g_85", print_hash_value);
    transparent_crc(g_114, "g_114", print_hash_value);
    transparent_crc(g_147, "g_147", print_hash_value);
    transparent_crc(g_151, "g_151", print_hash_value);
    transparent_crc(g_164, "g_164", print_hash_value);
    transparent_crc(g_179, "g_179", print_hash_value);
    transparent_crc(g_194, "g_194", print_hash_value);
    transparent_crc(g_241.f0, "g_241.f0", print_hash_value);
    transparent_crc(g_241.f2, "g_241.f2", print_hash_value);
    transparent_crc(g_241.f4, "g_241.f4", print_hash_value);
    transparent_crc(g_242.f0, "g_242.f0", print_hash_value);
    transparent_crc(g_242.f2, "g_242.f2", print_hash_value);
    transparent_crc(g_242.f4, "g_242.f4", print_hash_value);
    transparent_crc(g_243.f0, "g_243.f0", print_hash_value);
    transparent_crc(g_243.f2, "g_243.f2", print_hash_value);
    transparent_crc(g_243.f4, "g_243.f4", print_hash_value);
    transparent_crc(g_244.f0, "g_244.f0", print_hash_value);
    transparent_crc(g_244.f2, "g_244.f2", print_hash_value);
    transparent_crc(g_244.f4, "g_244.f4", print_hash_value);
    transparent_crc(g_245.f0, "g_245.f0", print_hash_value);
    transparent_crc(g_245.f2, "g_245.f2", print_hash_value);
    transparent_crc(g_245.f4, "g_245.f4", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_246[i].f0, "g_246[i].f0", print_hash_value);
        transparent_crc(g_246[i].f2, "g_246[i].f2", print_hash_value);
        transparent_crc(g_246[i].f4, "g_246[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_247.f0, "g_247.f0", print_hash_value);
    transparent_crc(g_247.f2, "g_247.f2", print_hash_value);
    transparent_crc(g_247.f4, "g_247.f4", print_hash_value);
    transparent_crc(g_248.f0, "g_248.f0", print_hash_value);
    transparent_crc(g_248.f2, "g_248.f2", print_hash_value);
    transparent_crc(g_248.f4, "g_248.f4", print_hash_value);
    transparent_crc(g_249.f0, "g_249.f0", print_hash_value);
    transparent_crc(g_249.f2, "g_249.f2", print_hash_value);
    transparent_crc(g_249.f4, "g_249.f4", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_250[i].f0, "g_250[i].f0", print_hash_value);
        transparent_crc(g_250[i].f2, "g_250[i].f2", print_hash_value);
        transparent_crc(g_250[i].f4, "g_250[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(g_251[i][j][k].f0, "g_251[i][j][k].f0", print_hash_value);
                transparent_crc(g_251[i][j][k].f2, "g_251[i][j][k].f2", print_hash_value);
                transparent_crc(g_251[i][j][k].f4, "g_251[i][j][k].f4", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 4; j++)
        {
            transparent_crc(g_252[i][j].f0, "g_252[i][j].f0", print_hash_value);
            transparent_crc(g_252[i][j].f2, "g_252[i][j].f2", print_hash_value);
            transparent_crc(g_252[i][j].f4, "g_252[i][j].f4", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_253[i].f0, "g_253[i].f0", print_hash_value);
        transparent_crc(g_253[i].f2, "g_253[i].f2", print_hash_value);
        transparent_crc(g_253[i].f4, "g_253[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_254.f0, "g_254.f0", print_hash_value);
    transparent_crc(g_254.f2, "g_254.f2", print_hash_value);
    transparent_crc(g_254.f4, "g_254.f4", print_hash_value);
    transparent_crc(g_255.f0, "g_255.f0", print_hash_value);
    transparent_crc(g_255.f2, "g_255.f2", print_hash_value);
    transparent_crc(g_255.f4, "g_255.f4", print_hash_value);
    transparent_crc(g_256.f0, "g_256.f0", print_hash_value);
    transparent_crc(g_256.f2, "g_256.f2", print_hash_value);
    transparent_crc(g_256.f4, "g_256.f4", print_hash_value);
    transparent_crc(g_257.f0, "g_257.f0", print_hash_value);
    transparent_crc(g_257.f2, "g_257.f2", print_hash_value);
    transparent_crc(g_257.f4, "g_257.f4", print_hash_value);
    transparent_crc(g_258.f0, "g_258.f0", print_hash_value);
    transparent_crc(g_258.f2, "g_258.f2", print_hash_value);
    transparent_crc(g_258.f4, "g_258.f4", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 6; j++)
        {
            transparent_crc(g_259[i][j].f0, "g_259[i][j].f0", print_hash_value);
            transparent_crc(g_259[i][j].f2, "g_259[i][j].f2", print_hash_value);
            transparent_crc(g_259[i][j].f4, "g_259[i][j].f4", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_260.f0, "g_260.f0", print_hash_value);
    transparent_crc(g_260.f2, "g_260.f2", print_hash_value);
    transparent_crc(g_260.f4, "g_260.f4", print_hash_value);
    transparent_crc(g_261.f0, "g_261.f0", print_hash_value);
    transparent_crc(g_261.f2, "g_261.f2", print_hash_value);
    transparent_crc(g_261.f4, "g_261.f4", print_hash_value);
    transparent_crc(g_262.f0, "g_262.f0", print_hash_value);
    transparent_crc(g_262.f2, "g_262.f2", print_hash_value);
    transparent_crc(g_262.f4, "g_262.f4", print_hash_value);
    transparent_crc(g_263.f0, "g_263.f0", print_hash_value);
    transparent_crc(g_263.f2, "g_263.f2", print_hash_value);
    transparent_crc(g_263.f4, "g_263.f4", print_hash_value);
    transparent_crc(g_264.f0, "g_264.f0", print_hash_value);
    transparent_crc(g_264.f2, "g_264.f2", print_hash_value);
    transparent_crc(g_264.f4, "g_264.f4", print_hash_value);
    transparent_crc(g_265.f0, "g_265.f0", print_hash_value);
    transparent_crc(g_265.f2, "g_265.f2", print_hash_value);
    transparent_crc(g_265.f4, "g_265.f4", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_266[i].f0, "g_266[i].f0", print_hash_value);
        transparent_crc(g_266[i].f2, "g_266[i].f2", print_hash_value);
        transparent_crc(g_266[i].f4, "g_266[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_267.f0, "g_267.f0", print_hash_value);
    transparent_crc(g_267.f2, "g_267.f2", print_hash_value);
    transparent_crc(g_267.f4, "g_267.f4", print_hash_value);
    transparent_crc(g_268.f0, "g_268.f0", print_hash_value);
    transparent_crc(g_268.f2, "g_268.f2", print_hash_value);
    transparent_crc(g_268.f4, "g_268.f4", print_hash_value);
    transparent_crc(g_269.f0, "g_269.f0", print_hash_value);
    transparent_crc(g_269.f2, "g_269.f2", print_hash_value);
    transparent_crc(g_269.f4, "g_269.f4", print_hash_value);
    transparent_crc(g_270.f0, "g_270.f0", print_hash_value);
    transparent_crc(g_270.f2, "g_270.f2", print_hash_value);
    transparent_crc(g_270.f4, "g_270.f4", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 3; j++)
        {
            transparent_crc(g_271[i][j].f0, "g_271[i][j].f0", print_hash_value);
            transparent_crc(g_271[i][j].f2, "g_271[i][j].f2", print_hash_value);
            transparent_crc(g_271[i][j].f4, "g_271[i][j].f4", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_272.f0, "g_272.f0", print_hash_value);
    transparent_crc(g_272.f2, "g_272.f2", print_hash_value);
    transparent_crc(g_272.f4, "g_272.f4", print_hash_value);
    transparent_crc(g_273.f0, "g_273.f0", print_hash_value);
    transparent_crc(g_273.f2, "g_273.f2", print_hash_value);
    transparent_crc(g_273.f4, "g_273.f4", print_hash_value);
    transparent_crc(g_274.f0, "g_274.f0", print_hash_value);
    transparent_crc(g_274.f2, "g_274.f2", print_hash_value);
    transparent_crc(g_274.f4, "g_274.f4", print_hash_value);
    transparent_crc(g_275.f0, "g_275.f0", print_hash_value);
    transparent_crc(g_275.f2, "g_275.f2", print_hash_value);
    transparent_crc(g_275.f4, "g_275.f4", print_hash_value);
    transparent_crc(g_276.f0, "g_276.f0", print_hash_value);
    transparent_crc(g_276.f2, "g_276.f2", print_hash_value);
    transparent_crc(g_276.f4, "g_276.f4", print_hash_value);
    transparent_crc(g_277.f0, "g_277.f0", print_hash_value);
    transparent_crc(g_277.f2, "g_277.f2", print_hash_value);
    transparent_crc(g_277.f4, "g_277.f4", print_hash_value);
    transparent_crc(g_278.f0, "g_278.f0", print_hash_value);
    transparent_crc(g_278.f2, "g_278.f2", print_hash_value);
    transparent_crc(g_278.f4, "g_278.f4", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_279[i].f0, "g_279[i].f0", print_hash_value);
        transparent_crc(g_279[i].f2, "g_279[i].f2", print_hash_value);
        transparent_crc(g_279[i].f4, "g_279[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_280.f0, "g_280.f0", print_hash_value);
    transparent_crc(g_280.f2, "g_280.f2", print_hash_value);
    transparent_crc(g_280.f4, "g_280.f4", print_hash_value);
    transparent_crc(g_281.f0, "g_281.f0", print_hash_value);
    transparent_crc(g_281.f2, "g_281.f2", print_hash_value);
    transparent_crc(g_281.f4, "g_281.f4", print_hash_value);
    transparent_crc(g_282.f0, "g_282.f0", print_hash_value);
    transparent_crc(g_282.f2, "g_282.f2", print_hash_value);
    transparent_crc(g_282.f4, "g_282.f4", print_hash_value);
    transparent_crc(g_283.f0, "g_283.f0", print_hash_value);
    transparent_crc(g_283.f2, "g_283.f2", print_hash_value);
    transparent_crc(g_283.f4, "g_283.f4", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 1; j++)
        {
            for (k = 0; k < 8; k++)
            {
                transparent_crc(g_284[i][j][k].f0, "g_284[i][j][k].f0", print_hash_value);
                transparent_crc(g_284[i][j][k].f2, "g_284[i][j][k].f2", print_hash_value);
                transparent_crc(g_284[i][j][k].f4, "g_284[i][j][k].f4", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_285.f0, "g_285.f0", print_hash_value);
    transparent_crc(g_285.f2, "g_285.f2", print_hash_value);
    transparent_crc(g_285.f4, "g_285.f4", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_286[i].f0, "g_286[i].f0", print_hash_value);
        transparent_crc(g_286[i].f2, "g_286[i].f2", print_hash_value);
        transparent_crc(g_286[i].f4, "g_286[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_287.f0, "g_287.f0", print_hash_value);
    transparent_crc(g_287.f2, "g_287.f2", print_hash_value);
    transparent_crc(g_287.f4, "g_287.f4", print_hash_value);
    transparent_crc(g_288.f0, "g_288.f0", print_hash_value);
    transparent_crc(g_288.f2, "g_288.f2", print_hash_value);
    transparent_crc(g_288.f4, "g_288.f4", print_hash_value);
    transparent_crc(g_289.f0, "g_289.f0", print_hash_value);
    transparent_crc(g_289.f2, "g_289.f2", print_hash_value);
    transparent_crc(g_289.f4, "g_289.f4", print_hash_value);
    transparent_crc(g_290.f0, "g_290.f0", print_hash_value);
    transparent_crc(g_290.f2, "g_290.f2", print_hash_value);
    transparent_crc(g_290.f4, "g_290.f4", print_hash_value);
    transparent_crc(g_291.f0, "g_291.f0", print_hash_value);
    transparent_crc(g_291.f2, "g_291.f2", print_hash_value);
    transparent_crc(g_291.f4, "g_291.f4", print_hash_value);
    transparent_crc(g_292.f0, "g_292.f0", print_hash_value);
    transparent_crc(g_292.f2, "g_292.f2", print_hash_value);
    transparent_crc(g_292.f4, "g_292.f4", print_hash_value);
    transparent_crc(g_293.f0, "g_293.f0", print_hash_value);
    transparent_crc(g_293.f2, "g_293.f2", print_hash_value);
    transparent_crc(g_293.f4, "g_293.f4", print_hash_value);
    transparent_crc(g_294.f0, "g_294.f0", print_hash_value);
    transparent_crc(g_294.f2, "g_294.f2", print_hash_value);
    transparent_crc(g_294.f4, "g_294.f4", print_hash_value);
    transparent_crc(g_295.f0, "g_295.f0", print_hash_value);
    transparent_crc(g_295.f2, "g_295.f2", print_hash_value);
    transparent_crc(g_295.f4, "g_295.f4", print_hash_value);
    transparent_crc(g_296.f0, "g_296.f0", print_hash_value);
    transparent_crc(g_296.f2, "g_296.f2", print_hash_value);
    transparent_crc(g_296.f4, "g_296.f4", print_hash_value);
    transparent_crc(g_297.f0, "g_297.f0", print_hash_value);
    transparent_crc(g_297.f2, "g_297.f2", print_hash_value);
    transparent_crc(g_297.f4, "g_297.f4", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_298[i].f0, "g_298[i].f0", print_hash_value);
        transparent_crc(g_298[i].f2, "g_298[i].f2", print_hash_value);
        transparent_crc(g_298[i].f4, "g_298[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_299.f0, "g_299.f0", print_hash_value);
    transparent_crc(g_299.f2, "g_299.f2", print_hash_value);
    transparent_crc(g_299.f4, "g_299.f4", print_hash_value);
    transparent_crc(g_300.f0, "g_300.f0", print_hash_value);
    transparent_crc(g_300.f2, "g_300.f2", print_hash_value);
    transparent_crc(g_300.f4, "g_300.f4", print_hash_value);
    transparent_crc(g_301.f0, "g_301.f0", print_hash_value);
    transparent_crc(g_301.f2, "g_301.f2", print_hash_value);
    transparent_crc(g_301.f4, "g_301.f4", print_hash_value);
    transparent_crc(g_302.f0, "g_302.f0", print_hash_value);
    transparent_crc(g_302.f2, "g_302.f2", print_hash_value);
    transparent_crc(g_302.f4, "g_302.f4", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_303[i].f0, "g_303[i].f0", print_hash_value);
        transparent_crc(g_303[i].f2, "g_303[i].f2", print_hash_value);
        transparent_crc(g_303[i].f4, "g_303[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 7; k++)
            {
                transparent_crc(g_304[i][j][k].f0, "g_304[i][j][k].f0", print_hash_value);
                transparent_crc(g_304[i][j][k].f2, "g_304[i][j][k].f2", print_hash_value);
                transparent_crc(g_304[i][j][k].f4, "g_304[i][j][k].f4", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_305.f0, "g_305.f0", print_hash_value);
    transparent_crc(g_305.f2, "g_305.f2", print_hash_value);
    transparent_crc(g_305.f4, "g_305.f4", print_hash_value);
    transparent_crc(g_306.f0, "g_306.f0", print_hash_value);
    transparent_crc(g_306.f2, "g_306.f2", print_hash_value);
    transparent_crc(g_306.f4, "g_306.f4", print_hash_value);
    transparent_crc(g_307.f0, "g_307.f0", print_hash_value);
    transparent_crc(g_307.f2, "g_307.f2", print_hash_value);
    transparent_crc(g_307.f4, "g_307.f4", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_308[i].f0, "g_308[i].f0", print_hash_value);
        transparent_crc(g_308[i].f2, "g_308[i].f2", print_hash_value);
        transparent_crc(g_308[i].f4, "g_308[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_309[i].f0, "g_309[i].f0", print_hash_value);
        transparent_crc(g_309[i].f2, "g_309[i].f2", print_hash_value);
        transparent_crc(g_309[i].f4, "g_309[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_310.f0, "g_310.f0", print_hash_value);
    transparent_crc(g_310.f2, "g_310.f2", print_hash_value);
    transparent_crc(g_310.f4, "g_310.f4", print_hash_value);
    transparent_crc(g_311.f0, "g_311.f0", print_hash_value);
    transparent_crc(g_311.f2, "g_311.f2", print_hash_value);
    transparent_crc(g_311.f4, "g_311.f4", print_hash_value);
    transparent_crc(g_312.f0, "g_312.f0", print_hash_value);
    transparent_crc(g_312.f2, "g_312.f2", print_hash_value);
    transparent_crc(g_312.f4, "g_312.f4", print_hash_value);
    transparent_crc(g_313.f0, "g_313.f0", print_hash_value);
    transparent_crc(g_313.f2, "g_313.f2", print_hash_value);
    transparent_crc(g_313.f4, "g_313.f4", print_hash_value);
    transparent_crc(g_314.f0, "g_314.f0", print_hash_value);
    transparent_crc(g_314.f2, "g_314.f2", print_hash_value);
    transparent_crc(g_314.f4, "g_314.f4", print_hash_value);
    transparent_crc(g_315.f0, "g_315.f0", print_hash_value);
    transparent_crc(g_315.f2, "g_315.f2", print_hash_value);
    transparent_crc(g_315.f4, "g_315.f4", print_hash_value);
    transparent_crc(g_316.f0, "g_316.f0", print_hash_value);
    transparent_crc(g_316.f2, "g_316.f2", print_hash_value);
    transparent_crc(g_316.f4, "g_316.f4", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_317[i].f0, "g_317[i].f0", print_hash_value);
        transparent_crc(g_317[i].f2, "g_317[i].f2", print_hash_value);
        transparent_crc(g_317[i].f4, "g_317[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_318.f0, "g_318.f0", print_hash_value);
    transparent_crc(g_318.f2, "g_318.f2", print_hash_value);
    transparent_crc(g_318.f4, "g_318.f4", print_hash_value);
    transparent_crc(g_319.f0, "g_319.f0", print_hash_value);
    transparent_crc(g_319.f2, "g_319.f2", print_hash_value);
    transparent_crc(g_319.f4, "g_319.f4", print_hash_value);
    transparent_crc(g_320.f0, "g_320.f0", print_hash_value);
    transparent_crc(g_320.f2, "g_320.f2", print_hash_value);
    transparent_crc(g_320.f4, "g_320.f4", print_hash_value);
    transparent_crc(g_321.f0, "g_321.f0", print_hash_value);
    transparent_crc(g_321.f2, "g_321.f2", print_hash_value);
    transparent_crc(g_321.f4, "g_321.f4", print_hash_value);
    transparent_crc(g_322.f0, "g_322.f0", print_hash_value);
    transparent_crc(g_322.f2, "g_322.f2", print_hash_value);
    transparent_crc(g_322.f4, "g_322.f4", print_hash_value);
    transparent_crc(g_323.f0, "g_323.f0", print_hash_value);
    transparent_crc(g_323.f2, "g_323.f2", print_hash_value);
    transparent_crc(g_323.f4, "g_323.f4", print_hash_value);
    transparent_crc(g_324.f0, "g_324.f0", print_hash_value);
    transparent_crc(g_324.f2, "g_324.f2", print_hash_value);
    transparent_crc(g_324.f4, "g_324.f4", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_325[i].f0, "g_325[i].f0", print_hash_value);
        transparent_crc(g_325[i].f2, "g_325[i].f2", print_hash_value);
        transparent_crc(g_325[i].f4, "g_325[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_326[i].f0, "g_326[i].f0", print_hash_value);
        transparent_crc(g_326[i].f2, "g_326[i].f2", print_hash_value);
        transparent_crc(g_326[i].f4, "g_326[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_327.f0, "g_327.f0", print_hash_value);
    transparent_crc(g_327.f2, "g_327.f2", print_hash_value);
    transparent_crc(g_327.f4, "g_327.f4", print_hash_value);
    transparent_crc(g_328.f0, "g_328.f0", print_hash_value);
    transparent_crc(g_328.f2, "g_328.f2", print_hash_value);
    transparent_crc(g_328.f4, "g_328.f4", print_hash_value);
    transparent_crc(g_329.f0, "g_329.f0", print_hash_value);
    transparent_crc(g_329.f2, "g_329.f2", print_hash_value);
    transparent_crc(g_329.f4, "g_329.f4", print_hash_value);
    transparent_crc(g_330.f0, "g_330.f0", print_hash_value);
    transparent_crc(g_330.f2, "g_330.f2", print_hash_value);
    transparent_crc(g_330.f4, "g_330.f4", print_hash_value);
    transparent_crc(g_331.f0, "g_331.f0", print_hash_value);
    transparent_crc(g_331.f2, "g_331.f2", print_hash_value);
    transparent_crc(g_331.f4, "g_331.f4", print_hash_value);
    transparent_crc(g_332.f0, "g_332.f0", print_hash_value);
    transparent_crc(g_332.f2, "g_332.f2", print_hash_value);
    transparent_crc(g_332.f4, "g_332.f4", print_hash_value);
    transparent_crc(g_333.f0, "g_333.f0", print_hash_value);
    transparent_crc(g_333.f2, "g_333.f2", print_hash_value);
    transparent_crc(g_333.f4, "g_333.f4", print_hash_value);
    transparent_crc(g_334.f0, "g_334.f0", print_hash_value);
    transparent_crc(g_334.f2, "g_334.f2", print_hash_value);
    transparent_crc(g_334.f4, "g_334.f4", print_hash_value);
    transparent_crc(g_342, "g_342", print_hash_value);
    transparent_crc(g_367, "g_367", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_388[i], "g_388[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 2; i++)
    {
        transparent_crc(g_423[i].f0, "g_423[i].f0", print_hash_value);
        transparent_crc(g_423[i].f2, "g_423[i].f2", print_hash_value);
        transparent_crc(g_423[i].f4, "g_423[i].f4", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_440[i], "g_440[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_441, "g_441", print_hash_value);
    transparent_crc(g_461, "g_461", print_hash_value);
    transparent_crc(g_465.f0, "g_465.f0", print_hash_value);
    transparent_crc(g_465.f2, "g_465.f2", print_hash_value);
    transparent_crc(g_465.f4, "g_465.f4", print_hash_value);
    transparent_crc(g_614.f0, "g_614.f0", print_hash_value);
    transparent_crc(g_614.f2, "g_614.f2", print_hash_value);
    transparent_crc(g_614.f4, "g_614.f4", print_hash_value);
    transparent_crc(g_617.f0, "g_617.f0", print_hash_value);
    transparent_crc(g_617.f2, "g_617.f2", print_hash_value);
    transparent_crc(g_617.f4, "g_617.f4", print_hash_value);
    transparent_crc(g_618, "g_618", print_hash_value);
    transparent_crc(g_701, "g_701", print_hash_value);
    transparent_crc(g_771, "g_771", print_hash_value);
    transparent_crc(g_858.f0, "g_858.f0", print_hash_value);
    transparent_crc(g_858.f2, "g_858.f2", print_hash_value);
    transparent_crc(g_858.f4, "g_858.f4", print_hash_value);
    transparent_crc(g_927, "g_927", print_hash_value);
    transparent_crc(g_954, "g_954", print_hash_value);
    transparent_crc(g_956.f0, "g_956.f0", print_hash_value);
    transparent_crc(g_956.f1, "g_956.f1", print_hash_value);
    transparent_crc(g_956.f2, "g_956.f2", print_hash_value);
    transparent_crc(g_956.f3, "g_956.f3", print_hash_value);
    transparent_crc(g_956.f4, "g_956.f4", print_hash_value);
    transparent_crc(g_956.f5, "g_956.f5", print_hash_value);
    transparent_crc(g_973, "g_973", print_hash_value);
    transparent_crc(g_1005, "g_1005", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_1039[i], "g_1039[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1081.f0, "g_1081.f0", print_hash_value);
    transparent_crc(g_1081.f2, "g_1081.f2", print_hash_value);
    transparent_crc(g_1081.f4, "g_1081.f4", print_hash_value);
    transparent_crc(g_1193, "g_1193", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 7; k++)
            {
                transparent_crc(g_1337[i][j][k].f0, "g_1337[i][j][k].f0", print_hash_value);
                transparent_crc(g_1337[i][j][k].f1, "g_1337[i][j][k].f1", print_hash_value);
                transparent_crc(g_1337[i][j][k].f2, "g_1337[i][j][k].f2", print_hash_value);
                transparent_crc(g_1337[i][j][k].f3, "g_1337[i][j][k].f3", print_hash_value);
                transparent_crc(g_1337[i][j][k].f4, "g_1337[i][j][k].f4", print_hash_value);
                transparent_crc(g_1337[i][j][k].f5, "g_1337[i][j][k].f5", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1360.f0, "g_1360.f0", print_hash_value);
    transparent_crc(g_1360.f2, "g_1360.f2", print_hash_value);
    transparent_crc(g_1360.f4, "g_1360.f4", print_hash_value);
    transparent_crc(g_1383.f0, "g_1383.f0", print_hash_value);
    transparent_crc(g_1383.f2, "g_1383.f2", print_hash_value);
    transparent_crc(g_1383.f4, "g_1383.f4", print_hash_value);
    transparent_crc(g_1390.f0, "g_1390.f0", print_hash_value);
    transparent_crc(g_1390.f1, "g_1390.f1", print_hash_value);
    transparent_crc(g_1390.f2, "g_1390.f2", print_hash_value);
    transparent_crc(g_1390.f3, "g_1390.f3", print_hash_value);
    transparent_crc(g_1390.f4, "g_1390.f4", print_hash_value);
    transparent_crc(g_1390.f5, "g_1390.f5", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_1399[i][j], "g_1399[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_1519[i], "g_1519[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1549, "g_1549", print_hash_value);
    transparent_crc(g_1641, "g_1641", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 3; j++)
        {
            transparent_crc(g_1642[i][j], "g_1642[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1666, "g_1666", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_1682[i], "g_1682[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1707.f0, "g_1707.f0", print_hash_value);
    transparent_crc(g_1707.f2, "g_1707.f2", print_hash_value);
    transparent_crc(g_1707.f4, "g_1707.f4", print_hash_value);
    transparent_crc(g_1709.f0, "g_1709.f0", print_hash_value);
    transparent_crc(g_1709.f2, "g_1709.f2", print_hash_value);
    transparent_crc(g_1709.f4, "g_1709.f4", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 9; j++)
        {
            for (k = 0; k < 2; k++)
            {
                transparent_crc(g_1712[i][j][k], "g_1712[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1735, "g_1735", print_hash_value);
    transparent_crc(g_1782.f0, "g_1782.f0", print_hash_value);
    transparent_crc(g_1782.f1, "g_1782.f1", print_hash_value);
    transparent_crc(g_1782.f2, "g_1782.f2", print_hash_value);
    transparent_crc(g_1782.f3, "g_1782.f3", print_hash_value);
    transparent_crc(g_1782.f4, "g_1782.f4", print_hash_value);
    transparent_crc(g_1782.f5, "g_1782.f5", print_hash_value);
    transparent_crc(g_1816.f0, "g_1816.f0", print_hash_value);
    transparent_crc(g_1816.f1, "g_1816.f1", print_hash_value);
    transparent_crc(g_1816.f2, "g_1816.f2", print_hash_value);
    transparent_crc(g_1816.f3, "g_1816.f3", print_hash_value);
    transparent_crc(g_1816.f4, "g_1816.f4", print_hash_value);
    transparent_crc(g_1816.f5, "g_1816.f5", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        transparent_crc(g_1914[i].f0, "g_1914[i].f0", print_hash_value);
        transparent_crc(g_1914[i].f1, "g_1914[i].f1", print_hash_value);
        transparent_crc(g_1914[i].f2, "g_1914[i].f2", print_hash_value);
        transparent_crc(g_1914[i].f3, "g_1914[i].f3", print_hash_value);
        transparent_crc(g_1914[i].f4, "g_1914[i].f4", print_hash_value);
        transparent_crc(g_1914[i].f5, "g_1914[i].f5", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1918.f0, "g_1918.f0", print_hash_value);
    transparent_crc(g_1918.f1, "g_1918.f1", print_hash_value);
    transparent_crc(g_1918.f2, "g_1918.f2", print_hash_value);
    transparent_crc(g_1918.f3, "g_1918.f3", print_hash_value);
    transparent_crc(g_1952.f0, "g_1952.f0", print_hash_value);
    transparent_crc(g_1952.f1, "g_1952.f1", print_hash_value);
    transparent_crc(g_1952.f2, "g_1952.f2", print_hash_value);
    transparent_crc(g_1952.f3, "g_1952.f3", print_hash_value);
    transparent_crc(g_2015, "g_2015", print_hash_value);
    transparent_crc(g_2034, "g_2034", print_hash_value);
    transparent_crc(g_2051, "g_2051", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 7; j++)
        {
            transparent_crc(g_2099[i][j], "g_2099[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 515
   depth: 1, occurrence: 5
XXX total union variables: 6

XXX non-zero bitfields defined in structs: 2
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 1
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 8
breakdown:
   indirect level: 0, occurrence: 5
   indirect level: 1, occurrence: 2
   indirect level: 2, occurrence: 1
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 3
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 7
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 3

XXX max expression depth: 33
breakdown:
   depth: 1, occurrence: 113
   depth: 2, occurrence: 28
   depth: 3, occurrence: 2
   depth: 7, occurrence: 1
   depth: 8, occurrence: 2
   depth: 13, occurrence: 2
   depth: 14, occurrence: 2
   depth: 18, occurrence: 1
   depth: 20, occurrence: 2
   depth: 22, occurrence: 1
   depth: 23, occurrence: 1
   depth: 24, occurrence: 1
   depth: 26, occurrence: 2
   depth: 27, occurrence: 1
   depth: 29, occurrence: 1
   depth: 30, occurrence: 1
   depth: 32, occurrence: 3
   depth: 33, occurrence: 1

XXX total number of pointers: 474

XXX times a variable address is taken: 1188
XXX times a pointer is dereferenced on RHS: 322
breakdown:
   depth: 1, occurrence: 256
   depth: 2, occurrence: 57
   depth: 3, occurrence: 8
   depth: 4, occurrence: 1
XXX times a pointer is dereferenced on LHS: 286
breakdown:
   depth: 1, occurrence: 243
   depth: 2, occurrence: 37
   depth: 3, occurrence: 6
XXX times a pointer is compared with null: 42
XXX times a pointer is compared with address of another variable: 7
XXX times a pointer is compared with another pointer: 12
XXX times a pointer is qualified to be dereferenced: 6964

XXX max dereference level: 4
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 1445
   level: 2, occurrence: 383
   level: 3, occurrence: 152
   level: 4, occurrence: 9
XXX number of pointers point to pointers: 224
XXX number of pointers point to scalars: 237
XXX number of pointers point to structs: 3
XXX percent of pointers has null in alias set: 33.8
XXX average alias set size: 1.59

XXX times a non-volatile is read: 1683
XXX times a non-volatile is write: 892
XXX times a volatile is read: 87
XXX    times read thru a pointer: 42
XXX times a volatile is write: 20
XXX    times written thru a pointer: 9
XXX times a volatile is available for access: 2.5e+03
XXX percentage of non-volatile access: 96

XXX forward jumps: 0
XXX backward jumps: 9

XXX stmts: 107
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 27
   depth: 1, occurrence: 17
   depth: 2, occurrence: 13
   depth: 3, occurrence: 20
   depth: 4, occurrence: 17
   depth: 5, occurrence: 13

XXX percentage a fresh-made variable is used: 15.6
XXX percentage an existing variable is used: 84.4
FYI: the random generator makes assumptions about the integer size. See platform.info for more details.
********************* end of statistics **********************/

