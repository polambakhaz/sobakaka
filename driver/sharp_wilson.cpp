/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/sharp_wilson.cpp
 * Seed:      1551585961
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
struct S0 {
   const int32_t  f0;
   int64_t  f1;
   volatile signed f2 : 26;
   volatile uint32_t  f3;
   uint16_t  f4;
   uint32_t  f5;
   signed f6 : 22;
   uint32_t  f7;
};

/* --- GLOBAL VARIABLES --- */
static const volatile int16_t g_10 = 0x6941L;/* VOLATILE GLOBAL g_10 */
static uint16_t g_15 = 0UL;
static int32_t g_35[4][9] = {{1L,1L,1L,1L,1L,1L,1L,1L,1L},{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)},{1L,1L,1L,1L,1L,1L,1L,1L,1L},{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)}};
static volatile struct S0 g_43 = {9L,0x9716E289AA50887CLL,-1125,4294967294UL,0xD68CL,0xAFE2499EL,-1126,0xC786C7A8L};/* VOLATILE GLOBAL g_43 */
static const volatile int32_t *g_76[8] = {&g_43.f0,&g_43.f0,&g_43.f0,&g_43.f0,&g_43.f0,&g_43.f0,&g_43.f0,&g_43.f0};
static const volatile int32_t * const * volatile g_75 = &g_76[6];/* VOLATILE GLOBAL g_75 */
static int8_t g_77 = 0x2AL;
static int32_t *g_87 = (void*)0;
static int32_t **g_86 = &g_87;
static const int32_t g_102[5][9][4] = {{{0x4CDDCCF3L,0x2BDA4FDBL,0x2BDA4FDBL,(-1L)},{0x482110C1L,0xB09A55A0L,1L,(-1L)},{0x67F766E0L,6L,1L,0x366FF5FBL},{(-3L),0L,0x67F766E0L,0x2BDA4FDBL},{0xB30FD8B1L,(-3L),(-7L),0xF079C5DFL},{0L,1L,0xC31AFCD1L,1L},{(-1L),(-1L),0xB09A55A0L,(-3L)},{1L,0xDEC24A87L,(-3L),(-3L)},{0xF079C5DFL,0L,(-1L),0x4CDDCCF3L}},{{0xF079C5DFL,0x482110C1L,(-3L),1L},{1L,0x4CDDCCF3L,0xB09A55A0L,0xB30FD8B1L},{(-1L),0x53696E02L,0xC31AFCD1L,0x42C0441AL},{0L,0xC31AFCD1L,(-7L),(-7L)},{0xB30FD8B1L,0xB30FD8B1L,0x67F766E0L,0xDEC24A87L},{(-3L),0xB1534744L,1L,0L},{0x67F766E0L,6L,1L,1L},{0x482110C1L,6L,0x2BDA4FDBL,0L},{6L,0xB1534744L,0x42C0441AL,0xDEC24A87L}},{{0x4A777CC8L,0xB30FD8B1L,(-3L),(-7L)},{0x2BDA4FDBL,0xC31AFCD1L,6L,0x42C0441AL},{0xB1534744L,0x53696E02L,0xB1534744L,0xB30FD8B1L},{0x42C0441AL,0x4CDDCCF3L,0L,1L},{1L,0x482110C1L,0x879702F8L,0x4CDDCCF3L},{0xD29CCA17L,0L,0x879702F8L,(-3L)},{1L,0xDEC24A87L,0L,(-3L)},{0x42C0441AL,(-1L),0xB1534744L,1L},{0xB1534744L,1L,6L,0xF079C5DFL}},{{0x2BDA4FDBL,(-3L),(-3L),0x2BDA4FDBL},{0x4A777CC8L,0L,0x42C0441AL,0x366FF5FBL},{6L,6L,0x2BDA4FDBL,(-1L)},{0x482110C1L,0xB09A55A0L,1L,(-1L)},{0x67F766E0L,6L,1L,0x366FF5FBL},{(-3L),0L,0x67F766E0L,0x2BDA4FDBL},{0xB30FD8B1L,(-3L),(-7L),0xF079C5DFL},{0L,1L,0xC31AFCD1L,1L},{(-1L),(-1L),0xB09A55A0L,(-3L)}},{{1L,0xDEC24A87L,(-3L),(-3L)},{0xF079C5DFL,0L,(-1L),0x4CDDCCF3L},{0xF079C5DFL,0x482110C1L,(-3L),1L},{1L,0x4CDDCCF3L,0xB09A55A0L,0xB30FD8B1L},{(-1L),0x53696E02L,0xC31AFCD1L,0x42C0441AL},{0L,0xC31AFCD1L,(-7L),(-7L)},{0xB30FD8B1L,0xB30FD8B1L,0x67F766E0L,0xDEC24A87L},{(-3L),0xB1534744L,1L,0L},{0x67F766E0L,6L,1L,1L}}};
static uint64_t g_104 = 0x48CC3AA3D5FEEC88LL;
static volatile struct S0 g_138 = {0x24AECF75L,0x71E7B35E0E5596EFLL,4334,0x5C9C59BDL,0x285BL,0UL,-1278,0x7C884FDEL};/* VOLATILE GLOBAL g_138 */
static int64_t g_143[4][5][7] = {{{0x028AD11B327732ECLL,0x965CC132FBB45D56LL,0x965CC132FBB45D56LL,0x028AD11B327732ECLL,9L,0x324362DD0B5AA5C6LL,0x4C3C970C75418033LL},{1L,0x0BDA24A5CBDD7E79LL,0xED696CBC8B4DF1DELL,0x2DD023E04393044ELL,(-7L),4L,0xB4666DC25B180E96LL},{0xED696CBC8B4DF1DELL,0x6E312B95ED4DF383LL,(-6L),0x0BDA24A5CBDD7E79LL,(-1L),0x70D5C253C716A15FLL,0xB4666DC25B180E96LL},{(-1L),(-6L),0L,1L,0L,0xC70B8458984F7DABLL,0xB4666DC25B180E96LL},{(-1L),0x324362DD0B5AA5C6LL,0L,0xED696CBC8B4DF1DELL,0x4BFE13DD6524C083LL,(-2L),0xB4666DC25B180E96LL}},{{1L,(-1L),0x324362DD0B5AA5C6LL,0x965CC132FBB45D56LL,0x11C342DAB2CCD057LL,0x54895CB3EC86C0DBLL,0xB4666DC25B180E96LL},{0x965CC132FBB45D56LL,0L,0x6E312B95ED4DF383LL,(-1L),0xB4666DC25B180E96LL,8L,0xB4666DC25B180E96LL},{0x5D4C801A31D27B0BLL,4L,4L,0x5D4C801A31D27B0BLL,0L,0L,0xB4666DC25B180E96LL},{0x0BDA24A5CBDD7E79LL,0L,(-1L),(-1L),(-1L),1L,0xB4666DC25B180E96LL},{0xED696CBC8B4DF1DELL,0x6E312B95ED4DF383LL,(-6L),0x0BDA24A5CBDD7E79LL,(-1L),0x70D5C253C716A15FLL,0xB4666DC25B180E96LL}},{{(-1L),(-6L),0L,1L,0L,0xC70B8458984F7DABLL,0xB4666DC25B180E96LL},{(-1L),0x324362DD0B5AA5C6LL,0L,0xED696CBC8B4DF1DELL,0x4BFE13DD6524C083LL,(-2L),0xB4666DC25B180E96LL},{1L,(-1L),0x324362DD0B5AA5C6LL,0x965CC132FBB45D56LL,0x11C342DAB2CCD057LL,0x54895CB3EC86C0DBLL,0xB4666DC25B180E96LL},{0x965CC132FBB45D56LL,0L,0x6E312B95ED4DF383LL,(-1L),0xB4666DC25B180E96LL,8L,0xB4666DC25B180E96LL},{0x5D4C801A31D27B0BLL,4L,4L,0x5D4C801A31D27B0BLL,0L,0L,0xB4666DC25B180E96LL}},{{0x0BDA24A5CBDD7E79LL,0L,(-1L),(-1L),(-1L),1L,0xB4666DC25B180E96LL},{0xED696CBC8B4DF1DELL,0x6E312B95ED4DF383LL,(-6L),0x0BDA24A5CBDD7E79LL,(-1L),0x70D5C253C716A15FLL,0xB4666DC25B180E96LL},{(-1L),(-6L),0L,1L,0L,0xC70B8458984F7DABLL,0xB4666DC25B180E96LL},{(-1L),0x324362DD0B5AA5C6LL,0L,0xED696CBC8B4DF1DELL,0x4BFE13DD6524C083LL,(-2L),0xB4666DC25B180E96LL},{1L,(-1L),0x324362DD0B5AA5C6LL,0x965CC132FBB45D56LL,0x11C342DAB2CCD057LL,0x54895CB3EC86C0DBLL,0xB4666DC25B180E96LL}}};
static const uint64_t g_164[10] = {0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL,0x4C0B64EB716F4F35LL};
static const uint64_t *g_163[6][7][6] = {{{&g_164[7],&g_164[7],&g_164[7],(void*)0,&g_164[7],&g_164[7]},{(void*)0,&g_164[7],&g_164[7],(void*)0,&g_164[7],&g_164[7]},{&g_164[7],&g_164[7],&g_164[7],&g_164[9],&g_164[7],&g_164[3]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[7]},{(void*)0,&g_164[7],&g_164[7],&g_164[0],&g_164[7],&g_164[7]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[7]},{&g_164[7],&g_164[7],&g_164[7],(void*)0,&g_164[7],&g_164[7]}},{{(void*)0,&g_164[7],&g_164[7],(void*)0,&g_164[7],&g_164[7]},{&g_164[7],&g_164[7],&g_164[7],&g_164[9],&g_164[7],&g_164[8]},{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[3],&g_164[3]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[3],&g_164[6]},{&g_164[3],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[2]},{&g_164[7],&g_164[7],&g_164[6],&g_164[7],&g_164[3],&g_164[7]}},{{&g_164[7],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[8]},{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[3],&g_164[3]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[3],&g_164[6]},{&g_164[3],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[2]},{&g_164[7],&g_164[7],&g_164[6],&g_164[7],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[8]}},{{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[3],&g_164[3]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[3],&g_164[6]},{&g_164[3],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[2]},{&g_164[7],&g_164[7],&g_164[6],&g_164[7],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[8]},{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]}},{{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[3],&g_164[3]},{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[3],&g_164[6]},{&g_164[3],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[2]},{&g_164[7],&g_164[7],&g_164[6],&g_164[7],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[8]},{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[3],&g_164[3]}},{{&g_164[7],&g_164[7],&g_164[7],&g_164[7],&g_164[3],&g_164[6]},{&g_164[3],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[2]},{&g_164[7],&g_164[7],&g_164[6],&g_164[7],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[7],&g_164[7],&g_164[3],&g_164[8]},{&g_164[3],&g_164[7],&g_164[7],&g_164[3],&g_164[3],&g_164[7]},{&g_164[7],&g_164[2],&g_164[6],&g_164[7],&g_164[7],&g_164[7]},{&g_164[2],(void*)0,(void*)0,&g_164[2],&g_164[7],&g_164[0]}}};
static int16_t g_173[3][8] = {{0x6DE6L,(-1L),0x8E7CL,(-2L),(-2L),0x8E7CL,(-1L),0x6DE6L},{(-1L),(-8L),0x6DE6L,(-2L),0x6DE6L,(-8L),(-1L),(-1L)},{(-8L),(-2L),0x8E7CL,0x8E7CL,(-2L),(-8L),(-2L),(-8L)}};
static struct S0 g_227 = {1L,6L,1764,0x1010D820L,0UL,0xFD824A0BL,-2009,0x9DE7AC82L};/* VOLATILE GLOBAL g_227 */
static struct S0 g_229 = {0x18BF66C1L,0xCA71FDF0439DAEFFLL,5783,0x5D7338BBL,0x738AL,1UL,-498,4294967295UL};/* VOLATILE GLOBAL g_229 */
static const uint16_t **g_241[7] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
static uint16_t *g_244 = (void*)0;
static uint16_t ** volatile g_243 = &g_244;/* VOLATILE GLOBAL g_243 */
static int16_t g_248 = 0xF39BL;
static const int32_t *g_271 = &g_102[1][0][0];
static const int32_t **g_270 = &g_271;
static int64_t g_274[5] = {(-4L),(-4L),(-4L),(-4L),(-4L)};
static volatile uint32_t g_279 = 9UL;/* VOLATILE GLOBAL g_279 */
static int32_t *g_307 = (void*)0;
static int32_t **g_306[8] = {&g_307,&g_307,&g_307,&g_307,&g_307,&g_307,&g_307,&g_307};
static int8_t g_334 = 0xFBL;
static int8_t g_366 = 0x33L;
static uint8_t g_368 = 255UL;
static int32_t g_373 = 0L;
static uint32_t g_375 = 18446744073709551610UL;
static uint16_t g_389 = 0x5712L;
static uint64_t g_399[7] = {0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL,0x29A491B66AF2D2B8LL};
static const int32_t g_426 = 0xE517A315L;
static const int32_t *g_428 = (void*)0;
static const int32_t ** volatile g_427 = &g_428;/* VOLATILE GLOBAL g_427 */
static uint8_t g_441 = 0xBEL;
static struct S0 g_458 = {0L,0L,-7033,0x8E7A4808L,0xD41BL,18446744073709551615UL,1040,4294967292UL};/* VOLATILE GLOBAL g_458 */
static struct S0 g_480 = {0x9E5D3EE2L,1L,-6735,0xCDD9265FL,0xB63DL,1UL,485,0x05C72F0CL};/* VOLATILE GLOBAL g_480 */
static int32_t ***g_482[9][1][9] = {{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}},{{&g_86,&g_86,(void*)0,&g_86,&g_306[5],&g_306[5],&g_86,(void*)0,&g_86}}};
static int32_t ****g_481 = &g_482[1][0][8];
static uint64_t g_524 = 0x17EF735F4DDDEDDCLL;
static int8_t * volatile g_594 = (void*)0;/* VOLATILE GLOBAL g_594 */
static int8_t * volatile * volatile g_593 = &g_594;/* VOLATILE GLOBAL g_593 */
static struct S0 g_607 = {0xC40571D6L,1L,4223,4294967290UL,0xF28EL,0x889C0A02L,1928,4294967287UL};/* VOLATILE GLOBAL g_607 */
static int16_t g_639 = 0x630DL;
static struct S0 *g_670 = (void*)0;
static struct S0 **g_669 = &g_670;
static int32_t g_708 = 0L;
static int32_t *g_709 = &g_35[0][2];
static volatile struct S0 g_731[9] = {{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L},{9L,1L,-4537,0x8B63A413L,0x4BDEL,0x83E34910L,875,0x74603B27L}};
static uint64_t *g_736 = &g_399[2];
static uint64_t **g_735 = &g_736;
static uint32_t g_774 = 0x9D6CD465L;
static struct S0 g_780 = {0x5BBDB5A3L,0x7404C6B9BD1860A4LL,-6380,1UL,8UL,0x7A14DD5AL,-320,1UL};/* VOLATILE GLOBAL g_780 */
static volatile struct S0 g_796[5] = {{-1L,0x4B542BCD448B98AALL,-2219,0UL,0xA90AL,18446744073709551608UL,-985,4294967295UL},{-1L,0x4B542BCD448B98AALL,-2219,0UL,0xA90AL,18446744073709551608UL,-985,4294967295UL},{-1L,0x4B542BCD448B98AALL,-2219,0UL,0xA90AL,18446744073709551608UL,-985,4294967295UL},{-1L,0x4B542BCD448B98AALL,-2219,0UL,0xA90AL,18446744073709551608UL,-985,4294967295UL},{-1L,0x4B542BCD448B98AALL,-2219,0UL,0xA90AL,18446744073709551608UL,-985,4294967295UL}};
static struct S0 g_809[3][6][9] = {{{{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L}},{{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL}},{{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L}},{{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L}},{{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL}},{{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL}}},{{{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL}},{{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L}},{{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L}},{{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL}},{{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L}},{{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L}}},{{{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL}},{{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL}},{{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL}},{{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0xFC77CEDDL,1L,749,0x24A7D9A7L,65535UL,1UL,1525,4294967288UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{0x9C0F45E6L,0x4A4DE3696BD9CFA3LL,-3458,0xC93C3B18L,65535UL,0x74F750F8L,-86,0x187F4F67L}},{{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0x0DEFE24FL,0xBE1F96057AEAC9D8LL,2366,4294967294UL,0x2557L,0xE2188DD7L,-544,1UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{0x48CD10CEL,0x014E5AE4A2DB4914LL,4776,0x3CD4AA83L,65530UL,0x25A37666L,-1615,0UL},{-1L,0x6FE681DB30233EFBLL,877,4294967286UL,1UL,0x39301102L,-447,9UL},{0xD8B9E724L,-6L,4833,0x9A797120L,0x9375L,18446744073709551606UL,479,0x28888B90L}},{{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{8L,0xF4CA5A9E14352E1ALL,2768,0x19021A57L,8UL,1UL,1867,0x3043232DL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL},{0x6BD913B3L,4L,-332,0xFE972CF9L,0x61A8L,0xF8A962AFL,-253,4294967293UL},{1L,0x67835B703CEC408ELL,2674,0x7D2FCCCCL,65535UL,18446744073709551613UL,-444,1UL}}}};
static uint32_t * volatile g_837 = &g_780.f5;/* VOLATILE GLOBAL g_837 */
static uint32_t * volatile *g_836 = &g_837;
static uint32_t * volatile **g_845 = &g_836;
static uint32_t * volatile *** volatile g_844 = &g_845;/* VOLATILE GLOBAL g_844 */
static struct S0 g_860 = {-5L,0xC66BA965B5C373D1LL,7284,4294967291UL,4UL,0x27491339L,-566,0xC66B73C9L};/* VOLATILE GLOBAL g_860 */


/* --- FORWARD DECLARATIONS --- */
static uint64_t  func_1(void);
static int32_t * func_2(int32_t * p_3);
static int32_t * func_4(int32_t * p_5, uint32_t  p_6);
static uint64_t  func_7(int16_t  p_8, uint64_t  p_9);
static uint64_t  func_16(int64_t  p_17, int32_t * p_18);
static int32_t * func_19(const int32_t * p_20);
static const int32_t * func_21(uint32_t  p_22, int32_t * p_23, uint16_t * p_24, uint64_t  p_25, int64_t  p_26);
static uint16_t * func_28(int32_t * p_29, const uint16_t * p_30, uint16_t  p_31);
static int32_t * func_32(int32_t  p_33);
static uint16_t * func_36(uint64_t  p_37, uint16_t  p_38, int32_t  p_39, uint64_t  p_40);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_10 g_15 g_35 g_43 g_75 g_77 g_86 g_76 g_102 g_243 g_244 g_270 g_271 g_458 g_87 g_229.f0 g_227.f5 g_138.f6 g_607.f7 g_607.f1 g_708 g_709 g_227.f4 g_731 g_373 g_774 g_607.f5 g_229.f1 g_780 g_736 g_399 g_229.f4 g_796 g_607.f6 g_368 g_480.f7 g_809 g_480.f4 g_836 g_844 g_860 g_248 g_334
 * writes: g_35 g_77 g_86 g_104 g_173 g_227.f5 g_669 g_708 g_15 g_735 g_373 g_143 g_458.f1 g_368 g_480.f7 g_836 g_845 g_607.f1 g_334 g_271
 */
static uint64_t  func_1(void)
{ /* block id: 0 */
    int32_t l_13 = 0x44401D1BL;
    uint16_t *l_14[1][9] = {{&g_15,&g_15,&g_15,&g_15,&g_15,&g_15,&g_15,&g_15,&g_15}};
    int32_t l_27 = 0x2D6273D5L;
    uint32_t l_339[7] = {0x5FF4F99FL,0x5FF4F99FL,1UL,0x5FF4F99FL,0x5FF4F99FL,1UL,0x5FF4F99FL};
    int32_t *l_906 = &g_35[0][6];
    int i, j;
    l_906 = func_2(func_4((func_7((g_10 , ((safe_div_func_int8_t_s_s(((l_13 = l_13) == (func_16(g_15, func_19(func_21(l_27, &l_27, func_28((l_27 , func_32(l_27)), func_36(g_35[1][0], g_15, g_10, g_35[2][0]), g_102[2][7][3]), l_27, l_339[6]))) || 0xAAE7E7417316F9DFLL)), g_102[3][8][1])) ^ l_339[6])), l_339[6]) , g_709), l_339[6]));
    return l_339[6];
}


/* ------------------------------------------ */
/* 
 * reads : g_368 g_35 g_334 g_270
 * writes: g_368 g_334 g_271
 */
static int32_t * func_2(int32_t * p_3)
{ /* block id: 361 */
    int8_t l_885 = 0x76L;
    int32_t *l_886 = &g_708;
    uint8_t *l_889 = &g_368;
    int8_t *l_895 = &g_334;
    int32_t l_898 = 0xF510774DL;
    struct S0 ***l_901[10];
    int32_t l_902 = 0x4FE2D1EBL;
    int i;
    for (i = 0; i < 10; i++)
        l_901[i] = &g_669;
    l_886 = func_32(((safe_rshift_func_uint16_t_u_u((safe_rshift_func_int8_t_s_u(l_885, 2)), 1)) , l_885));
    l_902 ^= (((safe_mul_func_uint8_t_u_u((++(*l_889)), (((1UL ^ ((((~((*l_886) != ((safe_rshift_func_int8_t_s_u(((*l_895) = ((void*)0 == &g_244)), ((l_898 = (*l_886)) <= (0x2CL <= 255UL)))) ^ (safe_mod_func_uint16_t_u_u(((void*)0 != l_901[3]), (*l_886)))))) <= 1UL) | 0xD549C4AAL) > (*l_886))) & 0x6A00L) ^ (*l_886)))) , l_889) != (void*)0);
    for (g_334 = 14; (g_334 == (-2)); g_334--)
    { /* block id: 369 */
        int8_t l_905 = 1L;
        if (l_905)
        { /* block id: 370 */
            return p_3;
        }
        else
        { /* block id: 372 */
            return p_3;
        }
    }
    (*g_270) = &l_902;
    return p_3;
}


/* ------------------------------------------ */
/* 
 * reads : g_43.f1 g_35 g_708 g_15 g_709 g_227.f4 g_731 g_373 g_774 g_227.f5 g_77 g_607.f5 g_229.f1 g_229.f0 g_780 g_736 g_399 g_229.f4 g_796 g_607.f6 g_368 g_480.f7 g_809 g_480.f4 g_836 g_844 g_860 g_248
 * writes: g_15 g_35 g_735 g_373 g_77 g_143 g_458.f1 g_104 g_368 g_480.f7 g_836 g_845 g_607.f1 g_334
 */
static int32_t * func_4(int32_t * p_5, uint32_t  p_6)
{ /* block id: 294 */
    uint16_t **l_717 = &g_244;
    uint16_t *** const l_716 = &l_717;
    int8_t l_718 = 1L;
    int32_t l_719 = 0x6BBA6DE8L;
    uint16_t l_720 = 3UL;
    int32_t l_835 = 0x386AA04AL;
    int32_t *l_867 = (void*)0;
    l_719 ^= ((g_43.f1 | (((*p_5) ^ (1L == (safe_div_func_int16_t_s_s(((safe_rshift_func_uint8_t_u_s((safe_lshift_func_uint8_t_u_u(247UL, (l_716 != &g_241[2]))), g_708)) & 65535UL), (g_15 &= l_718))))) , l_718)) , l_718);
    l_720++;
    if ((!l_720))
    { /* block id: 298 */
        (*g_709) = l_718;
        return p_5;
    }
    else
    { /* block id: 301 */
        const uint64_t **l_730 = &g_163[2][4][4];
        uint64_t *l_733 = &g_104;
        uint64_t **l_732[9] = {&l_733,&l_733,&l_733,&l_733,&l_733,&l_733,&l_733,&l_733,&l_733};
        uint64_t ***l_734[5];
        uint8_t l_737 = 0xD7L;
        int32_t l_740 = 0x67F88E33L;
        const int16_t *l_833 = (void*)0;
        int i;
        for (i = 0; i < 5; i++)
            l_734[i] = &l_732[2];
        l_740 ^= (safe_mul_func_int16_t_s_s(g_227.f4, (((safe_sub_func_int8_t_s_s(((*p_5) <= p_6), ((safe_add_func_int8_t_s_s(p_6, (l_730 == (g_735 = (g_731[1] , l_732[2]))))) && (l_737 & (((safe_sub_func_uint16_t_u_u(l_737, l_737)) <= 0UL) < p_6))))) < l_737) , l_737)));
        for (g_373 = 0; (g_373 == 22); g_373++)
        { /* block id: 306 */
            uint16_t **l_749 = &g_244;
            const int32_t l_773[6][7] = {{0xD8003915L,0x9AB61C2CL,0x0604E46AL,0xD8003915L,0x0604E46AL,0x9AB61C2CL,0xD8003915L},{0x96535AFAL,0x03246D1AL,0x89F0D04CL,0x172FF5ECL,0x03246D1AL,0x172FF5ECL,0x89F0D04CL},{0xD8003915L,0xD8003915L,(-1L),0L,0x4E832339L,(-1L),0x4E832339L},{0x9AEC00C6L,0x89F0D04CL,0x89F0D04CL,0x9AEC00C6L,0x172FF5ECL,0x96535AFAL,0x9AEC00C6L},{0xE4009612L,0x4E832339L,0x0604E46AL,0x0604E46AL,0x4E832339L,0xE4009612L,0x9AB61C2CL},{1L,0x9AEC00C6L,0x5722D4C8L,0x03246D1AL,0x03246D1AL,0x5722D4C8L,0x89F0D04CL}};
            uint8_t *l_775[10] = {&l_737,&l_737,&l_737,&l_737,&l_737,&l_737,&l_737,&l_737,&l_737,&l_737};
            int32_t l_776 = 0xC999F757L;
            int8_t *l_777 = &g_77;
            uint32_t *l_852[4][5] = {{(void*)0,&g_809[2][2][7].f5,(void*)0,&g_809[2][2][7].f5,(void*)0},{&g_229.f5,&g_809[2][2][7].f5,&g_809[2][2][7].f5,&g_229.f5,&g_229.f5},{&g_480.f5,&g_809[2][2][7].f5,&g_480.f5,&g_809[2][2][7].f5,&g_480.f5},{&g_229.f5,&g_229.f5,&g_809[2][2][7].f5,&g_809[2][2][7].f5,&g_229.f5}};
            int32_t * const **l_855 = (void*)0;
            int32_t * const ***l_854 = &l_855;
            int32_t * const ****l_853[8][6] = {{&l_854,&l_854,&l_854,(void*)0,&l_854,(void*)0},{&l_854,&l_854,&l_854,&l_854,&l_854,&l_854},{&l_854,&l_854,&l_854,&l_854,&l_854,(void*)0},{(void*)0,&l_854,&l_854,&l_854,(void*)0,&l_854},{&l_854,(void*)0,&l_854,&l_854,(void*)0,&l_854},{&l_854,&l_854,&l_854,(void*)0,&l_854,&l_854},{&l_854,&l_854,&l_854,&l_854,&l_854,&l_854},{&l_854,&l_854,&l_854,(void*)0,&l_854,(void*)0}};
            int i, j;
            if ((safe_mul_func_uint16_t_u_u(((safe_div_func_uint8_t_u_u((((g_731[8] , (((((*l_716) = &g_244) == l_749) | ((((safe_mul_func_int8_t_s_s(((safe_add_func_int8_t_s_s(((l_740 = ((safe_lshift_func_int16_t_s_u(((safe_mul_func_uint8_t_u_u(((((*l_777) = ((p_6 & (((((!1UL) & (safe_mod_func_int8_t_s_s(0xA0L, (l_718 , l_718)))) <= (safe_mod_func_int16_t_s_s(((safe_lshift_func_int16_t_s_u(((safe_div_func_uint64_t_u_u(((safe_mod_func_uint8_t_u_u((l_776 |= ((safe_add_func_uint16_t_u_u((safe_sub_func_int32_t_s_s((((l_720 | l_740) < p_6) , l_773[2][3]), l_720)), g_774)) || g_43.f1)), 0x0BL)) , l_776), 0x93D2A6B41D4CB0F8LL)) != l_773[3][4]), 5)) , g_227.f5), g_77))) > p_6) & 0x10EFL)) | l_773[2][3])) & p_6) > g_607.f5), g_229.f1)) && 255UL), l_773[2][3])) == 0xCCDED6F3L)) && 1UL), l_718)) == l_719), l_773[1][5])) > 2L) , l_773[0][2]) < p_6)) || g_229.f0)) <= l_720) != l_719), l_773[2][3])) && p_6), 1UL)))
            { /* block id: 311 */
                uint64_t l_783 = 9UL;
                int32_t l_803 = 0L;
                int64_t *l_804[9] = {&g_274[3],&g_274[4],&g_274[3],&g_274[4],&g_274[3],&g_274[4],&g_274[3],&g_274[4],&g_274[3]};
                int i;
                (*p_5) = (((*l_733) = (safe_add_func_int16_t_s_s(((g_780 , (*g_736)) && (safe_lshift_func_uint8_t_u_s((l_783 = 0UL), (safe_lshift_func_uint16_t_u_u((l_719 = (((((p_6 == ((((g_458.f1 = (safe_add_func_int64_t_s_s((g_143[0][1][6] = (safe_rshift_func_int16_t_s_s((((safe_lshift_func_int16_t_s_s((((0x89L < (safe_lshift_func_uint8_t_u_s(g_229.f4, 1))) , (safe_rshift_func_uint8_t_u_s((l_740 = (g_796[3] , ((0xDC69299EL | ((safe_div_func_uint64_t_u_u(((safe_rshift_func_uint16_t_u_s(((safe_mul_func_int8_t_s_s(((*l_777) |= p_6), l_737)) <= g_607.f6), g_227.f4)) < 18446744073709551615UL), p_6)) >= 0x6D2F9516L)) > 0x59585C41L))), 5))) & 1UL), l_773[1][6])) , &g_735) == &g_735), l_803))), p_6))) , (*p_5)) | l_773[0][3]) != p_6)) , 0UL) , &g_244) == &g_244) && 0x7E79L)), 10))))), 0x1A94L))) == p_6);
            }
            else
            { /* block id: 320 */
                int16_t l_832 = 0L;
                int32_t *l_843 = (void*)0;
                const uint32_t **l_848 = (void*)0;
                const uint32_t ***l_847 = &l_848;
                const uint32_t ****l_846[8][4] = {{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0},{(void*)0,&l_847,&l_847,(void*)0}};
                int32_t ****l_864 = &g_482[2][0][4];
                int8_t *l_866 = &g_334;
                int i, j;
                for (g_368 = (-15); (g_368 < 39); g_368 = safe_add_func_int64_t_s_s(g_368, 4))
                { /* block id: 323 */
                    int8_t l_817 = 0x8FL;
                    (*p_5) = (*p_5);
                    for (g_480.f7 = 22; (g_480.f7 < 7); g_480.f7 = safe_sub_func_int64_t_s_s(g_480.f7, 6))
                    { /* block id: 327 */
                        int16_t *l_834 = &g_173[2][0];
                        uint32_t * volatile **l_838 = &g_836;
                        (*p_5) &= (((g_809[2][2][7] , 0xD6L) , (~((safe_add_func_int32_t_s_s((safe_lshift_func_int8_t_s_s(((*l_777) |= p_6), 1)), l_817)) <= ((!((safe_lshift_func_uint16_t_u_s((safe_mul_func_int8_t_s_s(l_817, (l_719 = p_6))), ((safe_div_func_int16_t_s_s((safe_mod_func_int16_t_s_s((l_835 = (safe_add_func_int32_t_s_s(((safe_unary_minus_func_int8_t_s(l_832)) || (l_833 != l_834)), g_480.f4))), p_6)), 1UL)) , g_731[1].f1))) <= 1UL)) > 6L)))) & g_480.f7);
                        (*l_838) = g_836;
                    }
                    if (l_835)
                        break;
                    if (l_773[2][3])
                        break;
                }
                for (g_15 = 6; (g_15 < 9); ++g_15)
                { /* block id: 339 */
                    uint8_t l_859 = 0UL;
                    int16_t l_861 = 0xF053L;
                    if (((*g_709) = (safe_mul_func_int16_t_s_s(0x90BFL, l_740))))
                    { /* block id: 341 */
                        return l_843;
                    }
                    else
                    { /* block id: 343 */
                        uint32_t l_856 = 1UL;
                        int64_t *l_865 = &g_607.f1;
                        (*g_844) = &g_836;
                        (*p_5) = ((((((void*)0 != l_846[5][0]) ^ (p_6 != p_6)) != (0xB2L != (((safe_add_func_uint32_t_u_u(0xD591D504L, (~1UL))) ^ (((g_809[2][2][7].f0 ^ (((((l_852[3][2] == l_852[3][4]) && p_6) && 0x80L) , p_6) < 0xF4L)) | g_796[3].f6) ^ 18446744073709551615UL)) && 0x4CL))) , l_853[0][2]) == &g_481);
                        l_740 |= ((*p_5) ^= l_856);
                        l_740 |= (safe_sub_func_uint64_t_u_u(p_6, ((l_859 ^ (g_860 , (p_6 || l_856))) , ((((*l_865) = (l_861 , ((-8L) && ((safe_mul_func_int16_t_s_s(((((void*)0 == l_864) == 0xE0F7L) == (*p_5)), l_718)) <= (-1L))))) , l_861) <= l_719))));
                    }
                }
                l_740 |= (((((*l_866) = ((*l_777) |= l_718)) != (&g_373 == l_867)) & (safe_rshift_func_int8_t_s_s((safe_add_func_int32_t_s_s(0x072555F6L, 0x7311433BL)), ((safe_div_func_uint64_t_u_u(((((p_6 != (safe_add_func_int16_t_s_s(g_248, 65535UL))) | (9L > (*p_5))) < p_6) <= p_6), p_6)) ^ p_6)))) , (*p_5));
                if (l_740)
                    continue;
            }
        }
    }
    (*g_709) = (p_6 >= (p_6 < (safe_lshift_func_int16_t_s_s((safe_lshift_func_int8_t_s_s((safe_unary_minus_func_uint64_t_u(p_6)), 1)), (l_867 == (void*)0)))));
    return p_5;
}


/* ------------------------------------------ */
/* 
 * reads : g_229.f0 g_227.f5 g_138.f6 g_35 g_43.f0 g_607.f7 g_458.f1 g_607.f1 g_458.f5 g_708
 * writes: g_173 g_227.f5 g_669 g_35 g_708
 */
static uint64_t  func_7(int16_t  p_8, uint64_t  p_9)
{ /* block id: 274 */
    const uint32_t l_647 = 0x4B8399A6L;
    struct S0 *l_649 = &g_458;
    struct S0 **l_648 = &l_649;
    int16_t *l_661 = &g_173[2][0];
    int32_t l_662[1][7] = {{0x69D6179BL,0x69D6179BL,(-5L),0x69D6179BL,0x69D6179BL,(-5L),0x69D6179BL}};
    uint64_t l_663 = 0xD4BD1C6BCEE3CAF7LL;
    struct S0 ***l_668[2][9][10] = {{{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,(void*)0,(void*)0,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,(void*)0},{&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648,(void*)0,&l_648,&l_648,(void*)0},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,(void*)0,(void*)0,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,(void*)0,&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648,(void*)0}},{{&l_648,&l_648,&l_648,&l_648,&l_648,(void*)0,(void*)0,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,(void*)0,(void*)0,&l_648,&l_648,&l_648,&l_648,&l_648,(void*)0},{&l_648,&l_648,&l_648,(void*)0,&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648},{&l_648,&l_648,(void*)0,&l_648,&l_648,(void*)0,&l_648,&l_648,&l_648,(void*)0},{&l_648,&l_648,&l_648,&l_648,&l_648,(void*)0,(void*)0,&l_648,&l_648,&l_648},{&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648,&l_648}}};
    uint64_t *l_677 = (void*)0;
    uint64_t **l_676 = &l_677;
    uint64_t **l_678 = &l_677;
    int32_t *l_679 = &g_35[2][0];
    const uint16_t *l_689 = (void*)0;
    const uint16_t **l_688 = &l_689;
    int8_t *l_691 = &g_77;
    int8_t **l_690[6][1] = {{&l_691},{&l_691},{&l_691},{&l_691},{&l_691},{&l_691}};
    uint32_t *l_706[6][3] = {{&g_458.f7,&g_458.f7,&g_458.f7},{&g_229.f7,&g_458.f7,&g_227.f7},{&g_607.f7,&g_458.f7,&g_227.f7},{&g_458.f7,&g_458.f7,&g_458.f7},{&g_229.f7,&g_458.f7,&g_227.f7},{&g_607.f7,&g_458.f7,&g_227.f7}};
    int32_t *l_707 = &g_708;
    int i, j, k;
    if (((((safe_sub_func_uint8_t_u_u((safe_mul_func_int8_t_s_s((p_8 | (l_647 && 0xAEC422EDL)), (((l_648 == ((safe_sub_func_uint32_t_u_u(((p_8 , l_647) != (safe_mod_func_uint8_t_u_u((safe_div_func_int32_t_s_s((l_647 <= (l_662[0][6] = ((safe_unary_minus_func_uint64_t_u((safe_sub_func_int8_t_s_s((safe_sub_func_int16_t_s_s((((*l_661) = g_229.f0) ^ 0x4B31L), l_647)), l_647)))) && 0UL))), p_8)), 0x95L))), 0xB4918691L)) , (void*)0)) , 0x1A4C531AL) != p_8))), l_663)) & 0UL) == l_647) , p_9))
    { /* block id: 277 */
        uint32_t l_664 = 0x251CB850L;
        l_662[0][4] ^= p_9;
        for (g_227.f5 = 1; (g_227.f5 <= 7); g_227.f5 += 1)
        { /* block id: 281 */
            l_664 |= 0x31CBED16L;
        }
    }
    else
    { /* block id: 284 */
        uint32_t l_665 = 0x64770E87L;
        return l_665;
    }
    (*l_679) &= (safe_mul_func_uint16_t_u_u(((g_669 = (p_9 , (void*)0)) != &g_670), (!(safe_div_func_int64_t_s_s(((safe_add_func_uint64_t_u_u(l_663, l_662[0][6])) == (0L | (l_662[0][6] != ((l_676 != (p_8 , l_678)) <= l_662[0][1])))), g_138.f6)))));
    (*l_707) &= (((((g_43.f0 > (l_662[0][3] |= (safe_mul_func_uint8_t_u_u((g_607.f7 ^ (safe_lshift_func_uint16_t_u_s(((safe_sub_func_int16_t_s_s((-1L), (safe_lshift_func_uint8_t_u_s((l_661 == ((*l_688) = l_661)), (((void*)0 != l_690[5][0]) , ((safe_div_func_uint32_t_u_u((safe_rshift_func_int8_t_s_u((safe_add_func_uint16_t_u_u((safe_sub_func_uint16_t_u_u((safe_sub_func_int16_t_s_s((((safe_mod_func_int8_t_s_s(p_9, (safe_lshift_func_int8_t_s_u((*l_679), 2)))) , p_8) , p_8), p_8)), p_8)), p_8)), g_458.f1)), p_8)) || 65531UL)))))) || 0x76L), g_607.f1))), (*l_679))))) & g_458.f5) > 18446744073709551615UL) , (*l_679)) <= (-9L));
    (*l_679) = 0xD2312B99L;
    return p_9;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint64_t  func_16(int64_t  p_17, int32_t * p_18)
{ /* block id: 269 */
    int32_t *l_623 = &g_35[2][0];
    int32_t *l_624 = &g_35[1][5];
    int32_t *l_625 = &g_35[1][6];
    int32_t *l_626 = (void*)0;
    int32_t *l_627[1];
    int32_t l_628 = 0x11935372L;
    uint32_t l_629 = 1UL;
    int16_t l_632[8][7] = {{(-1L),(-10L),0L,(-10L),(-1L),(-1L),(-10L)},{0xF26DL,0x682BL,0xF26DL,(-10L),(-10L),0xF26DL,0x682BL},{(-10L),0x682BL,0L,0L,0x682BL,(-10L),0x682BL},{0xF26DL,(-10L),(-10L),0xF26DL,0x682BL,0xF26DL,(-10L)},{(-1L),(-1L),(-10L),0L,(-10L),(-1L),(-1L)},{(-1L),(-10L),0L,(-10L),(-1L),(-1L),(-10L)},{0xF26DL,0x682BL,0xF26DL,(-10L),(-10L),0xF26DL,0x682BL},{(-10L),(-1L),0x682BL,0x682BL,(-1L),0xF26DL,(-1L)}};
    uint8_t l_633 = 1UL;
    int8_t l_636[5] = {1L,1L,1L,1L,1L};
    int8_t l_637 = 0L;
    int16_t l_638[7] = {(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)};
    uint8_t l_640[4];
    int i, j;
    for (i = 0; i < 1; i++)
        l_627[i] = &g_35[2][0];
    for (i = 0; i < 4; i++)
        l_640[i] = 0x5AL;
    l_629--;
    l_633++;
    --l_640[2];
    return p_17;
}


/* ------------------------------------------ */
/* 
 * reads : g_458 g_86 g_87
 * writes:
 */
static int32_t * func_19(const int32_t * p_20)
{ /* block id: 266 */
    int32_t *****l_613 = &g_481;
    uint16_t *l_616 = (void*)0;
    int32_t l_617[1];
    uint8_t l_618 = 0xA5L;
    uint64_t l_619 = 0UL;
    const uint16_t ***l_620 = &g_241[2];
    int32_t *l_621[5][3];
    uint32_t l_622 = 0x5EE96C6EL;
    int i, j;
    for (i = 0; i < 1; i++)
        l_617[i] = 7L;
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
            l_621[i][j] = &g_35[2][0];
    }
    l_622 |= ((((safe_lshift_func_int16_t_s_u((safe_unary_minus_func_uint8_t_u(((((g_458 , l_613) != l_613) , g_458.f0) <= ((safe_lshift_func_uint8_t_u_s((((((void*)0 != l_616) || ((((void*)0 == p_20) | l_617[0]) & l_618)) & 0x9825E430D57322F0LL) , l_618), g_458.f5)) || 0x81918E04B44D90D0LL)))), l_619)) < 0xBB952E4C3FC72C9DLL) , l_620) == l_620);
    return (*g_86);
}


/* ------------------------------------------ */
/* 
 * reads : g_270 g_271
 * writes:
 */
static const int32_t * func_21(uint32_t  p_22, int32_t * p_23, uint16_t * p_24, uint64_t  p_25, int64_t  p_26)
{ /* block id: 123 */
    int32_t l_340[9][6][1] = {{{0x5B6FE500L},{(-6L)},{0L},{0L},{1L},{0L}},{{0x725A2E18L},{0x0C153BCFL},{0x82F9DD74L},{0x0C153BCFL},{0x725A2E18L},{0L}},{{1L},{0L},{0L},{(-6L)},{0x5B6FE500L},{0x82F9DD74L}},{{0L},{1L},{0L},{0x7FB04761L},{0x7FB04761L},{0L}},{{1L},{0L},{0x82F9DD74L},{0x5B6FE500L},{(-6L)},{0L}},{{0L},{1L},{0L},{0x725A2E18L},{0x0C153BCFL},{0x82F9DD74L}},{{0x0C153BCFL},{0x725A2E18L},{0L},{1L},{0L},{0L}},{{(-6L)},{0x5B6FE500L},{0x82F9DD74L},{0L},{1L},{0L}},{{0x7FB04761L},{0x7FB04761L},{0L},{1L},{0L},{0x82F9DD74L}}};
    uint64_t *l_358 = &g_104;
    uint64_t *l_359 = &g_104;
    int32_t l_361 = 0x21CA5512L;
    int32_t l_363 = 0x638B5E74L;
    int64_t l_378 = 0x8EF185857A17A590LL;
    uint8_t l_459 = 4UL;
    int32_t ****l_486 = &g_482[5][0][7];
    int16_t l_490 = 0L;
    const int32_t ***l_495 = &g_270;
    uint32_t *l_545 = &g_227.f5;
    const uint8_t l_552[4] = {255UL,255UL,255UL,255UL};
    int16_t l_570 = (-9L);
    int8_t l_586 = 5L;
    int i, j, k;
    return (**l_495);
}


/* ------------------------------------------ */
/* 
 * reads : g_243 g_244
 * writes:
 */
static uint16_t * func_28(int32_t * p_29, const uint16_t * p_30, uint16_t  p_31)
{ /* block id: 40 */
    int64_t *l_142 = &g_143[0][1][6];
    int32_t l_146 = (-1L);
    const uint64_t *l_166 = (void*)0;
    const uint64_t **l_165 = &l_166;
    const uint64_t *l_168 = &g_164[5];
    const uint64_t **l_167 = &l_168;
    uint64_t *l_169 = &g_104;
    int8_t *l_170 = &g_77;
    int32_t l_171 = 0L;
    int16_t *l_172 = &g_173[2][0];
    int32_t ***l_174[5] = {&g_86,&g_86,&g_86,&g_86,&g_86};
    int32_t ** const l_177 = (void*)0;
    int32_t ** const *l_176 = &l_177;
    int32_t ** const **l_175 = &l_176;
    uint32_t l_196 = 0x856D30ABL;
    int32_t l_302[1];
    int8_t l_337 = 1L;
    int i;
    for (i = 0; i < 1; i++)
        l_302[i] = (-1L);
    return (*g_243);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t * func_32(int32_t  p_33)
{ /* block id: 2 */
    int32_t *l_34 = &g_35[2][0];
    return l_34;
}


/* ------------------------------------------ */
/* 
 * reads : g_43 g_35 g_15 g_75 g_77 g_86 g_76 g_102
 * writes: g_35 g_77 g_86 g_104
 */
static uint16_t * func_36(uint64_t  p_37, uint16_t  p_38, int32_t  p_39, uint64_t  p_40)
{ /* block id: 4 */
    int8_t l_44[10] = {1L,1L,1L,1L,1L,1L,1L,1L,1L,1L};
    int32_t *l_57 = &g_35[2][3];
    uint16_t *l_60[2];
    const int32_t *l_101 = &g_102[2][7][3];
    int32_t l_106 = 9L;
    int8_t l_107[6][2] = {{0xB1L,0x9FL},{0xB1L,0xB1L},{0x9FL,0xB1L},{0xB1L,0x9FL},{0xB1L,0xB1L},{0x9FL,0xB1L}};
    int32_t l_108 = (-3L);
    int32_t *l_109 = &l_106;
    int32_t l_110[8][8] = {{9L,0x3AF947C6L,0xE5235086L,0L,5L,0x9B9DBF79L,1L,0x9E62AD52L},{0x137EFE7BL,1L,(-10L),0x9B9DBF79L,0L,0x9B9DBF79L,(-10L),1L},{0xA479C51AL,0x3AF947C6L,0x9E62AD52L,0x306CF3CBL,9L,0L,5L,(-10L)},{1L,0x9B9DBF79L,0L,5L,0xA479C51AL,0xA479C51AL,5L,0L},{5L,5L,0x9E62AD52L,0L,0x80CF2840L,0xE5235086L,(-10L),0x137EFE7BL},{0x80CF2840L,0xE5235086L,(-10L),0x137EFE7BL,1L,0L,1L,0x137EFE7BL},{0xE5235086L,0x9E62AD52L,0xE5235086L,0L,4L,1L,0x9B9DBF79L,0L},{0x306CF3CBL,9L,0L,5L,(-10L),4L,4L,(-10L)}};
    int32_t *l_111 = &l_108;
    int32_t *l_112 = &l_106;
    int32_t *l_113 = &g_35[1][2];
    int32_t *l_114 = (void*)0;
    int32_t *l_115 = &g_35[2][0];
    int32_t *l_116 = &l_108;
    int32_t *l_117 = &l_110[3][5];
    int32_t *l_118 = &l_106;
    int32_t *l_119 = &g_35[2][0];
    int32_t *l_120 = &l_110[5][4];
    int32_t *l_121 = (void*)0;
    int32_t *l_122 = &l_110[5][4];
    int32_t *l_123 = (void*)0;
    int32_t *l_124 = &l_110[5][4];
    int32_t *l_125 = (void*)0;
    int32_t *l_126 = &g_35[2][0];
    int32_t *l_127 = &l_110[1][4];
    int32_t *l_128 = &g_35[1][7];
    int32_t *l_129[4];
    int8_t l_130 = 0x75L;
    int32_t l_131 = 1L;
    int64_t l_132 = 1L;
    uint8_t l_133 = 255UL;
    int i, j;
    for (i = 0; i < 2; i++)
        l_60[i] = &g_15;
    for (i = 0; i < 4; i++)
        l_129[i] = &g_35[2][0];
    (*l_57) = (safe_sub_func_uint32_t_u_u(((g_43 , p_37) < l_44[7]), (safe_rshift_func_uint16_t_u_u((((safe_add_func_int64_t_s_s(p_40, ((((g_35[2][0] != ((safe_mul_func_int8_t_s_s(1L, g_35[2][0])) ^ (safe_add_func_int64_t_s_s((safe_sub_func_int32_t_s_s(((((((((safe_sub_func_uint8_t_u_u(((g_15 > (p_38 >= l_44[8])) == p_39), p_39)) == 0xEC499E98C5348320LL) & p_40) <= 0L) < l_44[7]) == 1L) , 0xF7A7L) && g_35[0][0]), g_15)), p_40)))) && l_44[7]) , &g_35[2][4]) == &g_35[2][0]))) < 0x52071694A98A1BD0LL) > g_35[2][0]), g_15))));
    (*l_57) = ((void*)0 == &g_35[2][0]);
    for (p_38 = 0; (p_38 != 6); ++p_38)
    { /* block id: 9 */
        int32_t *l_67 = &g_35[2][6];
        int32_t l_70 = (-6L);
        for (p_39 = 0; (p_39 <= 3); p_39 += 1)
        { /* block id: 12 */
            return l_60[0];
        }
        for (p_37 = 0; (p_37 >= 54); p_37 = safe_add_func_uint32_t_u_u(p_37, 1))
        { /* block id: 17 */
            int32_t *l_64 = &g_35[2][0];
            int32_t * const *l_74 = &l_57;
            if ((*l_57))
            { /* block id: 18 */
                int32_t **l_63[10][8] = {{&l_57,(void*)0,&l_57,&l_57,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,&l_57,&l_57,(void*)0,&l_57},{(void*)0,&l_57,&l_57,&l_57,(void*)0,&l_57,&l_57,&l_57},{&l_57,&l_57,(void*)0,(void*)0,&l_57,&l_57,&l_57,&l_57},{&l_57,&l_57,(void*)0,&l_57,(void*)0,&l_57,&l_57,&l_57},{&l_57,(void*)0,&l_57,&l_57,&l_57,&l_57,(void*)0,&l_57},{&l_57,&l_57,&l_57,(void*)0,&l_57,(void*)0,&l_57,&l_57},{&l_57,&l_57,&l_57,&l_57,(void*)0,(void*)0,&l_57,&l_57},{&l_57,&l_57,&l_57,(void*)0,&l_57,&l_57,&l_57,(void*)0},{&l_57,(void*)0,&l_57,(void*)0,(void*)0,&l_57,&l_57,(void*)0}};
                uint16_t *l_71 = &g_15;
                int i, j;
                p_39 = (g_43.f4 , ((l_64 = &p_39) == &p_39));
                l_70 = (safe_mul_func_int16_t_s_s((((void*)0 == l_67) >= 18446744073709551608UL), (g_35[3][3] && (safe_rshift_func_uint8_t_u_u(((*l_57) |= (l_60[0] == &g_15)), 2)))));
                return l_71;
            }
            else
            { /* block id: 24 */
                int32_t l_72 = 0x70902054L;
                uint16_t **l_73 = &l_60[1];
                int32_t ***l_88 = &g_86;
                uint64_t *l_103 = &g_104;
                int32_t **l_105 = &l_64;
                g_77 ^= ((p_40 == l_72) <= (((((p_39 < g_43.f5) , (((g_43.f1 | (((*l_73) = &g_15) != (void*)0)) , &l_64) == l_74)) && (*l_57)) , g_75) != (void*)0));
                if (l_72)
                    continue;
                if (p_37)
                    continue;
                (*l_105) = func_32((p_39 & ((((safe_rshift_func_int8_t_s_s((safe_rshift_func_int16_t_s_s(g_35[3][7], 9)), (safe_div_func_int32_t_s_s(((*l_57) ^ 0x317453A37F729B20LL), (*l_64))))) && (3L == ((&l_57 != ((*l_88) = g_86)) > ((safe_add_func_uint32_t_u_u((safe_mul_func_int8_t_s_s((safe_div_func_uint64_t_u_u((safe_mod_func_int16_t_s_s((safe_div_func_int32_t_s_s(((safe_div_func_uint64_t_u_u(((*l_103) = ((l_101 = &l_70) != (*g_75))), p_37)) > g_15), 0xDE86D361L)), g_35[2][0])), (*l_57))), p_39)), (-1L))) && 0x12L)))) , 0xBDL) & g_102[2][7][3])));
            }
        }
        for (g_104 = 0; g_104 < 10; g_104 += 1)
        {
            l_44[g_104] = 0x52L;
        }
        (*l_57) = (*l_67);
    }
    l_133--;
    return &g_15;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_10, "g_10", print_hash_value);
    transparent_crc(g_15, "g_15", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 9; j++)
        {
            transparent_crc(g_35[i][j], "g_35[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_43.f0, "g_43.f0", print_hash_value);
    transparent_crc(g_43.f1, "g_43.f1", print_hash_value);
    transparent_crc(g_43.f2, "g_43.f2", print_hash_value);
    transparent_crc(g_43.f3, "g_43.f3", print_hash_value);
    transparent_crc(g_43.f4, "g_43.f4", print_hash_value);
    transparent_crc(g_43.f5, "g_43.f5", print_hash_value);
    transparent_crc(g_43.f6, "g_43.f6", print_hash_value);
    transparent_crc(g_43.f7, "g_43.f7", print_hash_value);
    transparent_crc(g_77, "g_77", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 9; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_102[i][j][k], "g_102[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_104, "g_104", print_hash_value);
    transparent_crc(g_138.f0, "g_138.f0", print_hash_value);
    transparent_crc(g_138.f1, "g_138.f1", print_hash_value);
    transparent_crc(g_138.f2, "g_138.f2", print_hash_value);
    transparent_crc(g_138.f3, "g_138.f3", print_hash_value);
    transparent_crc(g_138.f4, "g_138.f4", print_hash_value);
    transparent_crc(g_138.f5, "g_138.f5", print_hash_value);
    transparent_crc(g_138.f6, "g_138.f6", print_hash_value);
    transparent_crc(g_138.f7, "g_138.f7", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 7; k++)
            {
                transparent_crc(g_143[i][j][k], "g_143[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_164[i], "g_164[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 8; j++)
        {
            transparent_crc(g_173[i][j], "g_173[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_227.f0, "g_227.f0", print_hash_value);
    transparent_crc(g_227.f1, "g_227.f1", print_hash_value);
    transparent_crc(g_227.f2, "g_227.f2", print_hash_value);
    transparent_crc(g_227.f3, "g_227.f3", print_hash_value);
    transparent_crc(g_227.f4, "g_227.f4", print_hash_value);
    transparent_crc(g_227.f5, "g_227.f5", print_hash_value);
    transparent_crc(g_227.f6, "g_227.f6", print_hash_value);
    transparent_crc(g_227.f7, "g_227.f7", print_hash_value);
    transparent_crc(g_229.f0, "g_229.f0", print_hash_value);
    transparent_crc(g_229.f1, "g_229.f1", print_hash_value);
    transparent_crc(g_229.f2, "g_229.f2", print_hash_value);
    transparent_crc(g_229.f3, "g_229.f3", print_hash_value);
    transparent_crc(g_229.f4, "g_229.f4", print_hash_value);
    transparent_crc(g_229.f5, "g_229.f5", print_hash_value);
    transparent_crc(g_229.f6, "g_229.f6", print_hash_value);
    transparent_crc(g_229.f7, "g_229.f7", print_hash_value);
    transparent_crc(g_248, "g_248", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_274[i], "g_274[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_279, "g_279", print_hash_value);
    transparent_crc(g_334, "g_334", print_hash_value);
    transparent_crc(g_366, "g_366", print_hash_value);
    transparent_crc(g_368, "g_368", print_hash_value);
    transparent_crc(g_373, "g_373", print_hash_value);
    transparent_crc(g_375, "g_375", print_hash_value);
    transparent_crc(g_389, "g_389", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_399[i], "g_399[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_426, "g_426", print_hash_value);
    transparent_crc(g_441, "g_441", print_hash_value);
    transparent_crc(g_458.f0, "g_458.f0", print_hash_value);
    transparent_crc(g_458.f1, "g_458.f1", print_hash_value);
    transparent_crc(g_458.f2, "g_458.f2", print_hash_value);
    transparent_crc(g_458.f3, "g_458.f3", print_hash_value);
    transparent_crc(g_458.f4, "g_458.f4", print_hash_value);
    transparent_crc(g_458.f5, "g_458.f5", print_hash_value);
    transparent_crc(g_458.f6, "g_458.f6", print_hash_value);
    transparent_crc(g_458.f7, "g_458.f7", print_hash_value);
    transparent_crc(g_480.f0, "g_480.f0", print_hash_value);
    transparent_crc(g_480.f1, "g_480.f1", print_hash_value);
    transparent_crc(g_480.f2, "g_480.f2", print_hash_value);
    transparent_crc(g_480.f3, "g_480.f3", print_hash_value);
    transparent_crc(g_480.f4, "g_480.f4", print_hash_value);
    transparent_crc(g_480.f5, "g_480.f5", print_hash_value);
    transparent_crc(g_480.f6, "g_480.f6", print_hash_value);
    transparent_crc(g_480.f7, "g_480.f7", print_hash_value);
    transparent_crc(g_524, "g_524", print_hash_value);
    transparent_crc(g_607.f0, "g_607.f0", print_hash_value);
    transparent_crc(g_607.f1, "g_607.f1", print_hash_value);
    transparent_crc(g_607.f2, "g_607.f2", print_hash_value);
    transparent_crc(g_607.f3, "g_607.f3", print_hash_value);
    transparent_crc(g_607.f4, "g_607.f4", print_hash_value);
    transparent_crc(g_607.f5, "g_607.f5", print_hash_value);
    transparent_crc(g_607.f6, "g_607.f6", print_hash_value);
    transparent_crc(g_607.f7, "g_607.f7", print_hash_value);
    transparent_crc(g_639, "g_639", print_hash_value);
    transparent_crc(g_708, "g_708", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_731[i].f0, "g_731[i].f0", print_hash_value);
        transparent_crc(g_731[i].f1, "g_731[i].f1", print_hash_value);
        transparent_crc(g_731[i].f2, "g_731[i].f2", print_hash_value);
        transparent_crc(g_731[i].f3, "g_731[i].f3", print_hash_value);
        transparent_crc(g_731[i].f4, "g_731[i].f4", print_hash_value);
        transparent_crc(g_731[i].f5, "g_731[i].f5", print_hash_value);
        transparent_crc(g_731[i].f6, "g_731[i].f6", print_hash_value);
        transparent_crc(g_731[i].f7, "g_731[i].f7", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_774, "g_774", print_hash_value);
    transparent_crc(g_780.f0, "g_780.f0", print_hash_value);
    transparent_crc(g_780.f1, "g_780.f1", print_hash_value);
    transparent_crc(g_780.f2, "g_780.f2", print_hash_value);
    transparent_crc(g_780.f3, "g_780.f3", print_hash_value);
    transparent_crc(g_780.f4, "g_780.f4", print_hash_value);
    transparent_crc(g_780.f5, "g_780.f5", print_hash_value);
    transparent_crc(g_780.f6, "g_780.f6", print_hash_value);
    transparent_crc(g_780.f7, "g_780.f7", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_796[i].f0, "g_796[i].f0", print_hash_value);
        transparent_crc(g_796[i].f1, "g_796[i].f1", print_hash_value);
        transparent_crc(g_796[i].f2, "g_796[i].f2", print_hash_value);
        transparent_crc(g_796[i].f3, "g_796[i].f3", print_hash_value);
        transparent_crc(g_796[i].f4, "g_796[i].f4", print_hash_value);
        transparent_crc(g_796[i].f5, "g_796[i].f5", print_hash_value);
        transparent_crc(g_796[i].f6, "g_796[i].f6", print_hash_value);
        transparent_crc(g_796[i].f7, "g_796[i].f7", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 6; j++)
        {
            for (k = 0; k < 9; k++)
            {
                transparent_crc(g_809[i][j][k].f0, "g_809[i][j][k].f0", print_hash_value);
                transparent_crc(g_809[i][j][k].f1, "g_809[i][j][k].f1", print_hash_value);
                transparent_crc(g_809[i][j][k].f2, "g_809[i][j][k].f2", print_hash_value);
                transparent_crc(g_809[i][j][k].f3, "g_809[i][j][k].f3", print_hash_value);
                transparent_crc(g_809[i][j][k].f4, "g_809[i][j][k].f4", print_hash_value);
                transparent_crc(g_809[i][j][k].f5, "g_809[i][j][k].f5", print_hash_value);
                transparent_crc(g_809[i][j][k].f6, "g_809[i][j][k].f6", print_hash_value);
                transparent_crc(g_809[i][j][k].f7, "g_809[i][j][k].f7", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_860.f0, "g_860.f0", print_hash_value);
    transparent_crc(g_860.f1, "g_860.f1", print_hash_value);
    transparent_crc(g_860.f2, "g_860.f2", print_hash_value);
    transparent_crc(g_860.f3, "g_860.f3", print_hash_value);
    transparent_crc(g_860.f4, "g_860.f4", print_hash_value);
    transparent_crc(g_860.f5, "g_860.f5", print_hash_value);
    transparent_crc(g_860.f6, "g_860.f6", print_hash_value);
    transparent_crc(g_860.f7, "g_860.f7", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 192
   depth: 1, occurrence: 9
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 2
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 1
XXX structs with bitfields in the program: 16
breakdown:
   indirect level: 0, occurrence: 9
   indirect level: 1, occurrence: 4
   indirect level: 2, occurrence: 2
   indirect level: 3, occurrence: 1
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 4
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 11
XXX times a single bitfield on LHS: 1
XXX times a single bitfield on RHS: 16

XXX max expression depth: 48
breakdown:
   depth: 1, occurrence: 75
   depth: 2, occurrence: 11
   depth: 3, occurrence: 1
   depth: 4, occurrence: 1
   depth: 5, occurrence: 1
   depth: 6, occurrence: 1
   depth: 8, occurrence: 1
   depth: 12, occurrence: 1
   depth: 13, occurrence: 2
   depth: 15, occurrence: 1
   depth: 16, occurrence: 1
   depth: 17, occurrence: 1
   depth: 18, occurrence: 1
   depth: 19, occurrence: 1
   depth: 20, occurrence: 1
   depth: 21, occurrence: 1
   depth: 24, occurrence: 1
   depth: 25, occurrence: 1
   depth: 27, occurrence: 2
   depth: 30, occurrence: 1
   depth: 41, occurrence: 1
   depth: 48, occurrence: 1

XXX total number of pointers: 227

XXX times a variable address is taken: 403
XXX times a pointer is dereferenced on RHS: 61
breakdown:
   depth: 1, occurrence: 53
   depth: 2, occurrence: 6
   depth: 3, occurrence: 1
   depth: 4, occurrence: 1
XXX times a pointer is dereferenced on LHS: 110
breakdown:
   depth: 1, occurrence: 102
   depth: 2, occurrence: 6
   depth: 3, occurrence: 1
   depth: 4, occurrence: 1
XXX times a pointer is compared with null: 14
XXX times a pointer is compared with address of another variable: 4
XXX times a pointer is compared with another pointer: 3
XXX times a pointer is qualified to be dereferenced: 2373

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 357
   level: 2, occurrence: 69
   level: 3, occurrence: 35
   level: 4, occurrence: 41
   level: 5, occurrence: 7
XXX number of pointers point to pointers: 74
XXX number of pointers point to scalars: 147
XXX number of pointers point to structs: 6
XXX percent of pointers has null in alias set: 29.5
XXX average alias set size: 1.32

XXX times a non-volatile is read: 634
XXX times a non-volatile is write: 339
XXX times a volatile is read: 38
XXX    times read thru a pointer: 1
XXX times a volatile is write: 4
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 1.46e+03
XXX percentage of non-volatile access: 95.9

XXX forward jumps: 0
XXX backward jumps: 3

XXX stmts: 73
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 31
   depth: 1, occurrence: 12
   depth: 2, occurrence: 6
   depth: 3, occurrence: 12
   depth: 4, occurrence: 5
   depth: 5, occurrence: 7

XXX percentage a fresh-made variable is used: 15.8
XXX percentage an existing variable is used: 84.2
FYI: the random generator makes assumptions about the integer size. See platform.info for more details.
********************* end of statistics **********************/

