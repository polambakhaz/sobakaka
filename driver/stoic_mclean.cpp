/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/stoic_mclean.cpp
 * Seed:      2436130586
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
struct S0 {
   int16_t  f0;
   volatile uint32_t  f1;
   volatile int16_t  f2;
   int64_t  f3;
   uint8_t  f4;
   uint32_t  f5;
};

union U1 {
   const uint32_t  f0;
   int8_t * const  volatile  f1;
   volatile int32_t  f2;
};

/* --- GLOBAL VARIABLES --- */
static int8_t g_8 = 0x9CL;
static int8_t *g_7 = &g_8;
static struct S0 * volatile g_71 = (void*)0;/* VOLATILE GLOBAL g_71 */
static struct S0 * volatile * volatile g_72 = (void*)0;/* VOLATILE GLOBAL g_72 */
static struct S0 * volatile * volatile g_73 = &g_71;/* VOLATILE GLOBAL g_73 */
static int32_t g_75 = 0L;
static volatile int32_t g_79[10] = {0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L,0xBFF020A7L};
static struct S0 g_80 = {0L,0xADDA102FL,-2L,-7L,1UL,1UL};/* VOLATILE GLOBAL g_80 */
static volatile struct S0 g_83 = {0L,7UL,0L,0L,255UL,18446744073709551606UL};/* VOLATILE GLOBAL g_83 */
static uint32_t g_98 = 4294967295UL;
static const struct S0 g_103 = {3L,0x81BC3742L,0L,-8L,1UL,0xF5884173L};/* VOLATILE GLOBAL g_103 */
static volatile int32_t *g_131 = &g_79[5];
static volatile int32_t **g_130 = &g_131;
static uint64_t g_140 = 18446744073709551615UL;
static struct S0 *g_147[3][7] = {{&g_80,&g_80,(void*)0,&g_80,&g_80,(void*)0,&g_80},{&g_80,&g_80,&g_80,&g_80,&g_80,&g_80,&g_80},{&g_80,&g_80,&g_80,&g_80,&g_80,&g_80,&g_80}};
static struct S0 * const *g_146 = &g_147[0][5];
static struct S0 * const g_163 = (void*)0;
static struct S0 * const *g_162 = &g_163;
static struct S0 * const **g_161 = &g_162;
static volatile union U1 g_168 = {0x48C3AE24L};/* VOLATILE GLOBAL g_168 */
static volatile struct S0 g_174 = {0xC393L,0xF6A6F7F2L,0L,0x7F61CDA13B45BE34LL,0xB2L,18446744073709551614UL};/* VOLATILE GLOBAL g_174 */
static volatile struct S0 g_175 = {0x1E28L,0xA9EEEF5EL,0xA40FL,6L,0x29L,0x1364F4DCL};/* VOLATILE GLOBAL g_175 */
static volatile struct S0 g_265 = {-1L,0x7FE593E9L,0x6C86L,0xDB74E478115E5B6BLL,255UL,18446744073709551609UL};/* VOLATILE GLOBAL g_265 */
static volatile struct S0 g_266 = {0x6C3AL,0xCFA0C2CFL,0x8280L,0x7D4098C68CCA9902LL,1UL,1UL};/* VOLATILE GLOBAL g_266 */
static int32_t *g_290[9][5] = {{&g_75,(void*)0,&g_75,&g_75,&g_75},{(void*)0,&g_75,&g_75,(void*)0,&g_75},{(void*)0,&g_75,&g_75,&g_75,(void*)0},{&g_75,&g_75,&g_75,&g_75,&g_75},{&g_75,&g_75,&g_75,(void*)0,(void*)0},{&g_75,(void*)0,&g_75,&g_75,(void*)0},{&g_75,&g_75,&g_75,&g_75,(void*)0},{&g_75,&g_75,&g_75,&g_75,&g_75},{(void*)0,(void*)0,&g_75,&g_75,(void*)0}};
static int32_t ** volatile g_289 = &g_290[8][0];/* VOLATILE GLOBAL g_289 */
static volatile uint16_t g_297 = 0x90D9L;/* VOLATILE GLOBAL g_297 */
static volatile uint16_t g_298 = 0x80ECL;/* VOLATILE GLOBAL g_298 */
static volatile uint16_t * const g_296[2][4] = {{&g_297,&g_297,&g_297,&g_297},{&g_297,&g_297,&g_297,&g_297}};
static volatile struct S0 g_301 = {-10L,0x8457E029L,-1L,0L,0UL,0x7D128479L};/* VOLATILE GLOBAL g_301 */
static const int32_t g_306 = 0x7925D843L;
static uint32_t g_309 = 7UL;
static struct S0 g_326 = {0x2EF0L,18446744073709551610UL,6L,0x4712262022A75278LL,0xB2L,3UL};/* VOLATILE GLOBAL g_326 */
static uint32_t *g_349 = &g_309;
static int32_t ** volatile g_363 = &g_290[8][0];/* VOLATILE GLOBAL g_363 */
static int32_t ** const  volatile g_364 = &g_290[8][0];/* VOLATILE GLOBAL g_364 */
static struct S0 ** const *** volatile g_382 = (void*)0;/* VOLATILE GLOBAL g_382 */
static struct S0 ** const g_386 = &g_147[1][4];
static struct S0 ** const *g_385 = &g_386;
static struct S0 ** const **g_384[8][4][5] = {{{&g_385,&g_385,&g_385,&g_385,&g_385},{(void*)0,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,(void*)0}},{{&g_385,&g_385,&g_385,&g_385,(void*)0},{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,(void*)0,(void*)0,&g_385},{(void*)0,(void*)0,&g_385,&g_385,(void*)0}},{{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,(void*)0,&g_385,&g_385,&g_385},{&g_385,(void*)0,&g_385,&g_385,(void*)0},{(void*)0,&g_385,&g_385,&g_385,&g_385}},{{&g_385,&g_385,&g_385,(void*)0,&g_385},{&g_385,(void*)0,(void*)0,&g_385,&g_385},{&g_385,(void*)0,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,(void*)0}},{{(void*)0,(void*)0,&g_385,(void*)0,(void*)0},{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385},{(void*)0,&g_385,&g_385,(void*)0,&g_385}},{{&g_385,&g_385,&g_385,&g_385,&g_385},{(void*)0,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385}},{{&g_385,(void*)0,&g_385,&g_385,&g_385},{&g_385,&g_385,(void*)0,&g_385,(void*)0},{&g_385,&g_385,&g_385,&g_385,&g_385},{(void*)0,&g_385,&g_385,&g_385,&g_385}},{{&g_385,&g_385,&g_385,&g_385,(void*)0},{(void*)0,(void*)0,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385},{&g_385,&g_385,&g_385,&g_385,&g_385}}};
static struct S0 ** const *** volatile g_383 = &g_384[5][1][3];/* VOLATILE GLOBAL g_383 */
static int32_t g_418 = (-6L);
static int32_t g_420 = 0xD6D30267L;
static volatile struct S0 g_421 = {0x339CL,0xA72799BAL,0xC6B7L,3L,0xF0L,9UL};/* VOLATILE GLOBAL g_421 */
static uint32_t **g_449 = &g_349;
static struct S0 g_475 = {0x75FCL,0x65B87061L,1L,0x85C509DD0A896501LL,0x42L,0x7D724462L};/* VOLATILE GLOBAL g_475 */
static struct S0 g_476 = {0xE075L,0x6DB002E7L,0L,0x1D2B2E1A27CB476DLL,255UL,3UL};/* VOLATILE GLOBAL g_476 */
static uint8_t g_487 = 0x44L;
static volatile struct S0 g_509 = {6L,18446744073709551613UL,0x9A65L,0L,0UL,0UL};/* VOLATILE GLOBAL g_509 */
static int8_t g_515[5] = {0xA7L,0xA7L,0xA7L,0xA7L,0xA7L};
static uint16_t g_526 = 0x53BBL;
static volatile union U1 g_570 = {1UL};/* VOLATILE GLOBAL g_570 */
static int16_t g_572 = 0L;
static union U1 g_582 = {0x24A6B367L};/* VOLATILE GLOBAL g_582 */
static union U1 *g_581 = &g_582;
static union U1 ** volatile g_583[7] = {&g_581,&g_581,&g_581,&g_581,&g_581,&g_581,&g_581};
static union U1 g_586[4] = {{0x2D91C7A3L},{0x2D91C7A3L},{0x2D91C7A3L},{0x2D91C7A3L}};
static struct S0 g_594 = {0xECDBL,18446744073709551609UL,-1L,0L,0x15L,0xFEF289B7L};/* VOLATILE GLOBAL g_594 */
static struct S0 g_595 = {0x407CL,0x9110119EL,-1L,0x50412FDF759245EBLL,251UL,0xFBD29092L};/* VOLATILE GLOBAL g_595 */
static uint8_t g_635 = 0x58L;
static uint16_t g_637[1][9] = {{0xC6C2L,1UL,1UL,0xC6C2L,1UL,1UL,0xC6C2L,1UL,1UL}};
static uint16_t *g_662 = &g_637[0][7];
static union U1 g_705 = {18446744073709551615UL};/* VOLATILE GLOBAL g_705 */
static int32_t ** volatile g_720 = &g_290[1][3];/* VOLATILE GLOBAL g_720 */
static volatile uint64_t g_722 = 0x1A7EDAB82A9BBF05LL;/* VOLATILE GLOBAL g_722 */
static union U1 g_723 = {18446744073709551608UL};/* VOLATILE GLOBAL g_723 */
static struct S0 g_746 = {6L,0x04B53317L,-1L,-3L,0x24L,18446744073709551606UL};/* VOLATILE GLOBAL g_746 */
static struct S0 g_747[8][3][10] = {{{{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL}},{{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL},{0x2B0FL,1UL,5L,0x1C0C51A2E583C838LL,255UL,0UL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{1L,0xF28BD1A8L,7L,-1L,253UL,0x0117A2FBL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL}},{{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{0xFDB0L,0x3563230AL,0x6D45L,3L,0xB4L,0x597C8B56L},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{0x3203L,3UL,0L,-4L,0xBEL,0x8B9751EBL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL}}},{{{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{2L,18446744073709551610UL,0xB6DAL,0x8C1C71F9CC7A0A83LL,8UL,18446744073709551615UL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{2L,18446744073709551610UL,0xB6DAL,0x8C1C71F9CC7A0A83LL,8UL,18446744073709551615UL},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL},{0x2B0FL,1UL,5L,0x1C0C51A2E583C838LL,255UL,0UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L}},{{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL},{0xFDB0L,0x3563230AL,0x6D45L,3L,0xB4L,0x597C8B56L},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{7L,7UL,0L,1L,1UL,1UL},{-10L,9UL,0xE4E5L,8L,0UL,8UL},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL}},{{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0x2B0FL,1UL,5L,0x1C0C51A2E583C838LL,255UL,0UL},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL}}},{{{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{0x713CL,0x23584897L,0xE5F8L,1L,8UL,18446744073709551615UL},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL}},{{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{-8L,0UL,0x25B8L,0xFF983B3CFA689672LL,254UL,18446744073709551615UL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{0x713CL,0x23584897L,0xE5F8L,1L,8UL,18446744073709551615UL},{0x4950L,18446744073709551615UL,8L,0x774651F9CBA77EA6LL,0x20L,0x95EFF861L},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L}},{{0xE265L,0UL,0x41F8L,-4L,255UL,18446744073709551615UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{7L,7UL,0L,1L,1UL,1UL},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{7L,7UL,0L,1L,1UL,1UL},{0x3028L,0xAA7B6D3BL,0x3FEFL,9L,0x1BL,0x7AF7CEF3L},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{0xE265L,0UL,0x41F8L,-4L,255UL,18446744073709551615UL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL}}},{{{-1L,18446744073709551608UL,0xC7A5L,1L,0x93L,0x6C7773AEL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{0x2B0FL,1UL,5L,0x1C0C51A2E583C838LL,255UL,0UL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{0xAB86L,0xA33116A0L,0x5B4BL,1L,0x40L,0x6085072CL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{7L,7UL,0L,1L,1UL,1UL},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL}},{{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{0x3203L,3UL,0L,-4L,0xBEL,0x8B9751EBL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{0xE265L,0UL,0x41F8L,-4L,255UL,18446744073709551615UL},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL},{0xE265L,0UL,0x41F8L,-4L,255UL,18446744073709551615UL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL}},{{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{7L,7UL,0L,1L,1UL,1UL},{2L,18446744073709551610UL,0xB6DAL,0x8C1C71F9CC7A0A83LL,8UL,18446744073709551615UL},{7L,7UL,0L,1L,1UL,1UL},{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{-1L,18446744073709551608UL,0xC7A5L,1L,0x93L,0x6C7773AEL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{0x4950L,18446744073709551615UL,8L,0x774651F9CBA77EA6LL,0x20L,0x95EFF861L},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL}}},{{{0x210DL,1UL,0x012EL,0x3E9D651A1CA26CB9LL,0x2DL,0xC323593EL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{0xFDB0L,0x3563230AL,0x6D45L,3L,0xB4L,0x597C8B56L},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{-1L,1UL,0xBA57L,-1L,0x3FL,0x8B594C23L},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL}},{{-1L,0xFF0A7311L,-5L,1L,255UL,0xB65781A9L},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL}},{{0xFDB0L,0x3563230AL,0x6D45L,3L,0xB4L,0x597C8B56L},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL},{0x3203L,3UL,0L,-4L,0xBEL,0x8B9751EBL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0x210DL,1UL,0x012EL,0x3E9D651A1CA26CB9LL,0x2DL,0xC323593EL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{-10L,9UL,0xE4E5L,8L,0UL,8UL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL}}},{{{0x4950L,18446744073709551615UL,8L,0x774651F9CBA77EA6LL,0x20L,0x95EFF861L},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{5L,0x2779B8BDL,0xB1A0L,0x4EDFC30F80F0DC53LL,0x01L,1UL},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL},{0xAB86L,0xA33116A0L,0x5B4BL,1L,0x40L,0x6085072CL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{-1L,0xFF0A7311L,-5L,1L,255UL,0xB65781A9L},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{2L,18446744073709551610UL,0xB6DAL,0x8C1C71F9CC7A0A83LL,8UL,18446744073709551615UL},{7L,7UL,0L,1L,1UL,1UL}},{{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{7L,7UL,0L,1L,1UL,1UL},{0L,0xA9CBBBDCL,0xA110L,6L,250UL,0xEFFAE7BDL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL}},{{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{-1L,18446744073709551608UL,0xC7A5L,1L,0x93L,0x6C7773AEL},{0x0A3DL,0x21C26FB5L,8L,1L,0xF3L,0xA52C755AL},{0x4950L,18446744073709551615UL,8L,0x774651F9CBA77EA6LL,0x20L,0x95EFF861L},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL},{4L,18446744073709551615UL,0x242DL,0x026F36FF1C069759LL,0xCDL,18446744073709551608UL},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{0x888EL,18446744073709551615UL,0x815CL,0xD68A4E4C1CAF8793LL,255UL,18446744073709551615UL},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL}}},{{{-10L,9UL,0xE4E5L,8L,0UL,8UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL},{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0x844DL,0x01F9612AL,0x99A7L,-6L,0xA2L,0xF0315C8AL}},{{-8L,0UL,0x25B8L,0xFF983B3CFA689672LL,254UL,18446744073709551615UL},{0x4E20L,0x5AD5D2F5L,1L,6L,0x22L,0xF023BD3BL},{-8L,0UL,0x25B8L,0xFF983B3CFA689672LL,254UL,18446744073709551615UL},{-1L,0xC0208C9EL,0xE0AEL,7L,0UL,0xBDC39AB6L},{0xAB86L,0xA33116A0L,0x5B4BL,1L,0x40L,0x6085072CL},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{0xBD4CL,0x119DB7A8L,0L,0x058022D4C6CE8240LL,0xBEL,0xF6C57FA5L},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL},{-1L,0xFF0A7311L,-5L,1L,255UL,0xB65781A9L},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL}},{{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0xC474L,0UL,0xE17DL,0x88AC0F73177397DALL,0UL,18446744073709551613UL},{0xFDB0L,0x3563230AL,0x6D45L,3L,0xB4L,0x597C8B56L},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{0xBB74L,0xB1842B6BL,0xBE53L,1L,0x55L,0xC9AA9962L},{7L,7UL,0L,1L,1UL,1UL},{-10L,9UL,0xE4E5L,8L,0UL,8UL},{0xF8CCL,0x6E70F3E9L,4L,1L,0UL,18446744073709551615UL},{-3L,0x766B1385L,0xB759L,0xF21640EC0B07522ELL,1UL,0xEEA99816L},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL}}},{{{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL},{-8L,0UL,0x25B8L,0xFF983B3CFA689672LL,254UL,18446744073709551615UL},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{-1L,0xFF0A7311L,-5L,1L,255UL,0xB65781A9L},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{-8L,0UL,0x25B8L,0xFF983B3CFA689672LL,254UL,18446744073709551615UL},{0x2D90L,18446744073709551613UL,-8L,1L,0x99L,0x5D96557BL},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{7L,7UL,0L,1L,1UL,1UL}},{{0x210DL,1UL,0x012EL,0x3E9D651A1CA26CB9LL,0x2DL,0xC323593EL},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{-10L,0UL,-5L,0xE6B1A0876B638403LL,8UL,0xB3390232L},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{0xE265L,0UL,0x41F8L,-4L,255UL,18446744073709551615UL},{7L,7UL,0L,1L,1UL,1UL},{-1L,0x91879543L,0xFB5BL,0xB2B675ECED30958DLL,0xD0L,8UL},{0x8938L,0x26B9C072L,1L,-6L,4UL,0xCE91430CL},{-10L,9UL,0xE4E5L,8L,0UL,8UL},{0x713CL,0x23584897L,0xE5F8L,1L,8UL,18446744073709551615UL}},{{0xAB86L,0xA33116A0L,0x5B4BL,1L,0x40L,0x6085072CL},{7L,7UL,0L,1L,1UL,1UL},{-1L,18446744073709551608UL,0xC7A5L,1L,0x93L,0x6C7773AEL},{8L,0x96AA73F4L,0xD656L,0x6B5F009C2B9A66D0LL,0x85L,1UL},{2L,18446744073709551610UL,0xB6DAL,0x8C1C71F9CC7A0A83LL,8UL,18446744073709551615UL},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{-1L,18446744073709551612UL,2L,-5L,255UL,0x3D4B6C4AL},{-4L,18446744073709551612UL,0x8FE1L,0x85E1B21C6ECB1692LL,253UL,7UL},{0x627BL,7UL,-9L,0x2FA41210D826A97ELL,8UL,0x108FEFE5L}}}};
static const union U1 *g_782[2][2][5] = {{{&g_586[0],&g_582,&g_723,&g_586[0],&g_723},{&g_586[0],&g_586[0],&g_586[0],(void*)0,&g_586[2]}},{{&g_582,&g_586[2],&g_723,&g_723,&g_586[2]},{&g_586[2],&g_582,&g_582,&g_586[2],&g_723}}};
static const union U1 * volatile * volatile g_781 = &g_782[0][1][4];/* VOLATILE GLOBAL g_781 */
static const union U1 * volatile * volatile *g_780[8] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
static const union U1 * volatile * volatile **g_779 = &g_780[2];
static int32_t g_787[1] = {0x78336C8DL};
static const struct S0 g_812 = {-9L,18446744073709551615UL,0xC2F2L,0x456BE99E1631BBDCLL,0xBCL,0UL};/* VOLATILE GLOBAL g_812 */
static struct S0 g_813[1][5][4] = {{{{-6L,0x3907488EL,0x4C85L,0xDEF52EB9C81A88C7LL,4UL,1UL},{-1L,1UL,0xCB58L,0xC739F09F755D8778LL,246UL,0UL},{0L,18446744073709551615UL,0xC935L,0x9900512E3C760B7DLL,255UL,0UL},{-1L,1UL,0xCB58L,0xC739F09F755D8778LL,246UL,0UL}},{{-1L,1UL,0xCB58L,0xC739F09F755D8778LL,246UL,0UL},{-1L,18446744073709551611UL,-1L,0x77F13D14CF771D88LL,0x3FL,18446744073709551615UL},{-1L,3UL,0L,0xDBFF3E13BF429F74LL,0x72L,0x49A6B404L},{-1L,1UL,0xCB58L,0xC739F09F755D8778LL,246UL,0UL}},{{-1L,3UL,0L,0xDBFF3E13BF429F74LL,0x72L,0x49A6B404L},{-1L,1UL,0xCB58L,0xC739F09F755D8778LL,246UL,0UL},{0x36DDL,0x236994C9L,5L,3L,247UL,0xC61E00BAL},{0x36DDL,0x236994C9L,5L,3L,247UL,0xC61E00BAL}},{{0xCDC7L,1UL,0xAC18L,-1L,0xD6L,6UL},{0xCDC7L,1UL,0xAC18L,-1L,0xD6L,6UL},{0L,18446744073709551615UL,0xC935L,0x9900512E3C760B7DLL,255UL,0UL},{-6L,0x3907488EL,0x4C85L,0xDEF52EB9C81A88C7LL,4UL,1UL}},{{0xCDC7L,1UL,0xAC18L,-1L,0xD6L,6UL},{-1L,18446744073709551611UL,-1L,0x77F13D14CF771D88LL,0x3FL,18446744073709551615UL},{0x36DDL,0x236994C9L,5L,3L,247UL,0xC61E00BAL},{0xCDC7L,1UL,0xAC18L,-1L,0xD6L,6UL}}}};
static volatile struct S0 g_815 = {0x32F6L,0x5116FA75L,0L,1L,252UL,18446744073709551614UL};/* VOLATILE GLOBAL g_815 */
static volatile struct S0 g_816 = {0x6C07L,1UL,-1L,0x4DAE2AD478F0F218LL,0xDAL,0x6904F968L};/* VOLATILE GLOBAL g_816 */
static volatile int16_t *g_829[2][1][6] = {{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}}};
static volatile int16_t **g_828[3] = {&g_829[1][0][1],&g_829[1][0][1],&g_829[1][0][1]};
static volatile int32_t g_873 = 0L;/* VOLATILE GLOBAL g_873 */
static volatile int64_t *g_874 = &g_509.f3;
static const uint8_t **g_897 = (void*)0;
static int8_t g_916 = 0L;
static struct S0 g_968 = {-1L,0xFD684D95L,1L,0xD56DF2FC6A3884A1LL,0x69L,0UL};/* VOLATILE GLOBAL g_968 */
static struct S0 g_969 = {0x9939L,0xC93A47FBL,8L,1L,0x64L,0UL};/* VOLATILE GLOBAL g_969 */
static volatile struct S0 g_970 = {0x9FF4L,18446744073709551615UL,0x98EFL,0x8D516A7DAAD5AAACLL,0xB9L,0xAE69299CL};/* VOLATILE GLOBAL g_970 */
static volatile struct S0 g_973[2][10][6] = {{{{0x5250L,0x0F2DA340L,-1L,0x2D56E4034A7CFACELL,0x9DL,0UL},{0x2D74L,18446744073709551607UL,0xA476L,0x05848489C54AEFF6LL,0x91L,1UL},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L},{0x2D74L,18446744073709551607UL,0xA476L,0x05848489C54AEFF6LL,0x91L,1UL},{0x5250L,0x0F2DA340L,-1L,0x2D56E4034A7CFACELL,0x9DL,0UL}},{{1L,18446744073709551614UL,0x8CAAL,0xFF453D05B390FAF7LL,3UL,18446744073709551615UL},{0x6B7EL,3UL,0x9501L,4L,0x4CL,0UL},{0x0E37L,0xB56013F5L,0x9A22L,0x6E1CE066A3451435LL,0x80L,18446744073709551610UL},{-5L,0x7142BBB0L,0x3E9AL,0x376A6025E855B46CLL,0xCFL,18446744073709551614UL},{6L,18446744073709551608UL,0x04A0L,2L,0xFAL,0x983E5E75L},{0L,0xF5C62256L,1L,0x122ECBF792E29C91LL,1UL,18446744073709551606UL}},{{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{0xFE30L,7UL,1L,0x80DAF05F0AFADAB5LL,6UL,1UL},{-1L,0xF983E9CDL,-1L,0x2BD46E29E378568CLL,253UL,18446744073709551615UL},{0x5250L,0x0F2DA340L,-1L,0x2D56E4034A7CFACELL,0x9DL,0UL},{0x62ADL,0xD8201A24L,0x3673L,0xA9BE9A3B4669B20FLL,1UL,0UL},{-1L,0xE612AEC9L,0x98DEL,1L,0xB1L,0xCD0BDE7EL}},{{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{0L,4UL,0L,1L,0xB5L,0xC668695BL},{0x5250L,0x0F2DA340L,-1L,0x2D56E4034A7CFACELL,0x9DL,0UL},{-5L,0x7142BBB0L,0x3E9AL,0x376A6025E855B46CLL,0xCFL,18446744073709551614UL},{0xFEB4L,18446744073709551615UL,8L,0x3C0004603AA67ED6LL,0x2EL,0xEE837E12L},{0x4E52L,0xF37A1730L,0x4C22L,0x87F30CAF118BC02CLL,3UL,18446744073709551615UL}},{{1L,18446744073709551614UL,0x8CAAL,0xFF453D05B390FAF7LL,3UL,18446744073709551615UL},{6L,18446744073709551608UL,0x04A0L,2L,0xFAL,0x983E5E75L},{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L},{0xF2CEL,1UL,0x11D6L,5L,0xA6L,0x655E1C4EL},{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL}},{{0x5250L,0x0F2DA340L,-1L,0x2D56E4034A7CFACELL,0x9DL,0UL},{6L,18446744073709551608UL,0x04A0L,2L,0xFAL,0x983E5E75L},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{1L,18446744073709551614UL,0x8CAAL,0xFF453D05B390FAF7LL,3UL,18446744073709551615UL},{0xFEB4L,18446744073709551615UL,8L,0x3C0004603AA67ED6LL,0x2EL,0xEE837E12L},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L}},{{-1L,0xE612AEC9L,0x98DEL,1L,0xB1L,0xCD0BDE7EL},{0L,4UL,0L,1L,0xB5L,0xC668695BL},{-5L,0x7142BBB0L,0x3E9AL,0x376A6025E855B46CLL,0xCFL,18446744073709551614UL},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{0x62ADL,0xD8201A24L,0x3673L,0xA9BE9A3B4669B20FLL,1UL,0UL},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL}},{{-5L,0x7142BBB0L,0x3E9AL,0x376A6025E855B46CLL,0xCFL,18446744073709551614UL},{0xFE30L,7UL,1L,0x80DAF05F0AFADAB5LL,6UL,1UL},{-5L,0x7142BBB0L,0x3E9AL,0x376A6025E855B46CLL,0xCFL,18446744073709551614UL},{0L,0xC4BF5D08L,1L,0xAEA45FA3B6CC05D7LL,248UL,0xE1B706E2L},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{1L,2UL,0xD614L,0L,0x88L,0xEE497824L}},{{6L,0UL,0xDC01L,0x44062C3598CFE4B6LL,0UL,0x712D269DL},{0L,0xF5C62256L,1L,0x122ECBF792E29C91LL,1UL,18446744073709551606UL},{0x83CAL,0x954E535CL,0x9C96L,-1L,1UL,18446744073709551612UL},{-4L,0xF08A0D17L,0x44FFL,-6L,0xE4L,0xD1FCA77AL},{-6L,0x30FC23A6L,-8L,-4L,0x6EL,0x2D6C45D4L},{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL}},{{-4L,0xF08A0D17L,0x44FFL,-6L,0xE4L,0xD1FCA77AL},{-6L,0x30FC23A6L,-8L,-4L,0x6EL,0x2D6C45D4L},{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL},{-4L,0xF08A0D17L,0x44FFL,-6L,0xE4L,0xD1FCA77AL},{-1L,0xE612AEC9L,0x98DEL,1L,0xB1L,0xCD0BDE7EL},{0L,0xC4BF5D08L,1L,0xAEA45FA3B6CC05D7LL,248UL,0xE1B706E2L}}},{{{6L,0UL,0xDC01L,0x44062C3598CFE4B6LL,0UL,0x712D269DL},{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL},{0L,0xC4BF5D08L,1L,0xAEA45FA3B6CC05D7LL,248UL,0xE1B706E2L},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L},{0xD55DL,0xDA8C9E28L,-1L,0x1781714889009AA0LL,0x7BL,18446744073709551615UL}},{{0xF061L,0x6869C21CL,8L,0x978474BE5D6FCB38LL,0x2FL,0x1CC6725CL},{-1L,0xE612AEC9L,0x98DEL,1L,0xB1L,0xCD0BDE7EL},{5L,18446744073709551615UL,-1L,-4L,1UL,1UL},{0x83CAL,0x954E535CL,0x9C96L,-1L,1UL,18446744073709551612UL},{1L,0x1CDB5CEFL,0x3B69L,1L,247UL,0xB71A0D57L},{-7L,18446744073709551606UL,0L,6L,255UL,0UL}},{{0xD55DL,0xDA8C9E28L,-1L,0x1781714889009AA0LL,0x7BL,18446744073709551615UL},{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{-2L,18446744073709551615UL,0L,0L,0x72L,6UL},{-1L,0UL,1L,0x7CB908EB766810CFLL,0UL,0x4D81F8F3L},{-1L,0xE612AEC9L,0x98DEL,1L,0xB1L,0xCD0BDE7EL},{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL}},{{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL},{-6L,0x30FC23A6L,-8L,-4L,0x6EL,0x2D6C45D4L},{1L,2UL,0xD614L,0L,0x88L,0xEE497824L},{1L,2UL,0xD614L,0L,0x88L,0xEE497824L},{-6L,0x30FC23A6L,-8L,-4L,0x6EL,0x2D6C45D4L},{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL}},{{-1L,0UL,1L,0x7CB908EB766810CFLL,0UL,0x4D81F8F3L},{0L,0xF5C62256L,1L,0x122ECBF792E29C91LL,1UL,18446744073709551606UL},{-2L,18446744073709551615UL,0L,0L,0x72L,6UL},{0xF061L,0x6869C21CL,8L,0x978474BE5D6FCB38LL,0x2FL,0x1CC6725CL},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{-7L,18446744073709551606UL,0L,6L,255UL,0UL}},{{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL},{1L,18446744073709551614UL,0x8CAAL,0xFF453D05B390FAF7LL,3UL,18446744073709551615UL},{5L,18446744073709551615UL,-1L,-4L,1UL,1UL},{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL},{0x300DL,0x334F3314L,-10L,9L,1UL,0xAF948F89L},{0xD55DL,0xDA8C9E28L,-1L,0x1781714889009AA0LL,0x7BL,18446744073709551615UL}},{{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL},{0x0E37L,0xB56013F5L,0x9A22L,0x6E1CE066A3451435LL,0x80L,18446744073709551610UL},{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL},{0xF061L,0x6869C21CL,8L,0x978474BE5D6FCB38LL,0x2FL,0x1CC6725CL},{-1L,0xF983E9CDL,-1L,0x2BD46E29E378568CLL,253UL,18446744073709551615UL},{0L,0xC4BF5D08L,1L,0xAEA45FA3B6CC05D7LL,248UL,0xE1B706E2L}},{{-1L,0UL,1L,0x7CB908EB766810CFLL,0UL,0x4D81F8F3L},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL},{1L,2UL,0xD614L,0L,0x88L,0xEE497824L},{0x55E8L,18446744073709551610UL,1L,0x05901D88051759A9LL,0x9DL,2UL},{-1L,0x72E95F95L,0xEA4BL,0x6B0F1E7F0E2FCFBFLL,0x57L,0x8B89AFDAL}},{{0xFB19L,18446744073709551610UL,0xB5A2L,-1L,0xE2L,18446744073709551610UL},{0xD4F6L,0x09CE6D8FL,1L,1L,0x6FL,18446744073709551607UL},{0x83CAL,0x954E535CL,0x9C96L,-1L,1UL,18446744073709551612UL},{-1L,0UL,1L,0x7CB908EB766810CFLL,0UL,0x4D81F8F3L},{-1L,0xF983E9CDL,-1L,0x2BD46E29E378568CLL,253UL,18446744073709551615UL},{1L,2UL,0xD614L,0L,0x88L,0xEE497824L}},{{0xD55DL,0xDA8C9E28L,-1L,0x1781714889009AA0LL,0x7BL,18446744073709551615UL},{0x0E37L,0xB56013F5L,0x9A22L,0x6E1CE066A3451435LL,0x80L,18446744073709551610UL},{0xF061L,0x6869C21CL,8L,0x978474BE5D6FCB38LL,0x2FL,0x1CC6725CL},{0x83CAL,0x954E535CL,0x9C96L,-1L,1UL,18446744073709551612UL},{0x300DL,0x334F3314L,-10L,9L,1UL,0xAF948F89L},{0x83CAL,0x954E535CL,0x9C96L,-1L,1UL,18446744073709551612UL}}}};
static volatile struct S0 g_974 = {0x3C44L,0UL,5L,7L,0UL,0x7B686CAFL};/* VOLATILE GLOBAL g_974 */
static uint8_t g_992 = 0xAAL;
static uint8_t **g_993 = (void*)0;
static int32_t ** volatile g_997 = &g_290[8][0];/* VOLATILE GLOBAL g_997 */
static volatile struct S0 g_1003 = {-1L,0x824B3BBEL,-3L,0xAB3DD3CCC7FA0F76LL,255UL,0UL};/* VOLATILE GLOBAL g_1003 */
static volatile struct S0 g_1004 = {-4L,8UL,0xCB68L,0x03D087017BEAD55ALL,0UL,0x2088B520L};/* VOLATILE GLOBAL g_1004 */
static const int32_t *g_1007 = &g_420;
static const int32_t ** volatile g_1006 = &g_1007;/* VOLATILE GLOBAL g_1006 */
static uint8_t ***g_1017 = (void*)0;
static struct S0 g_1040 = {0xEA34L,0xF4A27AF0L,0x186AL,0x338D4161972CBBCCLL,255UL,4UL};/* VOLATILE GLOBAL g_1040 */
static struct S0 g_1069 = {0L,0xFB4C1078L,0x805FL,-9L,0xB6L,6UL};/* VOLATILE GLOBAL g_1069 */
static int32_t ** volatile g_1078 = &g_290[1][2];/* VOLATILE GLOBAL g_1078 */
static struct S0 g_1079 = {6L,4UL,0xDCBDL,0x182F65684B24AC47LL,0x3FL,18446744073709551607UL};/* VOLATILE GLOBAL g_1079 */
static volatile struct S0 g_1096 = {-4L,1UL,0x57ADL,0L,0xC3L,4UL};/* VOLATILE GLOBAL g_1096 */
static uint8_t g_1100 = 0xECL;
static struct S0 g_1101 = {0L,1UL,0xC840L,0L,0x2CL,0xAB21C6D5L};/* VOLATILE GLOBAL g_1101 */
static struct S0 g_1102[9][5][4] = {{{{-6L,0UL,0x866BL,0x3518F6D93297EE19LL,0x2AL,3UL},{-1L,0x1F4CF666L,0x53B4L,0x2808A7B7313890DCLL,0UL,0x71206B56L},{0x9C71L,0x7994AAD4L,0xE2E5L,0xDE8DBD94DD7C1209LL,0xC1L,0x358F83BBL},{0xECC5L,0x5BD8DC6FL,0x3A0CL,0xD1AB2080AB7C7C0BLL,0xF1L,0xB257F82FL}},{{0L,18446744073709551615UL,5L,0x86E7A050D755B4B8LL,250UL,18446744073709551615UL},{2L,0xECF48948L,5L,0x9A3B7D06DD8958F1LL,249UL,1UL},{0xCBB1L,0UL,8L,7L,9UL,1UL},{0xCBB1L,0UL,8L,7L,9UL,1UL}},{{0x4F8CL,18446744073709551606UL,0x01DAL,1L,0x35L,0xF3B82B9DL},{0x4F8CL,18446744073709551606UL,0x01DAL,1L,0x35L,0xF3B82B9DL},{-1L,0x1E8F3411L,-4L,0xDAE64C3F0AF1763FLL,254UL,0xF0E243CBL},{-1L,0UL,0L,-1L,9UL,0xEBD52189L}},{{2L,0xDEA90276L,0xBF0DL,0xB00FF4F1C3DD6EC3LL,255UL,0UL},{0xECC5L,0x5BD8DC6FL,0x3A0CL,0xD1AB2080AB7C7C0BLL,0xF1L,0xB257F82FL},{0x720DL,0x2FA5008AL,-6L,0L,8UL,8UL},{0xFAC4L,18446744073709551615UL,0x9030L,9L,254UL,0UL}},{{0L,0x9ADA211AL,0xACA8L,-4L,255UL,1UL},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL},{0x9828L,0x84B3CE0EL,-3L,0x483BBCD108F064F3LL,2UL,0x9C2EA63FL},{0x720DL,0x2FA5008AL,-6L,0L,8UL,8UL}}},{{{3L,0x03C686D1L,0x9786L,-10L,0x4CL,0x9936DA10L},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL},{-5L,0x0907A18DL,0xE046L,0L,0x0BL,0x7BBE27AAL},{0xFAC4L,18446744073709551615UL,0x9030L,9L,254UL,0UL}},{{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL},{0xECC5L,0x5BD8DC6FL,0x3A0CL,0xD1AB2080AB7C7C0BLL,0xF1L,0xB257F82FL},{-6L,0UL,0x866BL,0x3518F6D93297EE19LL,0x2AL,3UL},{-1L,0UL,0L,-1L,9UL,0xEBD52189L}},{{6L,0x25EEC830L,0x57FAL,0x2AD08545FDA61249LL,4UL,0x71400ED6L},{0x4F8CL,18446744073709551606UL,0x01DAL,1L,0x35L,0xF3B82B9DL},{-1L,0x9EA7D0B0L,0xDA09L,0L,0xE2L,0xF9CF7273L},{0xCBB1L,0UL,8L,7L,9UL,1UL}},{{0x3B44L,0x153F71F1L,0xDBAEL,0L,0x09L,1UL},{2L,0xECF48948L,5L,0x9A3B7D06DD8958F1LL,249UL,1UL},{3L,0x03C686D1L,0x9786L,-10L,0x4CL,0x9936DA10L},{0xECC5L,0x5BD8DC6FL,0x3A0CL,0xD1AB2080AB7C7C0BLL,0xF1L,0xB257F82FL}},{{1L,0x3EF3E776L,0x9CE1L,2L,0x83L,0xE73218DDL},{-1L,0x1F4CF666L,0x53B4L,0x2808A7B7313890DCLL,0UL,0x71206B56L},{0x49BFL,18446744073709551614UL,5L,1L,0x3DL,0x350F9CDBL},{0L,18446744073709551615UL,0x0D8CL,0x55AB72FE1CBFCFCALL,0xD5L,0xB7BACA93L}}},{{{0x1AA0L,0xC5017196L,0x9BC3L,2L,1UL,0x0196A564L},{0L,0x2A17C21BL,0xC63BL,0xFCEFC7CC59A74124LL,0x63L,18446744073709551615UL},{6L,0x1A0F473EL,0x4F9DL,1L,0xB7L,0x20D20E10L},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L}},{{-1L,0xF7B3409BL,1L,1L,1UL,18446744073709551615UL},{0xF759L,18446744073709551615UL,0x52D7L,0x8D27BD6D5C2F1D60LL,0UL,18446744073709551615UL},{0L,0x2A17C21BL,0xC63BL,0xFCEFC7CC59A74124LL,0x63L,18446744073709551615UL},{2L,0xDEA90276L,0xBF0DL,0xB00FF4F1C3DD6EC3LL,255UL,0UL}},{{6L,0x1A0F473EL,0x4F9DL,1L,0xB7L,0x20D20E10L},{0xA999L,2UL,0x74FDL,0xC42962312C82EC97LL,0xC4L,7UL},{0L,18446744073709551615UL,0x0D8CL,0x55AB72FE1CBFCFCALL,0xD5L,0xB7BACA93L},{1L,0x3EF3E776L,0x9CE1L,2L,0x83L,0xE73218DDL}},{{1L,0x1531C50CL,1L,0xBDDD90947BBEF529LL,0x8CL,0UL},{1L,18446744073709551611UL,0L,0x6CD3B6979A139F7BLL,0xA1L,0x43EFE275L},{-3L,18446744073709551615UL,-1L,0L,0x7DL,0x8120F87DL},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL}},{{1L,9UL,0xCDCAL,-2L,0UL,0x45E9D752L},{-1L,0x1E8F3411L,-4L,0xDAE64C3F0AF1763FLL,254UL,0xF0E243CBL},{0L,18446744073709551615UL,5L,0x86E7A050D755B4B8LL,250UL,18446744073709551615UL},{-1L,0x71918876L,0x86B7L,-3L,1UL,0x77A58683L}}},{{{-1L,0x51DC00C7L,-6L,0x4DC82DBB45860D07LL,5UL,18446744073709551606UL},{-2L,0x51AD1738L,0L,0x720B08B4C8E8C3C7LL,255UL,0x3BEFB4C9L},{1L,0x1531C50CL,1L,0xBDDD90947BBEF529LL,0x8CL,0UL},{0x3BE3L,2UL,0xAA17L,-1L,255UL,0xFA0B8C4DL}},{{1L,0xFE7956BEL,-1L,0xDD5E723F7AE5FEEDLL,3UL,6UL},{0xDA0DL,0x1E4007F6L,-7L,0x9D9586E1F75D6135LL,255UL,6UL},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L},{0x1CFAL,5UL,0xCECAL,0L,0xD8L,0x9EA8201BL}},{{0xDF62L,0x8D526F99L,0xE996L,1L,0xCDL,18446744073709551615UL},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L},{7L,18446744073709551611UL,-9L,7L,0UL,0x6AC26FC4L},{-6L,0UL,0x866BL,0x3518F6D93297EE19LL,0x2AL,3UL}},{{0x3BE3L,2UL,0xAA17L,-1L,255UL,0xFA0B8C4DL},{0xDF62L,0x8D526F99L,0xE996L,1L,0xCDL,18446744073709551615UL},{0x4F8CL,18446744073709551606UL,0x01DAL,1L,0x35L,0xF3B82B9DL},{0xDF62L,0x8D526F99L,0xE996L,1L,0xCDL,18446744073709551615UL}},{{0x1478L,0x3CF8471BL,-1L,-3L,5UL,0x7FD2B99DL},{0x3B44L,0x153F71F1L,0xDBAEL,0L,0x09L,1UL},{0x6CD7L,0x6BE396B1L,1L,0xB62FC97BDE948EFALL,0xACL,18446744073709551606UL},{2L,1UL,6L,0x11FF1836C8943275LL,1UL,18446744073709551611UL}}},{{{0L,0x2A17C21BL,0xC63BL,0xFCEFC7CC59A74124LL,0x63L,18446744073709551615UL},{0x70C7L,0xD66722E7L,-8L,0x9D305880F1AE8345LL,255UL,0xED4D303DL},{0xDA0DL,0x1E4007F6L,-7L,0x9D9586E1F75D6135LL,255UL,6UL},{0xBDE9L,0x7D9A2C76L,-1L,1L,7UL,0UL}},{{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{-1L,0xF7B3409BL,1L,1L,1UL,18446744073709551615UL},{3L,0xD8EEF3DBL,-8L,0x4C104495A0DE5C55LL,253UL,0x0390AA91L},{0x49BFL,18446744073709551614UL,5L,1L,0x3DL,0x350F9CDBL}},{{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{0x1F8FL,0x9F074910L,-1L,1L,0UL,0UL},{0xDA0DL,0x1E4007F6L,-7L,0x9D9586E1F75D6135LL,255UL,6UL},{0xF759L,18446744073709551615UL,0x52D7L,0x8D27BD6D5C2F1D60LL,0UL,18446744073709551615UL}},{{0L,0x2A17C21BL,0xC63BL,0xFCEFC7CC59A74124LL,0x63L,18446744073709551615UL},{0x49BFL,18446744073709551614UL,5L,1L,0x3DL,0x350F9CDBL},{0x6CD7L,0x6BE396B1L,1L,0xB62FC97BDE948EFALL,0xACL,18446744073709551606UL},{2L,0xECF48948L,5L,0x9A3B7D06DD8958F1LL,249UL,1UL}},{{0x1478L,0x3CF8471BL,-1L,-3L,5UL,0x7FD2B99DL},{-7L,0xE27E50F4L,-1L,-4L,0x77L,9UL},{0x4F8CL,18446744073709551606UL,0x01DAL,1L,0x35L,0xF3B82B9DL},{6L,0x1A0F473EL,0x4F9DL,1L,0xB7L,0x20D20E10L}}},{{{0x3BE3L,2UL,0xAA17L,-1L,255UL,0xFA0B8C4DL},{0x9828L,0x84B3CE0EL,-3L,0x483BBCD108F064F3LL,2UL,0x9C2EA63FL},{7L,18446744073709551611UL,-9L,7L,0UL,0x6AC26FC4L},{-4L,0xDCCBB6D4L,0x6A00L,0x6E83313601CEFF1FLL,1UL,18446744073709551606UL}},{{0xDF62L,0x8D526F99L,0xE996L,1L,0xCDL,18446744073709551615UL},{0x9A87L,0UL,0xAF19L,5L,5UL,0x0C58F626L},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L},{0x6CD7L,0x6BE396B1L,1L,0xB62FC97BDE948EFALL,0xACL,18446744073709551606UL}},{{1L,0xFE7956BEL,-1L,0xDD5E723F7AE5FEEDLL,3UL,6UL},{6L,0x25EEC830L,0x57FAL,0x2AD08545FDA61249LL,4UL,0x71400ED6L},{1L,0x1531C50CL,1L,0xBDDD90947BBEF529LL,0x8CL,0UL},{0L,18446744073709551615UL,5L,0x86E7A050D755B4B8LL,250UL,18446744073709551615UL}},{{-1L,0x51DC00C7L,-6L,0x4DC82DBB45860D07LL,5UL,18446744073709551606UL},{0L,18446744073709551615UL,0x8F4DL,0x03EC7877D0ABF06BLL,0xDBL,18446744073709551612UL},{0L,18446744073709551615UL,5L,0x86E7A050D755B4B8LL,250UL,18446744073709551615UL},{0x1AA0L,0xC5017196L,0x9BC3L,2L,1UL,0x0196A564L}},{{-3L,18446744073709551615UL,-1L,0L,0x7DL,0x8120F87DL},{0xBDE9L,0x7D9A2C76L,-1L,1L,7UL,0UL},{0x1F8FL,0x9F074910L,-1L,1L,0UL,0UL},{-5L,0x0907A18DL,0xE046L,0L,0x0BL,0x7BBE27AAL}}},{{{2L,1UL,6L,0x11FF1836C8943275LL,1UL,18446744073709551611UL},{1L,0x49160478L,1L,1L,251UL,0xB40E099AL},{0xF139L,1UL,0x06FFL,0xA0BC7938533A5D14LL,247UL,0x3556D505L},{0x9C71L,0x7994AAD4L,0xE2E5L,0xDE8DBD94DD7C1209LL,0xC1L,0x358F83BBL}},{{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{0x3B44L,0x153F71F1L,0xDBAEL,0L,0x09L,1UL},{0x49BFL,18446744073709551614UL,5L,1L,0x3DL,0x350F9CDBL},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L}},{{0xDF62L,0x8D526F99L,0xE996L,1L,0xCDL,18446744073709551615UL},{0x1CFAL,5UL,0xCECAL,0L,0xD8L,0x9EA8201BL},{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{2L,1UL,6L,0x11FF1836C8943275LL,1UL,18446744073709551611UL}},{{-1L,0x51DC00C7L,-6L,0x4DC82DBB45860D07LL,5UL,18446744073709551606UL},{-5L,0x0907A18DL,0xE046L,0L,0x0BL,0x7BBE27AAL},{6L,0x1A0F473EL,0x4F9DL,1L,0xB7L,0x20D20E10L},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL}},{{0x835DL,0xB2EC90E0L,4L,0x6C389CB5F7D267EFLL,0xA0L,18446744073709551611UL},{-2L,0x51AD1738L,0L,0x720B08B4C8E8C3C7LL,255UL,0x3BEFB4C9L},{0x3B44L,0x153F71F1L,0xDBAEL,0L,0x09L,1UL},{-1L,0x9EA7D0B0L,0xDA09L,0L,0xE2L,0xF9CF7273L}}},{{{0x720DL,0x2FA5008AL,-6L,0L,8UL,8UL},{0x9C71L,0x7994AAD4L,0xE2E5L,0xDE8DBD94DD7C1209LL,0xC1L,0x358F83BBL},{0x9C71L,0x7994AAD4L,0xE2E5L,0xDE8DBD94DD7C1209LL,0xC1L,0x358F83BBL},{0x720DL,0x2FA5008AL,-6L,0L,8UL,8UL}},{{0xDE74L,0x83F19350L,-3L,1L,255UL,0UL},{0x04C4L,1UL,0xA4AAL,0L,0xDBL,0UL},{0xDA0DL,0x1E4007F6L,-7L,0x9D9586E1F75D6135LL,255UL,6UL},{0xB1F9L,0x6D5A8E1CL,0x831EL,0x67A7EC7605B3AE9ELL,0xFEL,0xB6B9B7E3L}},{{0xC956L,0x66783352L,0x43F1L,0x52F633C99747BDE5LL,252UL,0x23504501L},{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{0xD300L,0UL,0x671AL,0x56EB3335887F8F93LL,255UL,0x6ABEF876L},{2L,0x2C286F10L,0x6E43L,0x4EBD5F67F30BDC76LL,255UL,18446744073709551615UL}},{{0x3B44L,0x153F71F1L,0xDBAEL,0L,0x09L,1UL},{0x835DL,0xB2EC90E0L,4L,0x6C389CB5F7D267EFLL,0xA0L,18446744073709551611UL},{0xCBB1L,0UL,8L,7L,9UL,1UL},{2L,0x2C286F10L,0x6E43L,0x4EBD5F67F30BDC76LL,255UL,18446744073709551615UL}},{{-2L,0x51AD1738L,0L,0x720B08B4C8E8C3C7LL,255UL,0x3BEFB4C9L},{0x0650L,0x32191F91L,0xBAA4L,-1L,0xBCL,18446744073709551610UL},{0L,0x2A17C21BL,0xC63BL,0xFCEFC7CC59A74124LL,0x63L,18446744073709551615UL},{0xB1F9L,0x6D5A8E1CL,0x831EL,0x67A7EC7605B3AE9ELL,0xFEL,0xB6B9B7E3L}}},{{{2L,0xECF48948L,5L,0x9A3B7D06DD8958F1LL,249UL,1UL},{0x04C4L,1UL,0xA4AAL,0L,0xDBL,0UL},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL},{0x720DL,0x2FA5008AL,-6L,0L,8UL,8UL}},{{1L,0x3EF3E776L,0x9CE1L,2L,0x83L,0xE73218DDL},{0x9C71L,0x7994AAD4L,0xE2E5L,0xDE8DBD94DD7C1209LL,0xC1L,0x358F83BBL},{0x70C7L,0xD66722E7L,-8L,0x9D305880F1AE8345LL,255UL,0xED4D303DL},{-1L,0x9EA7D0B0L,0xDA09L,0L,0xE2L,0xF9CF7273L}},{{-1L,0x1E8F3411L,-4L,0xDAE64C3F0AF1763FLL,254UL,0xF0E243CBL},{-2L,0x51AD1738L,0L,0x720B08B4C8E8C3C7LL,255UL,0x3BEFB4C9L},{7L,18446744073709551611UL,-9L,7L,0UL,0x6AC26FC4L},{0x0047L,2UL,7L,-1L,0xDDL,0x86894BEDL}},{{0xDA0DL,0x1E4007F6L,-7L,0x9D9586E1F75D6135LL,255UL,6UL},{-5L,0x0907A18DL,0xE046L,0L,0x0BL,0x7BBE27AAL},{0xA999L,2UL,0x74FDL,0xC42962312C82EC97LL,0xC4L,7UL},{2L,1UL,6L,0x11FF1836C8943275LL,1UL,18446744073709551611UL}},{{0xF759L,18446744073709551615UL,0x52D7L,0x8D27BD6D5C2F1D60LL,0UL,18446744073709551615UL},{0x1CFAL,5UL,0xCECAL,0L,0xD8L,0x9EA8201BL},{0x1478L,0x3CF8471BL,-1L,-3L,5UL,0x7FD2B99DL},{-6L,1UL,0x51A2L,0x29FF08DCEAAFDB80LL,0UL,0x4A91BC59L}}}};
static volatile struct S0 g_1139 = {0x4E1FL,0xC75EDFEDL,0xBAB0L,0xB03A2AFA6D5E346ELL,0x2BL,18446744073709551615UL};/* VOLATILE GLOBAL g_1139 */
static int16_t *g_1149 = &g_595.f0;
static int16_t **g_1148 = &g_1149;
static int16_t ***g_1147 = &g_1148;
static int8_t **g_1162 = &g_7;


/* --- FORWARD DECLARATIONS --- */
static uint8_t  func_1(void);
static int32_t  func_2(int8_t * p_3, int8_t * p_4, int8_t * p_5, int64_t  p_6);
static int8_t * func_9(int8_t * p_10, const uint8_t  p_11);
static int8_t * func_12(int16_t  p_13, int32_t  p_14, int16_t  p_15);
static uint16_t  func_21(uint32_t  p_22, int8_t * p_23, const int8_t * p_24);
static int8_t * func_27(uint64_t  p_28, int32_t  p_29, uint32_t  p_30, uint32_t  p_31);
static uint32_t  func_40(int32_t * p_41);
static const int8_t  func_46(int8_t * p_47, int32_t * p_48, const int8_t * p_49);
static int8_t * func_50(const uint64_t  p_51, int32_t  p_52, uint8_t  p_53, uint32_t  p_54, int8_t * p_55);
static int64_t  func_58(uint32_t  p_59);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint8_t  func_1(void)
{ /* block id: 0 */
    int8_t * const l_16 = &g_8;
    int32_t l_32 = 0L;
    const int8_t *l_784 = (void*)0;
    int32_t *l_786 = &g_787[0];
    int8_t *l_811 = &g_515[3];
    int8_t **l_810 = &l_811;
    int32_t l_943 = 0xC7DAEFEAL;
    struct S0 **l_956 = &g_147[2][4];
    struct S0 ***l_955 = &l_956;
    uint8_t * const *l_989 = (void*)0;
    int32_t l_1038 = 1L;
    struct S0 *l_1039 = &g_1040;
    int32_t l_1041[9][7][2] = {{{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L}},{{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)}},{{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L}},{{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L}},{{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)}},{{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L}},{{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L}},{{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)}},{{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L},{(-7L),0x3A3FF493L},{0x3A3FF493L,(-7L)},{0x3A3FF493L,0x3A3FF493L}}};
    uint16_t l_1043 = 0x1D2AL;
    int16_t l_1067 = 0xB2F2L;
    int32_t *l_1070 = &g_420;
    int32_t *l_1071 = &g_75;
    int32_t *l_1072 = (void*)0;
    int32_t *l_1073 = &l_943;
    int32_t *l_1074[5][7][7] = {{{(void*)0,&l_1038,&l_1041[7][3][1],&l_943,&g_418,&l_32,(void*)0},{&g_418,&l_1041[7][6][0],&l_1041[7][6][0],&l_32,&l_1041[7][6][0],&l_943,(void*)0},{&l_32,(void*)0,(void*)0,&l_943,&l_1041[1][3][1],&g_420,&l_32},{&l_1038,(void*)0,&l_943,&g_75,(void*)0,(void*)0,(void*)0},{(void*)0,&g_75,&l_943,&l_1038,&l_1041[7][6][0],(void*)0,&l_943},{&l_1041[7][6][0],&g_420,&g_420,&l_1041[7][6][0],&l_1038,&l_943,&l_943},{(void*)0,&l_1041[5][3][1],&g_75,(void*)0,&l_1041[5][3][1],&l_943,(void*)0}},{{&g_418,&l_1038,&l_1041[7][6][0],&l_32,&l_1041[7][6][0],(void*)0,&l_1038},{&l_1038,&g_75,&g_420,&l_1041[7][6][0],&g_75,(void*)0,&g_418},{&l_943,&g_418,&l_1038,&l_943,&l_943,&g_420,&g_420},{&l_1038,&l_1041[5][0][1],(void*)0,&l_1041[5][0][1],&l_1038,&l_943,(void*)0},{&g_75,&g_420,&l_943,&l_1041[7][6][0],&g_75,&l_32,&g_418},{&l_1038,&l_943,&l_32,&l_1041[1][3][1],(void*)0,&l_943,(void*)0},{&g_75,&l_1041[7][6][0],&l_943,&l_943,&l_1038,(void*)0,&l_1041[5][3][1]}},{{&l_1038,(void*)0,&g_420,&l_1038,&l_1038,&l_1038,(void*)0},{&l_943,&l_943,(void*)0,&l_1041[1][3][1],&g_418,&g_420,(void*)0},{&l_1038,&l_1041[7][6][0],(void*)0,(void*)0,&l_1041[5][3][1],&l_1041[7][6][0],&g_418},{&g_418,&g_75,&l_943,&l_1038,&l_1041[1][3][1],&g_75,&l_1038},{(void*)0,&l_943,&l_943,&l_943,&l_1038,&g_420,(void*)0},{&l_1041[7][6][0],&g_418,(void*)0,&l_943,(void*)0,&l_943,&l_943},{(void*)0,(void*)0,(void*)0,&l_1041[5][3][1],(void*)0,&l_943,(void*)0}},{{&l_1038,&l_1041[5][3][1],&g_420,(void*)0,&g_75,(void*)0,&g_420},{&l_32,&l_32,&l_943,&l_1041[7][6][0],&l_943,&l_1041[7][6][0],&l_943},{&g_418,(void*)0,&l_32,(void*)0,&l_1038,&l_1041[7][3][1],&l_1041[7][6][0]},{&l_1038,&l_32,&l_943,&g_75,&l_943,(void*)0,(void*)0},{&l_943,&l_943,(void*)0,&g_418,&g_75,(void*)0,&l_943},{&l_1041[7][6][0],&g_75,&l_1038,&l_943,(void*)0,(void*)0,&l_32},{&l_1038,&l_1041[7][6][0],&g_420,&l_943,&g_75,(void*)0,&l_32}},{{&g_75,&g_75,(void*)0,(void*)0,&g_420,&g_418,&g_420},{&g_420,&l_32,&g_418,&l_1038,(void*)0,&l_943,&g_420},{&g_75,(void*)0,&g_420,&g_418,&g_420,&l_1038,&l_32},{(void*)0,(void*)0,&g_418,&l_32,&g_75,&l_1041[7][6][0],&l_943},{(void*)0,&l_1041[7][6][0],&l_1041[7][3][0],&g_420,(void*)0,&g_75,&l_943},{&g_420,(void*)0,(void*)0,(void*)0,(void*)0,&g_420,(void*)0},{&l_1038,&g_75,(void*)0,&l_1041[7][3][1],(void*)0,&l_1041[7][6][0],(void*)0}}};
    uint8_t l_1075 = 0x42L;
    int16_t l_1088[6][5] = {{0x7712L,0x7712L,1L,1L,1L},{7L,7L,0x86EEL,(-5L),0x86EEL},{0x7712L,0x7712L,1L,1L,1L},{7L,7L,0x86EEL,(-5L),0x86EEL},{0x7712L,0x7712L,1L,1L,1L},{7L,7L,0x86EEL,(-5L),0x86EEL}};
    int32_t l_1089 = (-1L);
    uint8_t l_1124 = 0xA2L;
    int16_t l_1136 = 0x6035L;
    int8_t ***l_1144 = &l_810;
    int16_t ****l_1150 = &g_1147;
    union U1 **l_1159 = &g_581;
    union U1 ***l_1158 = &l_1159;
    union U1 ****l_1157 = &l_1158;
    int8_t **l_1161 = &g_7;
    int8_t ***l_1160 = &l_1161;
    uint16_t *l_1163 = &g_637[0][5];
    int32_t l_1164 = 0x35058607L;
    int i, j, k;
    return l_1164;
}


/* ------------------------------------------ */
/* 
 * reads : g_815 g_103.f3 g_828 g_289 g_746.f3 g_475.f5 g_80.f0 g_595.f5 g_8 g_873 g_874 g_131 g_326.f0 g_130 g_476.f0
 * writes: g_816 g_290 g_746.f3 g_475.f5 g_80.f0 g_595.f5 g_515 g_79 g_526 g_8 g_326.f0 g_476.f0
 */
static int32_t  func_2(int8_t * p_3, int8_t * p_4, int8_t * p_5, int64_t  p_6)
{ /* block id: 415 */
    uint32_t *l_818[6] = {&g_98,&g_98,&g_98,&g_98,&g_98,&g_98};
    int32_t l_819 = (-9L);
    const union U1 **l_831 = &g_782[0][1][4];
    const union U1 ***l_830 = &l_831;
    int32_t l_832 = (-8L);
    int8_t l_841 = 0x22L;
    uint32_t l_842 = 0UL;
    uint32_t l_896 = 0xCF56A068L;
    int32_t l_909[6][4] = {{(-1L),1L,(-1L),0xF7E2AA1BL},{0x80980A4AL,1L,0xE7D52B79L,0xF0131E80L},{0x94EE666FL,0x08027FC6L,1L,1L},{0x9B369F04L,0x9B369F04L,1L,(-1L)},{0x94EE666FL,(-1L),0xE7D52B79L,0x08027FC6L},{0x80980A4AL,0xE7D52B79L,(-1L),0xE7D52B79L}};
    uint32_t l_913[4][9][3] = {{{18446744073709551615UL,0x6F77CCD7L,0x6F77CCD7L},{18446744073709551607UL,0xAD988DBFL,0UL},{0x08F940C6L,0UL,0UL},{18446744073709551615UL,0x95952200L,0x8C7E41DDL},{1UL,0xD9FAD15BL,0x6B9AD09DL},{2UL,0x95952200L,8UL},{18446744073709551614UL,0UL,18446744073709551615UL},{0xAD988DBFL,0xAD988DBFL,0x95952200L},{0x6B9AD09DL,0x6F77CCD7L,18446744073709551606UL}},{{18446744073709551607UL,0x5EB17153L,0xC9706AC5L},{18446744073709551606UL,0x66172A3DL,18446744073709551614UL},{1UL,18446744073709551607UL,0xC9706AC5L},{0UL,1UL,18446744073709551606UL},{0x95952200L,0x17E76017L,0x95952200L},{0xF1B38EB1L,18446744073709551610UL,18446744073709551615UL},{0x3B87E11FL,9UL,8UL},{18446744073709551610UL,18446744073709551614UL,0x6B9AD09DL},{0x37E86606L,8UL,0x8C7E41DDL}},{{18446744073709551610UL,0xEF7993A5L,0UL},{0x3B87E11FL,0UL,0UL},{0xF1B38EB1L,0x6B9AD09DL,0x6F77CCD7L},{0x95952200L,0x37E86606L,0x0A47D552L},{0UL,0x08F940C6L,0xCDE914B3L},{1UL,0xD7F2ACA7L,0xAD988DBFL},{18446744073709551606UL,0x08F940C6L,0x66172A3DL},{18446744073709551607UL,0x37E86606L,0x95952200L},{1UL,1UL,0xF1B38EB1L}},{{1UL,0xAD988DBFL,0x3B87E11FL},{0UL,0UL,18446744073709551610UL},{0x3B87E11FL,18446744073709551615UL,0x37E86606L},{0x78E43784L,0UL,18446744073709551610UL},{0x8C7E41DDL,0xD7F2ACA7L,0x3B87E11FL},{0xF1B38EB1L,0x66172A3DL,0xF1B38EB1L},{0x5EB17153L,8UL,0x95952200L},{0x08F940C6L,0xD9FAD15BL,0UL},{8UL,0x37E86606L,1UL}}};
    int i, j, k;
    g_816 = g_815;
lbl_880:
    if (((((((+(l_819 = 1UL)) , (safe_mul_func_uint8_t_u_u(p_6, (0x7FL ^ (safe_sub_func_int32_t_s_s((safe_mod_func_uint16_t_u_u(65529UL, (safe_lshift_func_uint8_t_u_u(g_103.f3, l_819)))), (g_828[2] == ((l_830 == &l_831) , (void*)0)))))))) || p_6) & p_6) == l_832) && l_819))
    { /* block id: 418 */
        int32_t *l_833 = &l_819;
        int32_t l_834 = 0xA10DCE46L;
        int32_t *l_835 = &l_834;
        int32_t l_836 = 0L;
        int32_t *l_837 = &g_418;
        int32_t *l_838 = &g_420;
        int32_t *l_839 = &l_819;
        int32_t *l_840[4][1][6] = {{{&g_418,&l_834,&l_834,&g_418,(void*)0,&g_420}},{{&g_420,&l_834,(void*)0,&g_420,(void*)0,&l_834}},{{&l_819,&l_834,&g_420,&l_819,(void*)0,(void*)0}},{{&g_418,&l_834,&l_834,&g_418,(void*)0,&g_420}}};
        int i, j, k;
        l_842--;
        for (l_841 = 0; (l_841 <= 9); l_841 += 1)
        { /* block id: 422 */
            uint64_t l_849 = 0UL;
            (*g_289) = (void*)0;
            for (g_746.f3 = 0; (g_746.f3 <= 9); g_746.f3 += 1)
            { /* block id: 426 */
                volatile int32_t *l_845 = &g_79[5];
                int i;
                l_845 = &g_79[l_841];
            }
            for (g_475.f5 = 0; (g_475.f5 <= 9); g_475.f5 += 1)
            { /* block id: 431 */
                int32_t l_875 = 0xA92D4F55L;
                for (g_80.f0 = 0; (g_80.f0 >= 0); g_80.f0 -= 1)
                { /* block id: 434 */
                    uint32_t l_876 = 0x4F06D00CL;
                    for (g_595.f5 = 0; (g_595.f5 <= 9); g_595.f5 += 1)
                    { /* block id: 437 */
                        int32_t l_846 = 0x6659BC57L;
                        int64_t *l_857 = &g_475.f3;
                        int64_t **l_856 = &l_857;
                        uint16_t *l_871 = (void*)0;
                        uint16_t *l_872 = &g_526;
                        int i;
                        g_79[g_475.f5] = (((*p_5) = (-4L)) | ((l_846 , 0L) , p_6));
                        l_876 |= (((((p_6 ^ ((l_849 ^ ((safe_rshift_func_uint16_t_u_s((((safe_unary_minus_func_uint32_t_u((!0UL))) > ((*l_839) = (((*l_856) = &p_6) == ((((l_846 | (safe_sub_func_int8_t_s_s(((*p_3) |= ((safe_div_func_uint16_t_u_u(((*l_872) = ((~(safe_mod_func_int32_t_s_s((safe_div_func_int32_t_s_s(p_6, (safe_sub_func_int32_t_s_s(0L, p_6)))), (safe_mul_func_uint16_t_u_u(p_6, p_6))))) | 0x60D46D4A8A05AC2CLL)), l_846)) && l_849)), g_873))) >= 0x3F2A542AA2DECF99LL) , g_475.f5) , g_874)))) >= 0xCCCC06C1L), 5)) | 0L)) != p_6)) , p_6) | p_6) , l_875) > l_846);
                    }
                }
            }
        }
    }
    else
    { /* block id: 449 */
        (*g_131) = (p_6 && (safe_rshift_func_uint16_t_u_u((!0x7AAE803B72F06126LL), 15)));
        if (g_80.f0)
            goto lbl_880;
    }
    for (g_326.f0 = 0; (g_326.f0 <= (-23)); g_326.f0--)
    { /* block id: 455 */
        int32_t **l_883 = &g_290[3][3];
        const uint8_t *l_899[5] = {&g_812.f4,&g_812.f4,&g_812.f4,&g_812.f4,&g_812.f4};
        const uint8_t **l_898 = &l_899[0];
        const int32_t l_900 = 0xDABF218DL;
        int32_t l_903 = 0x17C4545BL;
        int8_t l_910 = 1L;
        int32_t l_911 = 0x0FAAE3B3L;
        int i;
        (*l_883) = &l_819;
        if (p_6)
            continue;
        (**g_130) = l_832;
        for (g_476.f0 = 17; (g_476.f0 > (-7)); --g_476.f0)
        { /* block id: 461 */
            const struct S0 *l_894[7][2] = {{&g_746,&g_594},{&g_813[0][4][3],&g_595},{&g_594,&g_595},{&g_813[0][4][3],&g_594},{&g_746,&g_746},{&g_746,&g_594},{&g_813[0][4][3],&g_595}};
            const struct S0 **l_893 = &l_894[3][1];
            const struct S0 ***l_892 = &l_893;
            const struct S0 ****l_891[4] = {&l_892,&l_892,&l_892,&l_892};
            const struct S0 *****l_890 = &l_891[3];
            int32_t l_895 = 0L;
            int32_t l_912 = 0x288E83F5L;
            int i, j;
        }
    }
    return l_909[5][2];
}


/* ------------------------------------------ */
/* 
 * reads : g_812
 * writes: g_813
 */
static int8_t * func_9(int8_t * p_10, const uint8_t  p_11)
{ /* block id: 412 */
    int8_t *l_814 = &g_515[0];
    g_813[0][0][0] = g_812;
    return l_814;
}


/* ------------------------------------------ */
/* 
 * reads : g_594.f0 g_265.f0 g_572 g_309 g_7 g_8 g_582.f0 g_80.f0 g_594.f4 g_130 g_131
 * writes: g_572 g_79
 */
static int8_t * func_12(int16_t  p_13, int32_t  p_14, int16_t  p_15)
{ /* block id: 404 */
    int16_t *l_790 = &g_746.f0;
    int16_t **l_789 = &l_790;
    int16_t ***l_788 = &l_789;
    int32_t l_797[10][4] = {{0x484F8DFDL,3L,(-1L),0x9CFEA952L},{(-1L),1L,0x8D9A3134L,0x12179E59L},{0x9CFEA952L,0x8D9A3134L,(-1L),(-1L)},{0x9CFEA952L,0x182204A2L,0x8D9A3134L,6L},{(-1L),(-1L),(-1L),(-1L)},{0x484F8DFDL,0xF9DC33CBL,(-1L),0x95199847L},{(-1L),6L,(-1L),(-2L)},{(-5L),0x12179E59L,3L,(-2L)},{0xF9DC33CBL,6L,0xC51134E0L,0x95199847L},{0x182204A2L,0xF9DC33CBL,0x182204A2L,(-1L)}};
    struct S0 ***l_802 = (void*)0;
    int32_t *l_803 = &l_797[0][0];
    int32_t *l_804[9] = {&g_418,&g_75,&g_75,&g_418,&g_75,&g_75,&g_418,&g_75,&g_75};
    int32_t l_805 = 1L;
    uint64_t l_806 = 0xC9F5248D414CA8AELL;
    int8_t *l_809 = &g_8;
    int i, j;
    (*l_788) = (void*)0;
    (**g_130) = (((g_594.f0 < ((((((((g_572 ^= g_265.f0) == 7UL) != (safe_sub_func_int64_t_s_s(((safe_add_func_uint16_t_u_u((safe_add_func_int32_t_s_s((g_309 , l_797[0][0]), (safe_mod_func_int8_t_s_s((safe_lshift_func_uint8_t_u_s((l_802 == l_802), l_797[9][1])), (p_13 , p_13))))), 65532UL)) && (*g_7)), g_582.f0))) ^ 8L) , g_80.f0) < 5UL) > 0xA226L) | p_15)) || g_594.f4) != (-9L));
    --l_806;
    l_804[8] = &l_797[0][0];
    return l_809;
}


/* ------------------------------------------ */
/* 
 * reads : g_130 g_131 g_79
 * writes: g_79
 */
static uint16_t  func_21(uint32_t  p_22, int8_t * p_23, const int8_t * p_24)
{ /* block id: 400 */
    int32_t l_785 = 0xB806A29BL;
    (**g_130) |= p_22;
    return l_785;
}


/* ------------------------------------------ */
/* 
 * reads : g_476.f0 g_420 g_80.f5 g_174.f3 g_581 g_476.f4 g_515 g_7 g_8 g_326.f4 g_75 g_594 g_526 g_266.f2 g_449 g_349 g_635 g_418 g_637 g_103.f0 g_131 g_79 g_175.f5 g_475.f5 g_476.f3 g_266.f4 g_140 g_705 g_175.f1 g_103.f4 g_363 g_290 g_720 g_130 g_722 g_723 g_309 g_509.f5 g_301.f3 g_595.f0 g_746 g_386 g_364 g_266.f3 g_306 g_779
 * writes: g_476.f0 g_420 g_476.f4 g_326.f4 g_75 g_595 g_526 g_309 g_637 g_79 g_80.f5 g_594.f3 g_662 g_140 g_349 g_326.f3 g_475.f0 g_290 g_80.f3 g_747 g_594.f4 g_147 g_581 g_779
 */
static int8_t * func_27(uint64_t  p_28, int32_t  p_29, uint32_t  p_30, uint32_t  p_31)
{ /* block id: 1 */
    uint64_t l_37[2];
    int32_t *l_70 = (void*)0;
    const int8_t *l_93 = &g_8;
    int32_t l_642 = 1L;
    int32_t l_644[1];
    uint16_t l_649[3];
    uint32_t l_698 = 0x6CDDE420L;
    const union U1 * volatile * volatile ***l_783 = &g_779;
    int i;
    for (i = 0; i < 2; i++)
        l_37[i] = 1UL;
    for (i = 0; i < 1; i++)
        l_644[i] = 0x070041B9L;
    for (i = 0; i < 3; i++)
        l_649[i] = 0x0128L;
    for (p_28 = (-28); (p_28 < 5); p_28++)
    { /* block id: 4 */
        int32_t l_35[4] = {1L,1L,1L,1L};
        int8_t *l_86 = &g_8;
        int32_t l_634[8][1][9] = {{{0x62EECE4EL,(-2L),(-2L),0x62EECE4EL,0xC658E8D2L,1L,0xC658E8D2L,0x62EECE4EL,(-2L)}},{{1L,1L,0xD6A6E79AL,0x3924546BL,0xD71A8AD9L,0x3924546BL,0xD6A6E79AL,1L,1L}},{{(-2L),0x62EECE4EL,0xC658E8D2L,1L,0xC658E8D2L,0x62EECE4EL,(-2L),(-2L),0x62EECE4EL}},{{0x3924546BL,(-8L),0xD6A6E79AL,(-8L),0x3924546BL,0x3CCFB8D6L,0x3CCFB8D6L,0x3924546BL,(-8L)}},{{(-2L),0xC658E8D2L,(-2L),1L,0x28B1CEE2L,0x28B1CEE2L,1L,(-2L),0xC658E8D2L}},{{1L,(-1L),0x3CCFB8D6L,0xD6A6E79AL,0xD6A6E79AL,0x3CCFB8D6L,(-1L),1L,(-1L)}},{{0x62EECE4EL,1L,1L,1L,1L,0x62EECE4EL,0xC658E8D2L,(-2L),1L}},{{(-1L),0x3924546BL,0x3924546BL,(-1L),0xD71A8AD9L,0x3CCFB8D6L,0xD71A8AD9L,(-1L),0x3924546BL}}};
        int i, j, k;
        for (p_30 = 0; (p_30 <= 3); p_30 += 1)
        { /* block id: 7 */
            int8_t * const l_62 = &g_8;
            int32_t l_65 = 1L;
            int32_t l_638 = (-1L);
            for (p_31 = 0; (p_31 <= 3); p_31 += 1)
            { /* block id: 10 */
                int32_t *l_36[3];
                int i;
                for (i = 0; i < 3; i++)
                    l_36[i] = (void*)0;
                --l_37[1];
            }
            for (g_476.f0 = 0; (g_476.f0 == (-20)); g_476.f0 = safe_sub_func_uint8_t_u_u(g_476.f0, 5))
            { /* block id: 287 */
                union U1 *l_585 = &g_586[0];
                int32_t l_587 = 0x8D816F3BL;
                uint16_t *l_610 = &g_526;
                uint16_t *l_636 = &g_637[0][7];
                int32_t *l_639 = &g_420;
                for (g_420 = 0; (g_420 != (-7)); g_420--)
                { /* block id: 290 */
                    for (g_476.f4 = 0; (g_476.f4 != 10); g_476.f4 = safe_add_func_int8_t_s_s(g_476.f4, 5))
                    { /* block id: 293 */
                        union U1 **l_584[8][7] = {{&g_581,&g_581,&g_581,&g_581,&g_581,&g_581,&g_581},{(void*)0,(void*)0,&g_581,(void*)0,(void*)0,&g_581,(void*)0},{&g_581,&g_581,&g_581,&g_581,&g_581,&g_581,&g_581},{&g_581,(void*)0,&g_581,&g_581,(void*)0,&g_581,&g_581},{&g_581,&g_581,&g_581,&g_581,&g_581,&g_581,&g_581},{(void*)0,&g_581,&g_581,(void*)0,&g_581,&g_581,(void*)0},{&g_581,&g_581,&g_581,&g_581,&g_581,&g_581,&g_581},{(void*)0,(void*)0,&g_581,(void*)0,(void*)0,&g_581,(void*)0}};
                        int i, j;
                        l_35[0] &= (safe_mul_func_int16_t_s_s(g_80.f5, g_174.f3));
                        l_585 = g_581;
                    }
                    for (g_476.f4 = 0; (g_476.f4 <= 3); g_476.f4 += 1)
                    { /* block id: 299 */
                        uint8_t *l_590 = &g_326.f4;
                        int32_t *l_593 = &g_75;
                        int i;
                        l_587 &= (l_35[p_30] = (&g_296[1][0] != &g_296[1][0]));
                        g_595 = ((((*l_593) &= ((safe_sub_func_uint16_t_u_u(g_515[(g_476.f4 + 1)], 0xC52DL)) == ((*g_7) != ((*l_590)++)))) < l_35[2]) , g_594);
                    }
                }
                (*l_639) ^= ((safe_add_func_uint16_t_u_u((safe_mul_func_uint16_t_u_u((safe_mod_func_int32_t_s_s((0UL || (safe_add_func_int32_t_s_s((p_28 | (safe_add_func_uint8_t_u_u(((l_65 = (safe_rshift_func_uint16_t_u_u(((safe_lshift_func_uint16_t_u_u((--(*l_610)), 11)) < (((safe_mul_func_uint16_t_u_u(((*l_636) |= (safe_rshift_func_uint8_t_u_u((safe_mod_func_uint64_t_u_u((safe_div_func_uint64_t_u_u((safe_mod_func_uint64_t_u_u((safe_lshift_func_uint8_t_u_s(((safe_sub_func_int8_t_s_s(l_65, (((**g_449) = (p_29 , (+((g_266.f2 , (*g_449)) != (((safe_sub_func_uint8_t_u_u((0xE1326E22L | (safe_sub_func_uint8_t_u_u(((safe_div_func_uint16_t_u_u(l_634[2][0][0], 0xC0E0L)) , p_29), g_635))), 0x5BL)) , p_31) , &p_31))))) || l_587))) & g_635), p_28)), g_418)), l_65)), g_8)), g_594.f4))), g_594.f4)) < p_30) != 0x74E1E28C4015BA18LL)), p_31))) && p_28), l_638))), p_28))), p_29)), 0L)), g_103.f0)) && 0x7F76L);
            }
        }
        (*g_131) ^= p_29;
        return &g_8;
    }
    for (g_80.f5 = (-26); (g_80.f5 <= 23); g_80.f5 = safe_add_func_uint8_t_u_u(g_80.f5, 1))
    { /* block id: 319 */
        int8_t l_645 = 0x0DL;
        int32_t l_648 = 0xDB4D506AL;
        uint16_t *l_661[7][4][4] = {{{&g_637[0][5],&g_526,&g_637[0][7],&g_637[0][7]},{&g_637[0][7],&g_637[0][7],&g_526,&g_637[0][5]},{&g_526,&g_526,&g_637[0][7],&l_649[1]},{&l_649[0],&l_649[2],&l_649[0],&g_637[0][7]}},{{&l_649[2],&l_649[2],&g_637[0][8],&l_649[1]},{&l_649[2],&g_526,&l_649[2],&g_637[0][5]},{&g_526,&g_637[0][7],&g_637[0][7],&g_637[0][7]},{&l_649[0],&g_526,&l_649[1],&g_526}},{{&g_637[0][7],&g_637[0][7],&l_649[0],&l_649[0]},{&g_637[0][7],&l_649[0],&l_649[0],&l_649[2]},{&g_637[0][7],&g_637[0][8],&l_649[0],&l_649[2]},{&g_637[0][7],&l_649[2],&l_649[1],&g_526}},{{&l_649[0],&g_637[0][7],&g_637[0][7],&l_649[0]},{&g_526,&l_649[1],&l_649[2],&g_637[0][7]},{&l_649[2],&l_649[0],&g_637[0][8],&g_637[0][7]},{&l_649[2],&l_649[0],&l_649[0],&g_637[0][7]}},{{&l_649[0],&l_649[0],&g_637[0][7],&g_637[0][7]},{&g_526,&l_649[1],&g_526,&l_649[0]},{&g_637[0][7],&g_637[0][7],&g_637[0][7],&g_526},{&g_637[0][5],&l_649[2],&g_526,&l_649[2]}},{{&l_649[1],&g_637[0][8],&l_649[2],&l_649[2]},{&g_637[0][7],&l_649[0],&l_649[2],&l_649[0]},{&l_649[1],&g_637[0][7],&g_526,&g_526},{&g_637[0][5],&g_526,&g_637[0][7],&g_637[0][7]}},{{&g_637[0][7],&g_637[0][7],&g_526,&g_637[0][5]},{&g_526,&g_526,&g_637[0][7],&l_649[1]},{&l_649[0],&l_649[2],&l_649[0],&g_637[0][7]},{&l_649[2],&l_649[2],&g_637[0][8],&l_649[1]}}};
        uint32_t l_700 = 0x8A3137A5L;
        const int32_t *l_739 = &l_644[0];
        const int32_t **l_738[3][8][4] = {{{(void*)0,&l_739,&l_739,&l_739},{&l_739,&l_739,&l_739,(void*)0},{&l_739,&l_739,(void*)0,(void*)0},{(void*)0,&l_739,&l_739,(void*)0},{&l_739,&l_739,&l_739,(void*)0},{&l_739,(void*)0,&l_739,(void*)0},{&l_739,&l_739,&l_739,&l_739},{(void*)0,&l_739,&l_739,&l_739}},{{&l_739,&l_739,&l_739,&l_739},{&l_739,&l_739,&l_739,&l_739},{(void*)0,&l_739,&l_739,&l_739},{(void*)0,&l_739,(void*)0,&l_739},{&l_739,&l_739,&l_739,&l_739},{(void*)0,&l_739,&l_739,&l_739},{&l_739,&l_739,&l_739,&l_739},{(void*)0,(void*)0,&l_739,&l_739}},{{&l_739,&l_739,(void*)0,&l_739},{(void*)0,&l_739,&l_739,&l_739},{(void*)0,&l_739,&l_739,&l_739},{&l_739,&l_739,&l_739,&l_739},{&l_739,&l_739,&l_739,&l_739},{(void*)0,&l_739,&l_739,(void*)0},{&l_739,(void*)0,&l_739,&l_739},{&l_739,&l_739,&l_739,&l_739}}};
        union U1 **l_765 = &g_581;
        int i, j, k;
        for (g_526 = 1; (g_526 <= 6); g_526 += 1)
        { /* block id: 322 */
            int32_t *l_643 = (void*)0;
            int32_t *l_646 = &l_644[0];
            int32_t *l_647[10][1][8] = {{{&g_75,&l_644[0],&g_420,&g_75,&l_644[0],(void*)0,(void*)0,&g_420}},{{&g_420,&l_644[0],(void*)0,&g_75,&g_75,(void*)0,&l_644[0],&g_420}},{{&g_75,&l_644[0],&g_420,&g_75,&l_644[0],(void*)0,(void*)0,&g_420}},{{&g_420,&l_644[0],(void*)0,&g_75,&g_75,(void*)0,&l_644[0],&g_420}},{{&g_75,&l_644[0],&g_420,&g_75,&l_644[0],(void*)0,(void*)0,&g_420}},{{&g_420,&l_644[0],(void*)0,&g_75,&g_75,(void*)0,&l_644[0],&g_420}},{{&g_75,&l_644[0],&g_420,&g_75,&l_644[0],(void*)0,(void*)0,&g_420}},{{&g_420,&l_644[0],(void*)0,&g_75,&g_75,(void*)0,&l_644[0],&g_420}},{{&g_75,&l_644[0],&g_420,&g_75,&l_644[0],(void*)0,(void*)0,&g_420}},{{&g_420,&l_644[0],(void*)0,&g_75,&g_75,(void*)0,&l_644[0],&g_420}}};
            uint64_t *l_688 = &g_140;
            uint32_t **l_695 = (void*)0;
            uint32_t *l_697 = (void*)0;
            uint32_t **l_696 = &l_697;
            uint64_t *l_699 = &l_37[1];
            struct S0 *l_748 = &g_595;
            uint32_t l_757 = 0x858D8B42L;
            int i, j, k;
            ++l_649[0];
            for (g_594.f3 = 6; (g_594.f3 >= 1); g_594.f3 -= 1)
            { /* block id: 326 */
                uint16_t *l_663[7] = {&l_649[2],&l_649[0],&l_649[0],&l_649[2],&l_649[0],&l_649[0],&l_649[2]};
                int16_t *l_667 = (void*)0;
                int16_t **l_666 = &l_667;
                uint64_t *l_669 = &l_37[1];
                int8_t *l_671 = &g_515[0];
                int8_t **l_670 = &l_671;
                uint8_t *l_672 = &g_326.f4;
                uint8_t *l_673[2][7][4] = {{{&g_635,(void*)0,&g_635,&g_635},{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,&g_635,(void*)0},{(void*)0,&g_635,(void*)0,&g_635},{(void*)0,(void*)0,&g_635,&g_635},{&g_80.f4,&g_80.f4,&g_635,&g_635},{&g_635,(void*)0,&g_635,(void*)0}},{{&g_80.f4,(void*)0,&g_635,&g_635},{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,&g_80.f4,&g_635},{(void*)0,&g_80.f4,(void*)0,&g_635},{(void*)0,&g_635,&g_635,&g_635},{&g_80.f4,&g_80.f4,&g_635,&g_635},{&g_635,(void*)0,&g_635,(void*)0}}};
                struct S0 **l_674 = &g_147[0][5];
                struct S0 **l_675 = &g_147[1][1];
                uint8_t **l_676 = &l_673[0][6][1];
                int i, j, k;
                (*l_646) = ((l_648 || ((g_637[0][7] ^= (safe_mul_func_uint8_t_u_u((g_476.f4 &= ((*l_672) = (safe_lshift_func_int8_t_s_s(((safe_add_func_uint8_t_u_u(255UL, (((p_30 && ((safe_mod_func_int8_t_s_s((l_648 = ((+((g_662 = l_661[5][2][0]) != l_663[1])) <= (safe_add_func_int16_t_s_s((((*l_666) = &g_572) == l_661[5][2][0]), (((*l_670) = func_50((((*l_669) = (safe_unary_minus_func_uint8_t_u((0xB0L | 1L)))) , g_175.f5), p_29, p_28, p_31, &g_515[0])) == &l_645))))), 1UL)) | (*l_646))) && 65529UL) && (*g_7)))) ^ p_30), 5)))), g_475.f5))) && p_30)) , (*l_646));
                (*l_646) ^= (((*l_676) = ((l_674 == l_675) , l_672)) != l_93);
            }
            if (((p_31 <= (safe_sub_func_int16_t_s_s((safe_sub_func_int8_t_s_s(l_648, (g_476.f3 , 255UL))), (((safe_div_func_int64_t_s_s((!g_266.f4), ((*l_699) |= ((safe_sub_func_uint32_t_u_u(((l_645 && (safe_add_func_uint64_t_u_u((--(*l_688)), ((safe_mul_func_int16_t_s_s(((safe_div_func_uint16_t_u_u((((*g_449) = &p_31) == ((*l_696) = l_647[4][0][1])), l_645)) < p_28), p_28)) & 0x15L)))) >= l_698), 0UL)) == 1UL)))) <= p_29) , p_31)))) == p_30))
            { /* block id: 343 */
                int8_t l_708 = 0xA2L;
                l_700 = l_645;
                for (l_698 = 0; (l_698 <= 6); l_698 += 1)
                { /* block id: 347 */
                    for (g_326.f3 = 6; (g_326.f3 >= 0); g_326.f3 -= 1)
                    { /* block id: 350 */
                        int16_t *l_719 = &g_475.f0;
                        int i;
                        (*l_646) ^= (0xA5L > (safe_mul_func_uint8_t_u_u((safe_mod_func_uint64_t_u_u(0xA881B3E5629344CELL, ((l_648 == (0xB054D443L > (l_645 | (((l_708 = (g_705 , (safe_rshift_func_int16_t_s_u(0x6998L, 4)))) , (safe_lshift_func_int8_t_s_u((safe_rshift_func_int8_t_s_s((safe_rshift_func_int8_t_s_u((safe_mul_func_uint8_t_u_u(((safe_lshift_func_int16_t_s_u(((*l_719) = 0L), (((((g_175.f1 , (void*)0) == &g_290[5][2]) && 1UL) && g_637[0][7]) <= g_103.f4))) | 1UL), p_31)), p_28)), (*g_7))), 3))) == p_31)))) , g_103.f0))), p_28)));
                    }
                    (*g_720) = (*g_363);
                }
            }
            else
            { /* block id: 357 */
                int8_t l_721 = 0xB9L;
                uint64_t *l_741[7][5][2] = {{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}},{{&g_140,&g_140},{&l_37[1],&g_140},{(void*)0,&g_140},{&l_37[1],&g_140},{&g_140,(void*)0}}};
                int32_t l_752 = 0xDC28976AL;
                int32_t l_753 = (-3L);
                int32_t l_754 = (-1L);
                int32_t l_755 = 0xAF720D5CL;
                union U1 **l_768 = &g_581;
                int i, j, k;
                for (g_80.f3 = 0; (g_80.f3 <= 6); g_80.f3 += 1)
                { /* block id: 360 */
                    (**g_130) &= (l_721 = p_28);
                }
                if (((l_721 ^ 0x3101L) ^ (((g_722 , g_723) , ((((*l_699) &= ((((safe_mod_func_uint32_t_u_u((((*g_131) == (0x81L != ((safe_mul_func_int16_t_s_s((safe_sub_func_uint16_t_u_u((g_637[0][7]++), (safe_mod_func_int8_t_s_s(((safe_lshift_func_uint8_t_u_s((safe_sub_func_int8_t_s_s(((g_476.f0 | ((void*)0 == l_738[1][3][3])) || l_721), 0xC9L)), 0)) >= (*g_7)), 1L)))), p_31)) >= p_31))) , l_721), l_721)) | p_28) && (*g_349)) == (*l_646))) , p_31) , g_509.f5)) == 0L)))
                { /* block id: 366 */
                    int32_t l_742 = (-1L);
                    if (((p_31 & g_301.f3) > (safe_unary_minus_func_int8_t_s(((*g_349) != (&g_140 != (g_595.f0 , l_741[3][4][1])))))))
                    { /* block id: 367 */
                        (*g_131) |= (l_739 != (void*)0);
                        (*l_646) = (4294967292UL | (g_103.f4 != 0UL));
                        if (l_742)
                            continue;
                        (*l_646) &= 0x9E6739EDL;
                    }
                    else
                    { /* block id: 372 */
                        int16_t *l_745 = &g_476.f0;
                        g_747[7][2][4] = (((*l_745) = (safe_lshift_func_uint8_t_u_u((*l_739), 6))) , g_746);
                        if ((*l_646))
                            continue;
                    }
                }
                else
                { /* block id: 377 */
                    int32_t *l_749 = &g_418;
                    int32_t l_756 = (-3L);
                    union U1 **l_766 = (void*)0;
                    for (g_594.f4 = 0; (g_594.f4 <= 0); g_594.f4 += 1)
                    { /* block id: 380 */
                        int32_t l_750 = 1L;
                        int32_t l_751[6] = {5L,5L,5L,5L,5L,5L};
                        int i;
                        (*g_386) = l_748;
                        l_749 = &l_644[g_594.f4];
                        l_757++;
                    }
                    for (l_698 = 0; (l_698 <= 2); l_698 += 1)
                    { /* block id: 387 */
                        union U1 ***l_767[8][10][2] = {{{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0}},{{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766}},{{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765}},{{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766}},{{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0}},{{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766}},{{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765}},{{&l_765,&l_766},{&l_765,&l_766},{&l_765,&l_765},{&l_765,(void*)0},{&l_765,&l_766},{&l_765,&l_766},{&l_765,(void*)0},{&l_765,&l_765},{&l_765,&l_766},{&l_765,&l_766}}};
                        int i, j, k;
                        l_643 = (*g_364);
                        l_642 &= ((safe_rshift_func_uint16_t_u_u(0UL, 2)) || (((((!((((safe_mod_func_uint32_t_u_u(1UL, 0x9D534F5EL)) <= (l_765 != (l_768 = l_766))) ^ 0UL) == (0xE0EF2F80L > (safe_lshift_func_uint16_t_u_s((((0x2FD1893BL != ((safe_rshift_func_int16_t_s_u((safe_mul_func_int16_t_s_s(((safe_sub_func_uint16_t_u_u((safe_div_func_uint32_t_u_u((*g_349), p_28)), g_266.f3)) == p_30), (*l_749))), (*l_749))) | 0L)) && p_30) > g_103.f0), 4))))) , (-10L)) || (*g_349)) || 18446744073709551614UL) >= g_306));
                    }
                }
            }
            l_646 = &l_644[0];
        }
        (*l_765) = (*l_765);
    }
    (*l_783) = g_779;
    return &g_515[2];
}


/* ------------------------------------------ */
/* 
 * reads : g_75 g_130 g_131 g_79 g_103.f5 g_80.f5 g_418 g_420 g_421 g_309 g_326.f5 g_83.f4 g_449 g_98 g_475 g_174.f3 g_487 g_174.f0 g_509 g_306 g_265.f1 g_526 g_168 g_570 g_476.f5 g_7 g_8
 * writes: g_98 g_80.f0 g_75 g_309 g_418 g_420 g_290 g_449 g_476 g_80.f4 g_487 g_79 g_131 g_515 g_526 g_475.f3
 */
static uint32_t  func_40(int32_t * p_41)
{ /* block id: 216 */
    uint64_t l_390 = 0xA1BE60AB60DADA44LL;
    uint32_t *l_393 = &g_98;
    const uint8_t l_394[7] = {0UL,0UL,0UL,0UL,0UL,0UL,0UL};
    const struct S0 ****l_397 = (void*)0;
    int16_t *l_402 = &g_80.f0;
    int32_t *l_412 = &g_75;
    struct S0 **l_414 = &g_147[1][1];
    struct S0 ***l_413[9] = {&l_414,&l_414,&l_414,&l_414,&l_414,&l_414,&l_414,&l_414,&l_414};
    struct S0 ***l_415 = &l_414;
    uint32_t *l_416 = &g_309;
    int32_t *l_417 = &g_418;
    int32_t *l_419 = &g_420;
    int32_t l_431[4] = {0xBCE4011CL,0xBCE4011CL,0xBCE4011CL,0xBCE4011CL};
    uint64_t l_446[10] = {0xF459A42D45ED98E5LL,18446744073709551606UL,0xF459A42D45ED98E5LL,18446744073709551606UL,0xF459A42D45ED98E5LL,18446744073709551606UL,0xF459A42D45ED98E5LL,18446744073709551606UL,0xF459A42D45ED98E5LL,18446744073709551606UL};
    uint32_t l_560 = 0x64CEDC8DL;
    int i;
    (*l_419) ^= ((*l_417) ^= (((safe_add_func_int32_t_s_s(l_390, (safe_add_func_uint32_t_u_u(((*l_393) = 4294967286UL), l_394[4])))) & ((*l_416) = ((((safe_mod_func_uint64_t_u_u((l_397 == ((safe_add_func_int64_t_s_s((safe_mul_func_int16_t_s_s(((*l_402) = l_390), 0xE3E9L)), (safe_div_func_int16_t_s_s((9UL | ((safe_mul_func_int8_t_s_s((safe_unary_minus_func_uint8_t_u(((255UL > (safe_lshift_func_int8_t_s_s((safe_mod_func_int32_t_s_s((((*l_412) &= (*p_41)) | (**g_130)), 1L)), 3))) < g_103.f5))), g_80.f5)) == 0UL)), 65535UL)))) , l_397)), (-2L))) != (*p_41)) , l_413[4]) == l_415))) & (-1L)));
    if ((g_421 , (*p_41)))
    { /* block id: 223 */
        (*l_417) = (*l_419);
    }
    else
    { /* block id: 225 */
        int32_t **l_422 = &g_290[1][3];
        int32_t **l_423 = &l_412;
        int32_t l_429 = 0x6AA305F2L;
        int32_t l_432 = 0x512B6A4CL;
        int32_t l_433 = 0x1B57818EL;
        int32_t l_435 = 0L;
        int32_t l_436 = 0L;
        int32_t l_439 = (-8L);
        int32_t l_440 = 0x5E8C0084L;
        int32_t l_441 = 0x02FF90DFL;
        int32_t l_442 = (-7L);
        int32_t l_444 = (-2L);
        int32_t l_445 = 0x181DBFA9L;
        uint32_t **l_539 = &l_393;
        int32_t **l_541 = &l_419;
        (*l_423) = ((*l_422) = p_41);
        for (g_309 = 0; (g_309 >= 46); ++g_309)
        { /* block id: 230 */
            int32_t l_428 = 0x4814FAB2L;
            int32_t l_430 = 0x3EE9ABB0L;
            int32_t l_434 = 0xB88E56C3L;
            int32_t l_437 = (-7L);
            int32_t l_438 = 0x52C00E9EL;
            int32_t l_443[10][5][2] = {{{8L,0x3F78BDB1L},{(-3L),(-7L)},{(-8L),8L},{(-10L),(-10L)},{0x5CA2923BL,0x8F741A4AL}},{{0x97C70FB8L,0L},{(-1L),1L},{0xCB5DB2A8L,(-1L)},{(-1L),(-3L)},{(-1L),(-1L)}},{{0xCB5DB2A8L,1L},{(-1L),0L},{0x97C70FB8L,0x8F741A4AL},{0x5CA2923BL,(-10L)},{(-10L),8L}},{{(-8L),(-7L)},{(-3L),0x3F78BDB1L},{8L,1L},{0x50E4DEC4L,0x97C70FB8L},{(-7L),0xCB5DB2A8L}},{{0L,(-3L)},{0x21923FF9L,0xAF63780EL},{0x886CC487L,(-1L)},{1L,1L},{(-7L),1L}},{{1L,(-1L)},{0x886CC487L,0xAF63780EL},{0x21923FF9L,(-3L)},{0L,0xCB5DB2A8L},{(-7L),0x97C70FB8L}},{{0x50E4DEC4L,1L},{8L,0x3F78BDB1L},{(-3L),(-7L)},{(-8L),8L},{(-10L),(-10L)}},{{0x5CA2923BL,0x8F741A4AL},{0x97C70FB8L,0L},{(-1L),1L},{0xCB5DB2A8L,(-3L)},{(-10L),0x1593394BL}},{{(-10L),(-3L)},{0x21923FF9L,0L},{(-3L),1L},{(-8L),0x5CA2923BL},{0xAF63780EL,0x2C2775C3L}},{{0x2C2775C3L,1L},{8L,0x714396F7L},{1L,(-1L)},{1L,(-7L)},{0x886CC487L,(-8L)}}};
            struct S0 ****l_494 = &l_413[5];
            int32_t l_530[2][8][6] = {{{1L,(-9L),0xAABFB384L,0x1FDD65A2L,(-9L),0x62F91FCCL},{0x46405F92L,0x62F91FCCL,1L,0x2C5AE3E8L,1L,0x62F91FCCL},{(-1L),0xC1F6CC2EL,0xAABFB384L,0x4224D6D7L,0x8A608CB8L,0xAABFB384L},{(-1L),1L,0x8A608CB8L,0x2C5AE3E8L,0xEEC07B1EL,(-9L)},{0x46405F92L,1L,0xC1F6CC2EL,0x1FDD65A2L,0x8A608CB8L,0x8A608CB8L},{1L,0xC1F6CC2EL,0xC1F6CC2EL,1L,1L,(-9L)},{0x2C5AE3E8L,0x62F91FCCL,0x8A608CB8L,1L,(-9L),0xAABFB384L},{1L,(-9L),0xAABFB384L,0x1FDD65A2L,(-9L),0x62F91FCCL}},{{0x46405F92L,0x62F91FCCL,1L,0x2C5AE3E8L,1L,0x62F91FCCL},{(-1L),0xC1F6CC2EL,0xAABFB384L,0x4224D6D7L,0x8A608CB8L,0xAABFB384L},{(-1L),1L,0x8A608CB8L,0x2C5AE3E8L,0xEEC07B1EL,(-9L)},{0x46405F92L,1L,0xC1F6CC2EL,0x1FDD65A2L,0x8A608CB8L,0x8A608CB8L},{1L,0xC1F6CC2EL,0xC1F6CC2EL,1L,1L,(-9L)},{0x2C5AE3E8L,0x62F91FCCL,0x8A608CB8L,1L,(-9L),0xAABFB384L},{1L,(-9L),0xAABFB384L,0x1FDD65A2L,(-9L),0x62F91FCCL},{0x46405F92L,0x62F91FCCL,1L,0x2C5AE3E8L,1L,0x62F91FCCL}}};
            int i, j, k;
            for (g_418 = 3; (g_418 <= 9); g_418 += 1)
            { /* block id: 233 */
                int32_t l_426 = (-1L);
                int32_t *l_427[5] = {&g_75,&g_75,&g_75,&g_75,&g_75};
                struct S0 ** const l_502 = &g_147[0][5];
                uint16_t *l_532 = (void*)0;
                const int64_t l_558 = 0xA7B83644A580AD90LL;
                int i;
                l_446[0]--;
                if (((g_449 = &l_393) != (void*)0))
                { /* block id: 236 */
                    int i;
                    (*p_41) = ((*l_419) = (safe_sub_func_int8_t_s_s(g_79[g_418], ((!g_326.f5) < 0x55L))));
                }
                else
                { /* block id: 239 */
                    uint64_t l_462 = 0x95191E8FC6E7BF20LL;
                    int32_t l_474 = 0L;
                    int32_t l_477 = 1L;
                    int32_t l_478[5][10][5] = {{{0x753A9361L,0x945EC640L,8L,1L,0x3F71D587L},{(-5L),0L,(-10L),(-7L),1L},{(-1L),0xE7882394L,0x9F834C3CL,0x9F834C3CL,0xE7882394L},{1L,0x93D9BAE1L,0x9879DB01L,(-4L),(-6L)},{0x300CB976L,0xE40A3AB3L,0x2E4EED9AL,0x753A9361L,(-6L)},{(-10L),0xEBC5DFC9L,1L,0xA1CE4E6AL,9L},{0x300CB976L,0xD2CDD213L,1L,(-1L),0x7878195AL},{1L,5L,(-4L),0xD021E61BL,0x9879DB01L},{(-1L),1L,0xD2CDD213L,0x300CB976L,1L},{(-5L),0x1ABABC58L,0xC82A8B26L,7L,1L}},{{0x753A9361L,0x2E4EED9AL,0xE40A3AB3L,0x300CB976L,0x6606CCB5L},{1L,(-1L),(-1L),0xD021E61BL,(-1L)},{0x9F834C3CL,0x9F834C3CL,0xE7882394L,(-1L),0x2E4EED9AL},{0xDDF9D1A7L,7L,1L,0L,0x740597E9L},{(-1L),(-4L),0xE7882394L,0x36258968L,1L},{(-4L),0x968FFE32L,0xC82A8B26L,0L,(-1L)},{0x60CCC64FL,0x6606CCB5L,0x36258968L,0x6606CCB5L,0x60CCC64FL},{(-10L),5L,0xFD60402BL,(-1L),(-6L)},{0x753A9361L,(-1L),4L,(-1L),0x36258968L},{0xFD60402BL,(-7L),(-9L),5L,(-6L)}},{{1L,(-1L),0x753A9361L,0x60CCC64FL,0x60CCC64FL},{(-6L),(-6L),(-6L),7L,(-1L)},{0xE40A3AB3L,0x945EC640L,0xD2CDD213L,0x753A9361L,1L},{0x6D8CD2DEL,0x93D9BAE1L,(-5L),6L,0x740597E9L},{1L,0x300CB976L,0xD2CDD213L,1L,(-1L)},{0xAF206258L,0L,(-6L),0xC75145D9L,0x345F46B5L},{0x0621D9A1L,8L,0x753A9361L,0xE40A3AB3L,(-6L)},{0xDDF9D1A7L,0x1ABABC58L,(-9L),(-6L),0x9879DB01L},{0xD2CDD213L,0xE7882394L,4L,1L,0x3F71D587L},{0xDDF9D1A7L,0xEBC5DFC9L,0xFD60402BL,0xD0CD5047L,(-4L)}},{{0x0621D9A1L,0x36258968L,0x36258968L,0x0621D9A1L,0x753A9361L},{0xAF206258L,6L,0xC82A8B26L,(-7L),1L},{1L,4L,0xE7882394L,0xD2CDD213L,0x7878195AL},{0x6D8CD2DEL,0L,1L,(-7L),1L},{0xE40A3AB3L,0x753A9361L,8L,0x0621D9A1L,8L},{(-6L),0xC75145D9L,0x345F46B5L,0xD0CD5047L,(-9L)},{1L,0xD2CDD213L,0x300CB976L,1L,0x0621D9A1L},{0xFD60402BL,0xA1CE4E6AL,(-1L),(-6L),0x8F8E1A79L},{0x753A9361L,0xD2CDD213L,0x945EC640L,0xE40A3AB3L,0xE7882394L},{(-10L),0xC75145D9L,0x6D8CD2DEL,0xC75145D9L,(-10L)}},{{0x60CCC64FL,0x753A9361L,(-1L),1L,0x6606CCB5L},{(-4L),0L,0xDDF9D1A7L,6L,0x6D8CD2DEL},{(-1L),4L,(-1L),0x753A9361L,0x6606CCB5L},{0x8F8E1A79L,6L,(-4L),7L,(-10L)},{0x6606CCB5L,0x36258968L,0x6606CCB5L,0x60CCC64FL,0xE7882394L},{0x74AD4B72L,0xEBC5DFC9L,(-1L),5L,0x8F8E1A79L},{0x36258968L,0xE7882394L,(-4L),(-1L),0x0621D9A1L},{9L,0x1ABABC58L,(-1L),(-1L),(-9L)},{0x9F834C3CL,8L,0x6606CCB5L,0x6606CCB5L,8L},{0x740597E9L,0L,(-4L),0L,1L}}};
                    uint32_t l_479[1];
                    int i, j, k;
                    for (i = 0; i < 1; i++)
                        l_479[i] = 4294967295UL;
                    l_438 &= (l_474 = (((((safe_sub_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_s(((safe_add_func_uint16_t_u_u((safe_unary_minus_func_int32_t_s(((*p_41) = (*l_417)))), g_83.f4)) & l_430), (safe_rshift_func_int16_t_s_s(l_462, 12)))), (safe_mod_func_int64_t_s_s((safe_mod_func_uint64_t_u_u((*l_417), (safe_mod_func_int32_t_s_s((safe_sub_func_uint64_t_u_u((((g_420 < (-2L)) && ((*l_419) = (safe_div_func_int64_t_s_s((!((((*l_419) || 4294967295UL) && (**g_449)) >= 7UL)), g_326.f5)))) && 0x9F5DFAA8L), 18446744073709551613UL)), (-10L))))), l_462)))) == g_326.f5) == l_462) , (-7L)) <= 0x834CECF7L));
                    g_476 = g_475;
                    l_479[0]--;
                }
                for (g_98 = 1; (g_98 <= 4); g_98 += 1)
                { /* block id: 249 */
                    const uint16_t l_501[10][9][2] = {{{0x5AEFL,0xE311L},{0x8292L,0x3695L},{0xABF7L,0x27F3L},{0x5AEFL,0xF5D8L},{65535UL,0x49C4L},{0x94CAL,0xF5D8L},{0x8F87L,0UL},{0xEB0DL,0xEB0DL},{0x2A69L,0xF5D8L}},{{0xABF7L,6UL},{65535UL,0x8F87L},{0xA37DL,65535UL},{8UL,65535UL},{8UL,65535UL},{0xA37DL,0x8F87L},{65535UL,6UL},{0xABF7L,0xF5D8L},{0x2A69L,0xEB0DL}},{{0xEB0DL,0UL},{0x8F87L,0xF5D8L},{0x94CAL,0x49C4L},{65535UL,0x2A69L},{0x84E4L,65535UL},{65531UL,0x503FL},{8UL,3UL},{0x84E4L,0x8F87L},{3UL,0x49C4L}},{{0xABF7L,0UL},{0x8F87L,0xEB0DL},{0UL,0xEB0DL},{0x8F87L,0UL},{0xABF7L,0x49C4L},{3UL,0x8F87L},{0x84E4L,3UL},{8UL,0x503FL},{65531UL,65535UL}},{{0x84E4L,0x2A69L},{65535UL,0x49C4L},{0x94CAL,0xF5D8L},{0x8F87L,0UL},{0xEB0DL,0xEB0DL},{0x2A69L,0xF5D8L},{0xABF7L,6UL},{65535UL,0x8F87L},{0xA37DL,65535UL}},{{8UL,65535UL},{8UL,65535UL},{0xA37DL,0x8F87L},{65535UL,6UL},{0xABF7L,0xF5D8L},{0x2A69L,0xEB0DL},{0xEB0DL,0UL},{0x8F87L,0xF5D8L},{0x94CAL,0x49C4L}},{{65535UL,0x2A69L},{0x84E4L,65535UL},{65531UL,0x503FL},{8UL,3UL},{0x84E4L,0x8F87L},{3UL,0x49C4L},{0xABF7L,0UL},{0x8F87L,0xEB0DL},{0UL,0xEB0DL}},{{0x8F87L,0UL},{0xABF7L,0x49C4L},{3UL,0x8F87L},{0x84E4L,3UL},{8UL,0x503FL},{65531UL,65535UL},{0x84E4L,0x2A69L},{65535UL,0x49C4L},{0x94CAL,0xF5D8L}},{{0x8F87L,0UL},{0xEB0DL,0xEB0DL},{0x2A69L,0xF5D8L},{0xABF7L,6UL},{65535UL,0x8F87L},{0xA37DL,65535UL},{8UL,65535UL},{8UL,65535UL},{0xA37DL,0x8F87L}},{{65535UL,6UL},{0xABF7L,0xF5D8L},{0x2A69L,0xEB0DL},{0xEB0DL,0UL},{0x8F87L,0xF5D8L},{0x94CAL,0x49C4L},{65535UL,0x2A69L},{0x84E4L,65535UL},{65531UL,0x503FL}}};
                    const int32_t *l_523 = &l_431[1];
                    uint64_t l_529 = 18446744073709551611UL;
                    int i, j, k;
                    for (l_432 = 0; (l_432 <= 4); l_432 += 1)
                    { /* block id: 252 */
                        uint8_t *l_482[5];
                        struct S0 * const **l_485 = (void*)0;
                        int i, j;
                        for (i = 0; i < 5; i++)
                            l_482[i] = &g_476.f4;
                        (*g_131) = ((l_434 , g_475.f5) , ((g_174.f3 | (g_80.f4 = ((*l_419) &= 0x8EL))) , (safe_div_func_int8_t_s_s(((**l_423) || ((l_485 != ((+(++g_487)) , ((safe_sub_func_uint32_t_u_u((g_75 && ((void*)0 != l_494)), (**g_449))) , &l_414))) <= 0xCEB91661015A57A0LL)), (**l_423)))));
                        if ((*g_131))
                            break;
                    }
                    (**l_423) = (*p_41);
                    if (((*l_412) = (safe_add_func_uint8_t_u_u((*l_417), ((safe_sub_func_int32_t_s_s((-6L), ((safe_mod_func_int16_t_s_s(0xD4A1L, g_421.f0)) ^ (-1L)))) && l_501[0][1][1])))))
                    { /* block id: 261 */
                        return (*l_412);
                    }
                    else
                    { /* block id: 263 */
                        int8_t *l_514 = &g_515[2];
                        uint16_t *l_524 = (void*)0;
                        uint16_t *l_525 = &g_526;
                        int64_t *l_527 = (void*)0;
                        int64_t *l_528 = &g_475.f3;
                        uint16_t **l_531 = &l_525;
                        uint16_t **l_533 = &l_532;
                        int32_t l_559 = 0x3DB55AD8L;
                        (*g_130) = ((((g_174.f0 <= 3UL) , l_502) != (void*)0) , (*g_130));
                        (*l_412) = ((((safe_add_func_int16_t_s_s(((safe_rshift_func_int8_t_s_s((*l_417), 5)) > (safe_sub_func_uint32_t_u_u((((*l_528) |= (g_509 , (safe_sub_func_int8_t_s_s((((**l_423) | ((*l_525) = ((safe_mod_func_int16_t_s_s((((*l_514) = l_428) || ((safe_add_func_uint64_t_u_u((g_509.f1 == (((-3L) && ((safe_rshift_func_int8_t_s_u((safe_add_func_uint8_t_u_u((safe_unary_minus_func_uint16_t_u(((void*)0 == l_523))), 0xA7L)), 0)) ^ (**g_449))) || g_306)), 0L)) || l_438)), 65530UL)) & g_487))) < l_443[5][1][1]), g_309)))) == l_529), 0xD926B495L))), l_443[5][1][1])) || g_265.f1) > (*l_412)) >= l_530[1][3][3]);
                        (*g_131) &= (((*l_531) = &g_526) == ((*l_533) = l_532));
                        (*l_412) = (safe_sub_func_uint64_t_u_u(((((safe_unary_minus_func_int16_t_s(((*l_402) = (*l_523)))) , ((safe_sub_func_int16_t_s_s((&g_349 == l_539), ((safe_unary_minus_func_uint32_t_u(((void*)0 != l_541))) , ((safe_div_func_uint16_t_u_u(8UL, ((**l_531) |= (**l_423)))) < (safe_rshift_func_uint16_t_u_u((0x2A3BL >= ((((safe_sub_func_uint64_t_u_u((safe_lshift_func_uint8_t_u_u(((safe_lshift_func_uint8_t_u_u(((safe_sub_func_int64_t_s_s((safe_div_func_int32_t_s_s((safe_add_func_uint64_t_u_u((l_558 & l_443[5][1][1]), (**l_541))), (**g_130))), l_559)) & l_559), 4)) & (**l_423)), (*l_412))), (*l_419))) | (*l_419)) > 0x34L) || (*l_523))), l_434)))))) & 0xFCE7A57D833FA4A4LL)) || l_560) , 1UL), g_80.f5));
                    }
                }
            }
            (*p_41) &= ((((((*l_402) = 0xE3F0L) != (safe_sub_func_int32_t_s_s((**g_130), (**l_541)))) | l_437) , (safe_div_func_uint8_t_u_u((safe_add_func_uint16_t_u_u((((safe_unary_minus_func_uint32_t_u(((((g_168 , g_570) , &g_385) != &g_385) || (!((void*)0 == &l_394[4]))))) & g_476.f5) && (*l_419)), 0xC1A1L)), (*g_7)))) != l_430);
        }
    }
    return (*l_419);
}


/* ------------------------------------------ */
/* 
 * reads : g_98 g_103 g_80.f2 g_8 g_83.f3 g_130 g_131 g_79 g_146 g_7 g_168 g_174 g_168.f0 g_175.f3 g_80.f5 g_175.f0 g_80.f0 g_80 g_168.f2 g_140 g_265 g_289 g_296 g_301 g_290 g_309 g_75 g_175.f5 g_326.f4 g_326.f3 g_298 g_363 g_364 g_383
 * writes: g_98 g_80.f5 g_79 g_140 g_146 g_161 g_80.f0 g_175 g_80.f4 g_266 g_290 g_80 g_309 g_349 g_326.f4 g_384 g_326
 */
static const int8_t  func_46(int8_t * p_47, int32_t * p_48, const int8_t * p_49)
{ /* block id: 37 */
    uint32_t l_94 = 0x8A88EB8BL;
    uint32_t *l_97 = &g_98;
    int32_t l_108 = 1L;
    int16_t l_115 = 0xE956L;
    int32_t l_116 = 0L;
    int32_t l_118 = 0x84A9EC0CL;
    int32_t l_119 = (-1L);
    int32_t l_120 = 1L;
    int32_t l_122[7];
    int32_t l_123[8] = {0xD26D99E8L,0xAB17D805L,0xAB17D805L,0xD26D99E8L,0xAB17D805L,0xAB17D805L,0xD26D99E8L,0xAB17D805L};
    int8_t l_124 = 0x73L;
    uint16_t l_125 = 0xACEBL;
    struct S0 *l_138 = &g_80;
    struct S0 **l_137[3];
    int16_t l_276[8];
    int32_t l_282 = 9L;
    int i;
    for (i = 0; i < 7; i++)
        l_122[i] = 1L;
    for (i = 0; i < 3; i++)
        l_137[i] = &l_138;
    for (i = 0; i < 8; i++)
        l_276[i] = 0L;
lbl_111:
    (*p_48) = (((void*)0 != &g_79[6]) , 5L);
    if (((l_94 <= (((safe_div_func_int32_t_s_s((((--(*l_97)) < (safe_rshift_func_uint16_t_u_s(0x94A1L, 11))) <= (((g_103 , (((safe_mod_func_int64_t_s_s(0xC7346DDCF828E4EALL, l_94)) >= (safe_sub_func_uint32_t_u_u(((l_108 = l_94) && (safe_sub_func_uint32_t_u_u((g_80.f2 != l_94), g_8))), 0x0B92564DL))) , &l_108)) != &g_75) || g_83.f3)), l_94)) <= l_94) && (-5L))) >= l_94))
    { /* block id: 41 */
        int32_t *l_112 = (void*)0;
        int32_t *l_113 = &l_108;
        int32_t *l_114[4][4] = {{&l_108,&l_108,(void*)0,&l_108},{&l_108,&g_75,&g_75,&l_108},{&g_75,&l_108,&g_75,(void*)0},{&g_75,&g_75,&l_108,&g_75}};
        int16_t l_117 = 0x5C81L;
        int64_t l_121 = 0x6CB083140AF3A0D7LL;
        int i, j;
        if (l_94)
            goto lbl_111;
        --l_125;
    }
    else
    { /* block id: 44 */
        uint8_t l_134 = 0x23L;
        struct S0 **l_145 = &l_138;
        int32_t *l_171 = &l_116;
        int32_t l_184 = 0L;
        int32_t l_220 = 4L;
        int32_t l_222 = 1L;
        int32_t l_227 = 0x1CD5BE58L;
        int32_t l_278 = 0L;
        int32_t l_279[6];
        int16_t l_281 = (-1L);
        int i;
        for (i = 0; i < 6; i++)
            l_279[i] = 0xEA497638L;
lbl_272:
        for (g_80.f5 = (-4); (g_80.f5 < 43); g_80.f5 = safe_add_func_int8_t_s_s(g_80.f5, 2))
        { /* block id: 47 */
            (**g_130) |= (g_130 != (void*)0);
        }
        for (l_120 = 12; (l_120 <= (-20)); l_120 = safe_sub_func_uint32_t_u_u(l_120, 8))
        { /* block id: 52 */
            struct S0 *l_136[8] = {&g_80,&g_80,&g_80,&g_80,&g_80,&g_80,&g_80,&g_80};
            struct S0 **l_135 = &l_136[2];
            uint64_t *l_139 = &g_140;
            struct S0 * const **l_148 = (void*)0;
            int32_t l_151 = (-9L);
            int64_t l_152 = 0xB333FF0F8D778003LL;
            struct S0 * const **l_159 = &g_146;
            int8_t *l_160 = &l_124;
            int i;
            (*g_131) &= ((*p_48) = ((l_134 , ((((((((((&g_98 == ((l_135 == l_137[2]) , (void*)0)) != (((*l_139) = l_134) , (((*l_139) = (safe_mul_func_int16_t_s_s(l_134, (safe_div_func_int32_t_s_s((l_145 == (g_146 = g_146)), l_123[5]))))) ^ 0x314CBB3D9D417AC9LL))) >= (*g_7)) , (-3L)) != (*g_7)) & 1UL) != (-1L)) | l_134) == 0x573A22974175C3E2LL) <= 0xEDL)) | l_119));
            (**g_130) |= l_134;
            if ((**g_130))
                continue;
            (*p_48) = (((safe_div_func_uint32_t_u_u(l_151, l_152)) , (((*l_97) = (safe_div_func_int8_t_s_s(((safe_rshift_func_uint8_t_u_s((safe_rshift_func_int16_t_s_s((((*l_160) = ((((*l_159) = (void*)0) == &l_138) != l_151)) != ((g_161 = l_159) != &l_135)), 7)), 6)) , (safe_rshift_func_int8_t_s_u((safe_mod_func_int16_t_s_s((g_168 , (((*g_131) && l_118) == l_134)), 0xAC4CL)), l_119))), 0x19L))) < l_134)) , (*p_48));
        }
        for (g_140 = 0; (g_140 < 25); ++g_140)
        { /* block id: 68 */
            int16_t l_209 = 1L;
            int32_t l_216 = 0x2CD7695AL;
            int32_t l_219 = (-7L);
            int32_t l_223 = (-4L);
            int32_t l_224 = (-1L);
            int32_t l_225 = 6L;
            int32_t l_226[8][9] = {{1L,1L,(-1L),0xA89AF6DFL,0xA89167F1L,0xF3B588DFL,1L,0xF3B588DFL,0xA89167F1L},{(-1L),1L,1L,(-1L),0xA89AF6DFL,0xA89167F1L,0xF3B588DFL,1L,0xF3B588DFL},{1L,0x1C9CF4CBL,(-1L),(-1L),0x1C9CF4CBL,1L,2L,1L,0L},{0x38279839L,0xA89167F1L,1L,0xA89AF6DFL,0xA89AF6DFL,1L,0xA89167F1L,0x38279839L,0x1C9CF4CBL},{0L,(-1L),0x38279839L,2L,0xA89167F1L,0xA89167F1L,2L,0x38279839L,(-1L)},{0xA89AF6DFL,0x38279839L,0L,0x1C9CF4CBL,1L,0xF3B588DFL,0xF3B588DFL,1L,0x1C9CF4CBL},{0xA89AF6DFL,4L,0xA89AF6DFL,0xF3B588DFL,2L,0L,1L,1L,0L},{0L,0x38279839L,0xA89AF6DFL,0x38279839L,0L,0x1C9CF4CBL,1L,0xF3B588DFL,0xF3B588DFL}};
            struct S0 *l_231 = &g_80;
            int32_t *l_277[2];
            int64_t l_280[3][9] = {{0xB3B4597DB14E475ALL,0x59E1C9F8534240B0LL,0x308A2CE61AF882FCLL,0xB4ADB113186C1B93LL,0xB4ADB113186C1B93LL,0x308A2CE61AF882FCLL,0x59E1C9F8534240B0LL,0xB3B4597DB14E475ALL,0x308A2CE61AF882FCLL},{0xB3B4597DB14E475ALL,0x59E1C9F8534240B0LL,0x308A2CE61AF882FCLL,0xB4ADB113186C1B93LL,0xB4ADB113186C1B93LL,0x308A2CE61AF882FCLL,0x59E1C9F8534240B0LL,0xB3B4597DB14E475ALL,0x308A2CE61AF882FCLL},{0xB3B4597DB14E475ALL,0x59E1C9F8534240B0LL,0x308A2CE61AF882FCLL,0xB4ADB113186C1B93LL,0xB4ADB113186C1B93LL,0x308A2CE61AF882FCLL,0x59E1C9F8534240B0LL,0xB3B4597DB14E475ALL,0x308A2CE61AF882FCLL}};
            uint32_t l_283 = 0x6E529CC8L;
            int i, j;
            for (i = 0; i < 2; i++)
                l_277[i] = (void*)0;
            p_48 = l_171;
            if ((*g_131))
            { /* block id: 70 */
                uint16_t l_188 = 0x833EL;
                int32_t l_217 = (-5L);
                int32_t l_221 = 9L;
                if ((*p_48))
                { /* block id: 71 */
                    for (g_80.f0 = 6; (g_80.f0 <= (-20)); g_80.f0--)
                    { /* block id: 74 */
                        g_175 = g_174;
                    }
                }
                else
                { /* block id: 77 */
                    uint16_t l_178[1];
                    int32_t *l_181 = &l_118;
                    int32_t *l_182 = &l_122[6];
                    int32_t *l_183 = &l_123[5];
                    int32_t *l_185 = (void*)0;
                    int32_t *l_186 = &l_119;
                    int32_t *l_187[9][7] = {{(void*)0,&l_120,(void*)0,&l_120,(void*)0,&l_120,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_120,(void*)0,&l_120,(void*)0,&l_120,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_120,(void*)0,&l_120,(void*)0,&l_120,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_120,(void*)0,&l_120,(void*)0,&l_120,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_120,(void*)0,&l_120,(void*)0,&l_120,(void*)0}};
                    int i, j;
                    for (i = 0; i < 1; i++)
                        l_178[i] = 0UL;
                    for (l_116 = 0; (l_116 <= (-28)); l_116--)
                    { /* block id: 80 */
                        int8_t *l_179 = &l_124;
                        int32_t l_180 = 0xF8884895L;
                        (*g_131) ^= (*p_48);
                        l_178[0] = 0x4DF9118AL;
                        (*g_131) = (((*l_179) |= 0L) , (-4L));
                        if (l_180)
                            break;
                    }
                    --l_188;
                    for (g_98 = (-1); (g_98 != 23); g_98++)
                    { /* block id: 90 */
                        struct S0 ***l_193 = &l_137[2];
                        int16_t *l_194 = &l_115;
                        (*p_48) ^= ((void*)0 != l_193);
                        (**g_130) = (((void*)0 != &g_8) , ((g_168.f0 , g_175.f3) ^ (g_8 && (((*l_194) = 0xA34BL) < 0xF3E7L))));
                    }
                }
                for (g_98 = 26; (g_98 > 40); g_98 = safe_add_func_int8_t_s_s(g_98, 2))
                { /* block id: 98 */
                    uint64_t l_201 = 8UL;
                    int32_t l_218[9] = {(-1L),(-1L),(-2L),(-1L),(-1L),(-2L),(-1L),(-1L),(-2L)};
                    uint64_t l_228[8][1];
                    int i, j;
                    for (i = 0; i < 8; i++)
                    {
                        for (j = 0; j < 1; j++)
                            l_228[i][j] = 0x9557001E8C80B86BLL;
                    }
                    if (l_188)
                        break;
                    if ((*p_48))
                        continue;
                    if ((safe_rshift_func_int16_t_s_u((((safe_mul_func_int16_t_s_s(l_201, ((safe_mul_func_uint8_t_u_u((((void*)0 == &g_131) || (!(safe_mul_func_uint8_t_u_u(((*l_171) >= ((safe_sub_func_int32_t_s_s((*g_131), ((g_8 | ((l_209 , ((((l_118 |= (safe_mod_func_int8_t_s_s(((!(0xDDL >= 251UL)) > g_98), l_122[0]))) , g_103.f3) , g_98) > 0xE98FBECFL)) & g_8)) ^ g_80.f5))) == 0x275740A826D1EDC4LL)), (*p_47))))), l_115)) >= l_108))) , (*l_171)) , l_201), l_209)))
                    { /* block id: 102 */
                        return (*p_47);
                    }
                    else
                    { /* block id: 104 */
                        int32_t *l_213 = &l_108;
                        int32_t *l_214 = &l_116;
                        int32_t *l_215[7][1][1] = {{{(void*)0}},{{&l_184}},{{(void*)0}},{{&l_184}},{{(void*)0}},{{&l_184}},{{(void*)0}}};
                        int i, j, k;
                        --l_228[5][0];
                    }
                }
                (*l_145) = l_231;
                if (l_123[2])
                    break;
            }
            else
            { /* block id: 110 */
                int8_t l_232 = 0x0AL;
                uint16_t *l_241 = &l_125;
                if ((**g_130))
                    break;
                l_220 &= ((2L >= 0x2EB9C0AF9B30A4D8LL) , (l_232 < (safe_add_func_int8_t_s_s(((void*)0 != &l_231), (safe_rshift_func_int16_t_s_u((((safe_lshift_func_uint16_t_u_u((safe_add_func_int16_t_s_s(0x51DFL, (-3L))), ((*l_241) = ((l_232 != l_232) | 0x0C44L)))) & (*l_171)) != g_175.f0), g_80.f0))))));
                (**g_130) = (safe_mod_func_uint8_t_u_u((l_118 != (((l_225 == g_98) >= ((safe_add_func_int16_t_s_s((0L >= (g_80.f5 || ((*l_231) , (((~(safe_div_func_uint32_t_u_u(0xB78E166CL, (safe_unary_minus_func_uint16_t_u(g_168.f2))))) > (safe_lshift_func_uint16_t_u_u((((safe_div_func_int64_t_s_s(g_80.f4, l_232)) >= l_224) == g_103.f5), g_80.f4))) == 0x2BL)))), g_140)) == 0x8AFEL)) > 0x1E41F754L)), l_209));
            }
            for (g_80.f4 = 0; (g_80.f4 > 32); g_80.f4 = safe_add_func_int16_t_s_s(g_80.f4, 6))
            { /* block id: 118 */
                if (l_122[0])
                { /* block id: 119 */
                    uint16_t l_260 = 0x1206L;
                    for (l_222 = 3; (l_222 != 27); ++l_222)
                    { /* block id: 122 */
                        int32_t *l_258 = &l_216;
                        int32_t *l_259[3][1][2] = {{{&l_120,(void*)0}},{{&l_120,&l_120}},{{(void*)0,&l_120}}};
                        int i, j, k;
                        l_260++;
                    }
                    for (l_134 = (-19); (l_134 < 58); ++l_134)
                    { /* block id: 127 */
                        g_266 = g_265;
                        if ((*g_131))
                            continue;
                    }
                    (*g_131) = ((*p_48) ^= (safe_mod_func_int16_t_s_s((l_260 ^ (safe_mul_func_int8_t_s_s((*p_49), 0xA5L))), l_108)));
                }
                else
                { /* block id: 133 */
                    uint64_t l_271 = 8UL;
                    if (l_271)
                        break;
                    (*g_131) &= 1L;
                    if ((**g_130))
                        break;
                    return (*p_47);
                }
                if (g_80.f5)
                    goto lbl_272;
                for (l_120 = (-30); (l_120 > (-21)); l_120 = safe_add_func_uint32_t_u_u(l_120, 8))
                { /* block id: 142 */
                    int32_t **l_275 = &l_171;
                    (*l_275) = p_48;
                }
            }
            ++l_283;
        }
    }
    for (g_98 = (-4); (g_98 < 43); g_98++)
    { /* block id: 151 */
        int32_t *l_288 = &l_123[5];
        const int32_t * const l_304[10] = {(void*)0,(void*)0,&l_119,&l_116,&l_119,(void*)0,(void*)0,&l_119,&l_116,&l_119};
        uint16_t *l_352 = &l_125;
        uint8_t *l_387[9] = {&g_80.f4,&g_326.f4,&g_80.f4,&g_80.f4,&g_326.f4,&g_80.f4,&g_80.f4,&g_326.f4,&g_80.f4};
        int i;
        (*g_289) = l_288;
        (*g_131) = 0x9B51CB93L;
        if (((safe_rshift_func_uint16_t_u_s((l_124 | (3UL > (l_119 <= g_174.f3))), (!l_123[4]))) & ((*l_288) <= (g_296[1][0] != (void*)0))))
        { /* block id: 154 */
            for (l_120 = 0; (l_120 > (-20)); --l_120)
            { /* block id: 157 */
                (*l_138) = g_301;
                return l_94;
            }
            if (g_80.f4)
                goto lbl_111;
            (*l_288) &= ((void*)0 == (*g_130));
        }
        else
        { /* block id: 163 */
            const int32_t *l_305[9] = {&g_306,&g_306,&g_306,&g_306,&g_306,&g_306,&g_306,&g_306,&g_306};
            uint32_t *l_308 = &g_309;
            uint8_t *l_311 = (void*)0;
            int32_t l_312[1][1][2];
            struct S0 *l_325 = &g_326;
            int32_t l_333[4][1][7] = {{{(-4L),(-1L),0L,0L,0L,0L,(-1L)}},{{0x6E5492DDL,1L,0L,(-1L),(-1L),0L,1L}},{{(-4L),(-1L),0L,0L,0L,0L,(-1L)}},{{0x6E5492DDL,1L,0L,(-1L),(-1L),0L,1L}}};
            volatile int32_t *l_339[10][7] = {{&g_79[5],&g_79[4],&g_79[6],&g_79[5],&g_79[3],&g_79[5],&g_79[9]},{(void*)0,&g_79[5],&g_79[5],&g_79[3],&g_79[7],&g_79[5],&g_79[5]},{&g_79[7],(void*)0,&g_79[5],&g_79[5],&g_79[4],(void*)0,(void*)0},{&g_79[0],(void*)0,&g_79[8],(void*)0,&g_79[0],(void*)0,&g_79[4]},{&g_79[5],&g_79[5],&g_79[7],&g_79[1],&g_79[5],&g_79[5],(void*)0},{(void*)0,&g_79[4],(void*)0,&g_79[7],&g_79[5],(void*)0,&g_79[5]},{&g_79[5],&g_79[1],&g_79[5],&g_79[5],&g_79[1],&g_79[1],(void*)0},{&g_79[0],(void*)0,&g_79[7],(void*)0,&g_79[5],&g_79[5],(void*)0},{&g_79[7],&g_79[5],&g_79[7],(void*)0,(void*)0,&g_79[5],&g_79[5]},{(void*)0,&g_79[5],&g_79[2],&g_79[9],&g_79[0],&g_79[5],(void*)0}};
            uint32_t **l_348[10][4][2] = {{{&l_308,&l_97},{&l_97,&l_308},{&l_97,(void*)0},{&l_97,&l_308}},{{&l_97,&l_97},{&l_308,&l_97},{&l_97,(void*)0},{&l_97,&l_308}},{{&l_308,&l_308},{&l_308,&l_97},{&l_308,(void*)0},{&l_308,&l_97}},{{&l_97,&l_97},{&l_97,&l_97},{&l_308,&l_308},{(void*)0,&l_308}},{{&l_308,&l_97},{&l_97,&l_308},{&l_97,&l_308},{&l_97,&l_97}},{{&l_308,&l_308},{(void*)0,&l_308},{&l_308,&l_97},{&l_97,&l_97}},{{&l_97,&l_97},{&l_308,(void*)0},{&l_308,&l_97},{&l_308,&l_308}},{{&l_308,&l_308},{&l_308,&l_97},{&l_308,&l_308},{(void*)0,&l_308}},{{(void*)0,(void*)0},{&l_308,&l_308},{&l_308,(void*)0},{(void*)0,&l_308}},{{(void*)0,&l_308},{&l_308,&l_97},{&l_308,&l_308},{&l_308,&l_97}}};
            int i, j, k;
            for (i = 0; i < 1; i++)
            {
                for (j = 0; j < 1; j++)
                {
                    for (k = 0; k < 2; k++)
                        l_312[i][j][k] = 0xCD08625CL;
                }
            }
            if (((((safe_mul_func_uint8_t_u_u(((((*l_308) |= (((*g_289) == (l_305[2] = ((p_48 == l_304[7]) , &g_75))) ^ (~1UL))) >= 0x8B45E418L) | l_115), (+(l_120 = g_103.f3)))) == ((0x4A12BDEA78096793LL < l_312[0][0][0]) > (-5L))) , (*g_7)) ^ (*p_47)))
            { /* block id: 167 */
                return (*p_49);
            }
            else
            { /* block id: 169 */
                for (g_80.f0 = 11; (g_80.f0 == 19); g_80.f0++)
                { /* block id: 172 */
                    int32_t **l_315 = &g_290[8][0];
                    uint16_t *l_320 = &l_125;
                    (*l_315) = p_48;
                    l_122[1] |= 0x9889C965L;
                    if ((((safe_add_func_int64_t_s_s((g_79[6] < (&l_124 != (((*l_320) &= g_98) , l_311))), (((((((safe_mul_func_int16_t_s_s(0x9F3DL, (1UL ^ (safe_rshift_func_int8_t_s_s(0x60L, (g_8 != 0xEAF09F1FF890C798LL)))))) , g_98) > l_282) == 0x390AL) , l_325) == l_325) >= g_98))) <= g_140) , 0xC36D6C55L))
                    { /* block id: 176 */
                        uint64_t *l_332[4] = {(void*)0,(void*)0,(void*)0,(void*)0};
                        int i;
                        (*p_48) = ((l_118 , g_168) , ((safe_mod_func_uint32_t_u_u(g_75, ((((+(safe_sub_func_int64_t_s_s((-1L), (g_140++)))) | 0xBDF6C71EL) || (safe_lshift_func_int16_t_s_u(g_175.f5, (0xC3567593F3200E3CLL != g_326.f4)))) , ((!l_123[5]) & (*l_288))))) > g_326.f3));
                    }
                    else
                    { /* block id: 179 */
                        return (*p_47);
                    }
                }
                l_339[2][2] = (*g_130);
            }
            if ((g_301.f2 ^ (safe_mul_func_int8_t_s_s((safe_sub_func_int16_t_s_s(((0xD8DC3DEBL > (safe_mul_func_int16_t_s_s(l_276[2], g_326.f3))) | (safe_rshift_func_uint8_t_u_u(g_98, 4))), (l_97 == (g_349 = p_48)))), (safe_sub_func_uint64_t_u_u((((((void*)0 == l_352) > g_326.f4) && g_80.f0) , l_125), g_326.f3))))))
            { /* block id: 186 */
                uint32_t l_359 = 18446744073709551607UL;
                uint64_t *l_376 = &g_140;
                (*p_48) |= 0xA5EAFDB9L;
                if (((g_301.f0 < (~0x6EB6L)) , (((g_103.f5 != ((l_120 = l_122[6]) , (safe_div_func_uint32_t_u_u((((~(l_122[3] && 1L)) || ((*p_47) <= (safe_add_func_uint8_t_u_u((g_326.f4 = (l_359 , ((safe_lshift_func_uint16_t_u_u(0x8ADEL, 6)) == l_359))), (*l_288))))) < g_298), l_359)))) | 18446744073709551615UL) , l_359)))
                { /* block id: 190 */
                    int32_t l_362 = 0xF1DCD456L;
                    if ((*p_48))
                        break;
                    if (l_362)
                        break;
                }
                else
                { /* block id: 193 */
                    int32_t l_367 = (-2L);
                    if (((*p_48) = (-5L)))
                    { /* block id: 195 */
                        if (l_108)
                            goto lbl_111;
                        (*g_363) = p_48;
                        (*g_364) = p_48;
                    }
                    else
                    { /* block id: 199 */
                        uint16_t l_368 = 0x98DFL;
                        int64_t *l_377 = &g_80.f3;
                        (*p_48) = (safe_add_func_uint32_t_u_u((l_367 > (((l_368 != ((safe_div_func_int16_t_s_s(l_368, (+(safe_mod_func_int64_t_s_s(((*l_377) = (6UL == ((((l_368 >= (safe_sub_func_uint8_t_u_u(((g_168 , &p_48) == &p_48), ((void*)0 != &l_124)))) || 1UL) , l_376) != (void*)0))), 0xE793F12AF9B7A42BLL))))) ^ 1L)) || l_368) || 0UL)), 0L));
                        if (l_124)
                            continue;
                        (*l_288) = (*p_48);
                    }
                    (*l_288) ^= (safe_rshift_func_int8_t_s_u((*g_7), 4));
                }
            }
            else
            { /* block id: 207 */
                struct S0 ** const *l_381 = &l_137[2];
                struct S0 ** const **l_380 = &l_381;
                (*g_383) = l_380;
            }
            (*l_325) = (*l_138);
            (*l_288) |= ((void*)0 == l_387[8]);
        }
    }
    if (g_103.f5)
        goto lbl_111;
    return (*p_47);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int8_t * func_50(const uint64_t  p_51, int32_t  p_52, uint8_t  p_53, uint32_t  p_54, int8_t * p_55)
{ /* block id: 33 */
    int32_t *l_87[5][5][3] = {{{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75}},{{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0}},{{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75}},{{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0}},{{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75},{(void*)0,&g_75,(void*)0},{&g_75,&g_75,&g_75}}};
    int32_t **l_88 = &l_87[0][0][0];
    int32_t l_89 = 0x1A7339E9L;
    uint32_t l_90 = 0x3599DBF4L;
    int i, j, k;
    (*l_88) = l_87[0][0][0];
    ++l_90;
    return &g_8;
}


/* ------------------------------------------ */
/* 
 * reads : g_71 g_73 g_75 g_80 g_83 g_7 g_8
 * writes: g_71 g_75 g_79
 */
static int64_t  func_58(uint32_t  p_59)
{ /* block id: 12 */
    uint32_t l_74[9] = {4294967295UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL};
    int32_t l_77[8][9] = {{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)},{0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL},{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)},{0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL},{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)},{0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL,0x5446ED9AL,0xA989989AL},{(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)},{0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL,0x5446ED9AL,0x13E0CA2CL}};
    int32_t l_84 = 1L;
    int i, j;
    (*g_73) = g_71;
    for (p_59 = 0; (p_59 <= 8); p_59 += 1)
    { /* block id: 16 */
        uint16_t l_76[2][1];
        int32_t l_85[9] = {8L,8L,8L,8L,8L,8L,8L,8L,8L};
        int i, j;
        for (i = 0; i < 2; i++)
        {
            for (j = 0; j < 1; j++)
                l_76[i][j] = 0xC53AL;
        }
        for (g_75 = 5; (g_75 >= 0); g_75 -= 1)
        { /* block id: 19 */
            if (g_75)
                break;
            l_77[1][0] = l_76[1][0];
        }
        for (g_75 = 0; (g_75 <= 8); g_75 += 1)
        { /* block id: 25 */
            int32_t *l_78[5][4] = {{&l_77[0][0],&l_77[1][5],&l_77[1][5],&l_77[0][0]},{&l_77[1][5],&l_77[0][0],&l_77[3][3],&l_77[5][6]},{&l_77[1][5],&l_77[3][3],&l_77[1][5],&l_77[2][6]},{&l_77[0][0],&l_77[5][6],&l_77[2][6],&l_77[2][6]},{&l_77[3][3],&l_77[3][3],&g_75,&l_77[5][6]}};
            int i, j;
            g_79[5] = 0x4BFCC0C2L;
        }
        l_85[2] &= (g_80 , (((((safe_sub_func_int32_t_s_s(((void*)0 == &g_79[5]), (((g_83 , (((0xBF266DE4L ^ (l_74[p_59] = (((l_77[1][0] = 4L) ^ 0x4CL) | (p_59 | (1L | p_59))))) > 3UL) , 1UL)) == 1L) >= (*g_7)))) > p_59) > g_8) <= l_84) & 0xDAL));
    }
    return g_80.f2;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_8, "g_8", print_hash_value);
    transparent_crc(g_75, "g_75", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_79[i], "g_79[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_80.f0, "g_80.f0", print_hash_value);
    transparent_crc(g_80.f1, "g_80.f1", print_hash_value);
    transparent_crc(g_80.f2, "g_80.f2", print_hash_value);
    transparent_crc(g_80.f3, "g_80.f3", print_hash_value);
    transparent_crc(g_80.f4, "g_80.f4", print_hash_value);
    transparent_crc(g_80.f5, "g_80.f5", print_hash_value);
    transparent_crc(g_83.f0, "g_83.f0", print_hash_value);
    transparent_crc(g_83.f1, "g_83.f1", print_hash_value);
    transparent_crc(g_83.f2, "g_83.f2", print_hash_value);
    transparent_crc(g_83.f3, "g_83.f3", print_hash_value);
    transparent_crc(g_83.f4, "g_83.f4", print_hash_value);
    transparent_crc(g_83.f5, "g_83.f5", print_hash_value);
    transparent_crc(g_98, "g_98", print_hash_value);
    transparent_crc(g_103.f0, "g_103.f0", print_hash_value);
    transparent_crc(g_103.f1, "g_103.f1", print_hash_value);
    transparent_crc(g_103.f2, "g_103.f2", print_hash_value);
    transparent_crc(g_103.f3, "g_103.f3", print_hash_value);
    transparent_crc(g_103.f4, "g_103.f4", print_hash_value);
    transparent_crc(g_103.f5, "g_103.f5", print_hash_value);
    transparent_crc(g_140, "g_140", print_hash_value);
    transparent_crc(g_168.f0, "g_168.f0", print_hash_value);
    transparent_crc(g_168.f2, "g_168.f2", print_hash_value);
    transparent_crc(g_174.f0, "g_174.f0", print_hash_value);
    transparent_crc(g_174.f1, "g_174.f1", print_hash_value);
    transparent_crc(g_174.f2, "g_174.f2", print_hash_value);
    transparent_crc(g_174.f3, "g_174.f3", print_hash_value);
    transparent_crc(g_174.f4, "g_174.f4", print_hash_value);
    transparent_crc(g_174.f5, "g_174.f5", print_hash_value);
    transparent_crc(g_175.f0, "g_175.f0", print_hash_value);
    transparent_crc(g_175.f1, "g_175.f1", print_hash_value);
    transparent_crc(g_175.f2, "g_175.f2", print_hash_value);
    transparent_crc(g_175.f3, "g_175.f3", print_hash_value);
    transparent_crc(g_175.f4, "g_175.f4", print_hash_value);
    transparent_crc(g_175.f5, "g_175.f5", print_hash_value);
    transparent_crc(g_265.f0, "g_265.f0", print_hash_value);
    transparent_crc(g_265.f1, "g_265.f1", print_hash_value);
    transparent_crc(g_265.f2, "g_265.f2", print_hash_value);
    transparent_crc(g_265.f3, "g_265.f3", print_hash_value);
    transparent_crc(g_265.f4, "g_265.f4", print_hash_value);
    transparent_crc(g_265.f5, "g_265.f5", print_hash_value);
    transparent_crc(g_266.f0, "g_266.f0", print_hash_value);
    transparent_crc(g_266.f1, "g_266.f1", print_hash_value);
    transparent_crc(g_266.f2, "g_266.f2", print_hash_value);
    transparent_crc(g_266.f3, "g_266.f3", print_hash_value);
    transparent_crc(g_266.f4, "g_266.f4", print_hash_value);
    transparent_crc(g_266.f5, "g_266.f5", print_hash_value);
    transparent_crc(g_297, "g_297", print_hash_value);
    transparent_crc(g_298, "g_298", print_hash_value);
    transparent_crc(g_301.f0, "g_301.f0", print_hash_value);
    transparent_crc(g_301.f1, "g_301.f1", print_hash_value);
    transparent_crc(g_301.f2, "g_301.f2", print_hash_value);
    transparent_crc(g_301.f3, "g_301.f3", print_hash_value);
    transparent_crc(g_301.f4, "g_301.f4", print_hash_value);
    transparent_crc(g_301.f5, "g_301.f5", print_hash_value);
    transparent_crc(g_306, "g_306", print_hash_value);
    transparent_crc(g_309, "g_309", print_hash_value);
    transparent_crc(g_326.f0, "g_326.f0", print_hash_value);
    transparent_crc(g_326.f1, "g_326.f1", print_hash_value);
    transparent_crc(g_326.f2, "g_326.f2", print_hash_value);
    transparent_crc(g_326.f3, "g_326.f3", print_hash_value);
    transparent_crc(g_326.f4, "g_326.f4", print_hash_value);
    transparent_crc(g_326.f5, "g_326.f5", print_hash_value);
    transparent_crc(g_418, "g_418", print_hash_value);
    transparent_crc(g_420, "g_420", print_hash_value);
    transparent_crc(g_421.f0, "g_421.f0", print_hash_value);
    transparent_crc(g_421.f1, "g_421.f1", print_hash_value);
    transparent_crc(g_421.f2, "g_421.f2", print_hash_value);
    transparent_crc(g_421.f3, "g_421.f3", print_hash_value);
    transparent_crc(g_421.f4, "g_421.f4", print_hash_value);
    transparent_crc(g_421.f5, "g_421.f5", print_hash_value);
    transparent_crc(g_475.f0, "g_475.f0", print_hash_value);
    transparent_crc(g_475.f1, "g_475.f1", print_hash_value);
    transparent_crc(g_475.f2, "g_475.f2", print_hash_value);
    transparent_crc(g_475.f3, "g_475.f3", print_hash_value);
    transparent_crc(g_475.f4, "g_475.f4", print_hash_value);
    transparent_crc(g_475.f5, "g_475.f5", print_hash_value);
    transparent_crc(g_476.f0, "g_476.f0", print_hash_value);
    transparent_crc(g_476.f1, "g_476.f1", print_hash_value);
    transparent_crc(g_476.f2, "g_476.f2", print_hash_value);
    transparent_crc(g_476.f3, "g_476.f3", print_hash_value);
    transparent_crc(g_476.f4, "g_476.f4", print_hash_value);
    transparent_crc(g_476.f5, "g_476.f5", print_hash_value);
    transparent_crc(g_487, "g_487", print_hash_value);
    transparent_crc(g_509.f0, "g_509.f0", print_hash_value);
    transparent_crc(g_509.f1, "g_509.f1", print_hash_value);
    transparent_crc(g_509.f2, "g_509.f2", print_hash_value);
    transparent_crc(g_509.f3, "g_509.f3", print_hash_value);
    transparent_crc(g_509.f4, "g_509.f4", print_hash_value);
    transparent_crc(g_509.f5, "g_509.f5", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_515[i], "g_515[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_526, "g_526", print_hash_value);
    transparent_crc(g_570.f0, "g_570.f0", print_hash_value);
    transparent_crc(g_570.f2, "g_570.f2", print_hash_value);
    transparent_crc(g_572, "g_572", print_hash_value);
    transparent_crc(g_582.f0, "g_582.f0", print_hash_value);
    transparent_crc(g_582.f2, "g_582.f2", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        transparent_crc(g_586[i].f0, "g_586[i].f0", print_hash_value);
        transparent_crc(g_586[i].f2, "g_586[i].f2", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_594.f0, "g_594.f0", print_hash_value);
    transparent_crc(g_594.f1, "g_594.f1", print_hash_value);
    transparent_crc(g_594.f2, "g_594.f2", print_hash_value);
    transparent_crc(g_594.f3, "g_594.f3", print_hash_value);
    transparent_crc(g_594.f4, "g_594.f4", print_hash_value);
    transparent_crc(g_594.f5, "g_594.f5", print_hash_value);
    transparent_crc(g_595.f0, "g_595.f0", print_hash_value);
    transparent_crc(g_595.f1, "g_595.f1", print_hash_value);
    transparent_crc(g_595.f2, "g_595.f2", print_hash_value);
    transparent_crc(g_595.f3, "g_595.f3", print_hash_value);
    transparent_crc(g_595.f4, "g_595.f4", print_hash_value);
    transparent_crc(g_595.f5, "g_595.f5", print_hash_value);
    transparent_crc(g_635, "g_635", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 9; j++)
        {
            transparent_crc(g_637[i][j], "g_637[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_705.f0, "g_705.f0", print_hash_value);
    transparent_crc(g_705.f2, "g_705.f2", print_hash_value);
    transparent_crc(g_722, "g_722", print_hash_value);
    transparent_crc(g_723.f0, "g_723.f0", print_hash_value);
    transparent_crc(g_723.f2, "g_723.f2", print_hash_value);
    transparent_crc(g_746.f0, "g_746.f0", print_hash_value);
    transparent_crc(g_746.f1, "g_746.f1", print_hash_value);
    transparent_crc(g_746.f2, "g_746.f2", print_hash_value);
    transparent_crc(g_746.f3, "g_746.f3", print_hash_value);
    transparent_crc(g_746.f4, "g_746.f4", print_hash_value);
    transparent_crc(g_746.f5, "g_746.f5", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 3; j++)
        {
            for (k = 0; k < 10; k++)
            {
                transparent_crc(g_747[i][j][k].f0, "g_747[i][j][k].f0", print_hash_value);
                transparent_crc(g_747[i][j][k].f1, "g_747[i][j][k].f1", print_hash_value);
                transparent_crc(g_747[i][j][k].f2, "g_747[i][j][k].f2", print_hash_value);
                transparent_crc(g_747[i][j][k].f3, "g_747[i][j][k].f3", print_hash_value);
                transparent_crc(g_747[i][j][k].f4, "g_747[i][j][k].f4", print_hash_value);
                transparent_crc(g_747[i][j][k].f5, "g_747[i][j][k].f5", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_787[i], "g_787[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_812.f0, "g_812.f0", print_hash_value);
    transparent_crc(g_812.f1, "g_812.f1", print_hash_value);
    transparent_crc(g_812.f2, "g_812.f2", print_hash_value);
    transparent_crc(g_812.f3, "g_812.f3", print_hash_value);
    transparent_crc(g_812.f4, "g_812.f4", print_hash_value);
    transparent_crc(g_812.f5, "g_812.f5", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_813[i][j][k].f0, "g_813[i][j][k].f0", print_hash_value);
                transparent_crc(g_813[i][j][k].f1, "g_813[i][j][k].f1", print_hash_value);
                transparent_crc(g_813[i][j][k].f2, "g_813[i][j][k].f2", print_hash_value);
                transparent_crc(g_813[i][j][k].f3, "g_813[i][j][k].f3", print_hash_value);
                transparent_crc(g_813[i][j][k].f4, "g_813[i][j][k].f4", print_hash_value);
                transparent_crc(g_813[i][j][k].f5, "g_813[i][j][k].f5", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_815.f0, "g_815.f0", print_hash_value);
    transparent_crc(g_815.f1, "g_815.f1", print_hash_value);
    transparent_crc(g_815.f2, "g_815.f2", print_hash_value);
    transparent_crc(g_815.f3, "g_815.f3", print_hash_value);
    transparent_crc(g_815.f4, "g_815.f4", print_hash_value);
    transparent_crc(g_815.f5, "g_815.f5", print_hash_value);
    transparent_crc(g_816.f0, "g_816.f0", print_hash_value);
    transparent_crc(g_816.f1, "g_816.f1", print_hash_value);
    transparent_crc(g_816.f2, "g_816.f2", print_hash_value);
    transparent_crc(g_816.f3, "g_816.f3", print_hash_value);
    transparent_crc(g_816.f4, "g_816.f4", print_hash_value);
    transparent_crc(g_816.f5, "g_816.f5", print_hash_value);
    transparent_crc(g_873, "g_873", print_hash_value);
    transparent_crc(g_916, "g_916", print_hash_value);
    transparent_crc(g_968.f0, "g_968.f0", print_hash_value);
    transparent_crc(g_968.f1, "g_968.f1", print_hash_value);
    transparent_crc(g_968.f2, "g_968.f2", print_hash_value);
    transparent_crc(g_968.f3, "g_968.f3", print_hash_value);
    transparent_crc(g_968.f4, "g_968.f4", print_hash_value);
    transparent_crc(g_968.f5, "g_968.f5", print_hash_value);
    transparent_crc(g_969.f0, "g_969.f0", print_hash_value);
    transparent_crc(g_969.f1, "g_969.f1", print_hash_value);
    transparent_crc(g_969.f2, "g_969.f2", print_hash_value);
    transparent_crc(g_969.f3, "g_969.f3", print_hash_value);
    transparent_crc(g_969.f4, "g_969.f4", print_hash_value);
    transparent_crc(g_969.f5, "g_969.f5", print_hash_value);
    transparent_crc(g_970.f0, "g_970.f0", print_hash_value);
    transparent_crc(g_970.f1, "g_970.f1", print_hash_value);
    transparent_crc(g_970.f2, "g_970.f2", print_hash_value);
    transparent_crc(g_970.f3, "g_970.f3", print_hash_value);
    transparent_crc(g_970.f4, "g_970.f4", print_hash_value);
    transparent_crc(g_970.f5, "g_970.f5", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 10; j++)
        {
            for (k = 0; k < 6; k++)
            {
                transparent_crc(g_973[i][j][k].f0, "g_973[i][j][k].f0", print_hash_value);
                transparent_crc(g_973[i][j][k].f1, "g_973[i][j][k].f1", print_hash_value);
                transparent_crc(g_973[i][j][k].f2, "g_973[i][j][k].f2", print_hash_value);
                transparent_crc(g_973[i][j][k].f3, "g_973[i][j][k].f3", print_hash_value);
                transparent_crc(g_973[i][j][k].f4, "g_973[i][j][k].f4", print_hash_value);
                transparent_crc(g_973[i][j][k].f5, "g_973[i][j][k].f5", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_974.f0, "g_974.f0", print_hash_value);
    transparent_crc(g_974.f1, "g_974.f1", print_hash_value);
    transparent_crc(g_974.f2, "g_974.f2", print_hash_value);
    transparent_crc(g_974.f3, "g_974.f3", print_hash_value);
    transparent_crc(g_974.f4, "g_974.f4", print_hash_value);
    transparent_crc(g_974.f5, "g_974.f5", print_hash_value);
    transparent_crc(g_992, "g_992", print_hash_value);
    transparent_crc(g_1003.f0, "g_1003.f0", print_hash_value);
    transparent_crc(g_1003.f1, "g_1003.f1", print_hash_value);
    transparent_crc(g_1003.f2, "g_1003.f2", print_hash_value);
    transparent_crc(g_1003.f3, "g_1003.f3", print_hash_value);
    transparent_crc(g_1003.f4, "g_1003.f4", print_hash_value);
    transparent_crc(g_1003.f5, "g_1003.f5", print_hash_value);
    transparent_crc(g_1004.f0, "g_1004.f0", print_hash_value);
    transparent_crc(g_1004.f1, "g_1004.f1", print_hash_value);
    transparent_crc(g_1004.f2, "g_1004.f2", print_hash_value);
    transparent_crc(g_1004.f3, "g_1004.f3", print_hash_value);
    transparent_crc(g_1004.f4, "g_1004.f4", print_hash_value);
    transparent_crc(g_1004.f5, "g_1004.f5", print_hash_value);
    transparent_crc(g_1040.f0, "g_1040.f0", print_hash_value);
    transparent_crc(g_1040.f1, "g_1040.f1", print_hash_value);
    transparent_crc(g_1040.f2, "g_1040.f2", print_hash_value);
    transparent_crc(g_1040.f3, "g_1040.f3", print_hash_value);
    transparent_crc(g_1040.f4, "g_1040.f4", print_hash_value);
    transparent_crc(g_1040.f5, "g_1040.f5", print_hash_value);
    transparent_crc(g_1069.f0, "g_1069.f0", print_hash_value);
    transparent_crc(g_1069.f1, "g_1069.f1", print_hash_value);
    transparent_crc(g_1069.f2, "g_1069.f2", print_hash_value);
    transparent_crc(g_1069.f3, "g_1069.f3", print_hash_value);
    transparent_crc(g_1069.f4, "g_1069.f4", print_hash_value);
    transparent_crc(g_1069.f5, "g_1069.f5", print_hash_value);
    transparent_crc(g_1079.f0, "g_1079.f0", print_hash_value);
    transparent_crc(g_1079.f1, "g_1079.f1", print_hash_value);
    transparent_crc(g_1079.f2, "g_1079.f2", print_hash_value);
    transparent_crc(g_1079.f3, "g_1079.f3", print_hash_value);
    transparent_crc(g_1079.f4, "g_1079.f4", print_hash_value);
    transparent_crc(g_1079.f5, "g_1079.f5", print_hash_value);
    transparent_crc(g_1096.f0, "g_1096.f0", print_hash_value);
    transparent_crc(g_1096.f1, "g_1096.f1", print_hash_value);
    transparent_crc(g_1096.f2, "g_1096.f2", print_hash_value);
    transparent_crc(g_1096.f3, "g_1096.f3", print_hash_value);
    transparent_crc(g_1096.f4, "g_1096.f4", print_hash_value);
    transparent_crc(g_1096.f5, "g_1096.f5", print_hash_value);
    transparent_crc(g_1100, "g_1100", print_hash_value);
    transparent_crc(g_1101.f0, "g_1101.f0", print_hash_value);
    transparent_crc(g_1101.f1, "g_1101.f1", print_hash_value);
    transparent_crc(g_1101.f2, "g_1101.f2", print_hash_value);
    transparent_crc(g_1101.f3, "g_1101.f3", print_hash_value);
    transparent_crc(g_1101.f4, "g_1101.f4", print_hash_value);
    transparent_crc(g_1101.f5, "g_1101.f5", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_1102[i][j][k].f0, "g_1102[i][j][k].f0", print_hash_value);
                transparent_crc(g_1102[i][j][k].f1, "g_1102[i][j][k].f1", print_hash_value);
                transparent_crc(g_1102[i][j][k].f2, "g_1102[i][j][k].f2", print_hash_value);
                transparent_crc(g_1102[i][j][k].f3, "g_1102[i][j][k].f3", print_hash_value);
                transparent_crc(g_1102[i][j][k].f4, "g_1102[i][j][k].f4", print_hash_value);
                transparent_crc(g_1102[i][j][k].f5, "g_1102[i][j][k].f5", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1139.f0, "g_1139.f0", print_hash_value);
    transparent_crc(g_1139.f1, "g_1139.f1", print_hash_value);
    transparent_crc(g_1139.f2, "g_1139.f2", print_hash_value);
    transparent_crc(g_1139.f3, "g_1139.f3", print_hash_value);
    transparent_crc(g_1139.f4, "g_1139.f4", print_hash_value);
    transparent_crc(g_1139.f5, "g_1139.f5", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 268
   depth: 1, occurrence: 33
XXX total union variables: 4

XXX non-zero bitfields defined in structs: 0
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 0
breakdown:
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 0
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 0
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 0

XXX max expression depth: 38
breakdown:
   depth: 1, occurrence: 207
   depth: 2, occurrence: 54
   depth: 3, occurrence: 6
   depth: 4, occurrence: 3
   depth: 5, occurrence: 4
   depth: 6, occurrence: 1
   depth: 7, occurrence: 1
   depth: 8, occurrence: 3
   depth: 13, occurrence: 1
   depth: 14, occurrence: 1
   depth: 15, occurrence: 2
   depth: 16, occurrence: 2
   depth: 17, occurrence: 1
   depth: 18, occurrence: 3
   depth: 19, occurrence: 1
   depth: 20, occurrence: 1
   depth: 21, occurrence: 2
   depth: 22, occurrence: 1
   depth: 23, occurrence: 1
   depth: 24, occurrence: 4
   depth: 25, occurrence: 1
   depth: 27, occurrence: 2
   depth: 28, occurrence: 2
   depth: 29, occurrence: 1
   depth: 33, occurrence: 1
   depth: 38, occurrence: 1

XXX total number of pointers: 294

XXX times a variable address is taken: 732
XXX times a pointer is dereferenced on RHS: 127
breakdown:
   depth: 1, occurrence: 106
   depth: 2, occurrence: 19
   depth: 3, occurrence: 1
   depth: 4, occurrence: 0
   depth: 5, occurrence: 1
XXX times a pointer is dereferenced on LHS: 166
breakdown:
   depth: 1, occurrence: 151
   depth: 2, occurrence: 15
XXX times a pointer is compared with null: 21
XXX times a pointer is compared with address of another variable: 6
XXX times a pointer is compared with another pointer: 6
XXX times a pointer is qualified to be dereferenced: 3812

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 638
   level: 2, occurrence: 154
   level: 3, occurrence: 19
   level: 4, occurrence: 2
   level: 5, occurrence: 5
XXX number of pointers point to pointers: 113
XXX number of pointers point to scalars: 164
XXX number of pointers point to structs: 12
XXX percent of pointers has null in alias set: 25.2
XXX average alias set size: 1.46

XXX times a non-volatile is read: 796
XXX times a non-volatile is write: 444
XXX times a volatile is read: 74
XXX    times read thru a pointer: 18
XXX times a volatile is write: 48
XXX    times written thru a pointer: 30
XXX times a volatile is available for access: 3.15e+03
XXX percentage of non-volatile access: 91

XXX forward jumps: 2
XXX backward jumps: 6

XXX stmts: 204
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 32
   depth: 1, occurrence: 27
   depth: 2, occurrence: 30
   depth: 3, occurrence: 32
   depth: 4, occurrence: 38
   depth: 5, occurrence: 45

XXX percentage a fresh-made variable is used: 19.6
XXX percentage an existing variable is used: 80.4
********************* end of statistics **********************/

