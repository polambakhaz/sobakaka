/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/stupefied_jones.cpp
 * Seed:      1623003792
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
#pragma pack(push)
#pragma pack(1)
struct S0 {
   volatile int16_t  f0;
   const int32_t  f1;
   int32_t  f2;
   volatile int16_t  f3;
   int32_t  f4;
   volatile int32_t  f5;
   volatile uint8_t  f6;
   volatile signed f7 : 21;
   uint32_t  f8;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
struct S1 {
   const volatile uint64_t  f0;
   volatile int64_t  f1;
   volatile int64_t  f2;
   int64_t  f3;
   uint64_t  f4;
};
#pragma pack(pop)

/* --- GLOBAL VARIABLES --- */
static const volatile uint32_t g_10 = 18446744073709551610UL;/* VOLATILE GLOBAL g_10 */
static uint64_t g_11 = 0UL;
static uint32_t g_34 = 0x353EA3A7L;
static uint8_t g_42 = 0UL;
static uint8_t g_72 = 0UL;
static uint8_t *g_71 = &g_72;
static int16_t g_79 = 5L;
static int32_t g_88 = 0xC76BF08EL;
static uint32_t g_124 = 0UL;
static uint32_t g_132 = 0x71313FE1L;
static uint8_t g_136 = 0x9FL;
static int64_t g_139 = 0xA29A6A910B13A75CLL;
static int32_t g_148 = 0xF3C6490BL;
static int64_t g_149 = (-7L);
static uint64_t g_151 = 1UL;
static int8_t g_161[1] = {0L};
static uint16_t g_162 = 0x2972L;
static int64_t g_166 = 0x7B5E453FC6319732LL;
static uint32_t *g_169 = &g_34;
static uint8_t g_185 = 0xB6L;
static int8_t g_190 = 0x30L;
static int32_t g_194[3] = {0L,0L,0L};
static struct S0 g_197 = {-8L,0L,0xBE24636BL,1L,0x48F47512L,0x4483B597L,1UL,940,0x194481F5L};/* VOLATILE GLOBAL g_197 */
static struct S0 g_198 = {1L,1L,-9L,0x20B4L,0xDF18D088L,0x286A1EBDL,0x7EL,-990,0x7040F244L};/* VOLATILE GLOBAL g_198 */
static struct S0 g_199 = {-1L,-1L,4L,0L,-9L,2L,0x8CL,1110,0x5373E3C2L};/* VOLATILE GLOBAL g_199 */
static struct S0 g_200 = {-1L,-2L,0x9D39519DL,1L,0L,1L,249UL,-652,0xF5C80580L};/* VOLATILE GLOBAL g_200 */
static struct S0 g_201 = {3L,0x9A46C974L,-10L,0x976AL,-8L,0x9622FFCBL,1UL,1069,0x698E65B9L};/* VOLATILE GLOBAL g_201 */
static struct S0 g_202 = {0x9AB6L,1L,-8L,0x7EDDL,0xF1602343L,0L,9UL,-993,0x5888CA29L};/* VOLATILE GLOBAL g_202 */
static struct S0 g_203 = {1L,-2L,0xCE9429D6L,-1L,0x9B34ADFAL,0xAF15EAAFL,0UL,1093,0x87A3C928L};/* VOLATILE GLOBAL g_203 */
static struct S0 g_204 = {-1L,7L,0x1E5EACDDL,0x55BCL,-10L,3L,248UL,898,2UL};/* VOLATILE GLOBAL g_204 */
static struct S0 g_205 = {-1L,0x2E77F79EL,0xFF3C3869L,-1L,0xAC625639L,0x120E9FE6L,0x08L,-602,0x727779B4L};/* VOLATILE GLOBAL g_205 */
static struct S0 g_206[3] = {{0x8C3BL,0L,0x7A2F4DF6L,0x7F8FL,1L,0x381652B8L,0x48L,1024,5UL},{0x8C3BL,0L,0x7A2F4DF6L,0x7F8FL,1L,0x381652B8L,0x48L,1024,5UL},{0x8C3BL,0L,0x7A2F4DF6L,0x7F8FL,1L,0x381652B8L,0x48L,1024,5UL}};
static struct S0 g_207 = {0x05C0L,9L,-7L,4L,0xE041843AL,8L,0x43L,1401,0xF77F4DF6L};/* VOLATILE GLOBAL g_207 */
static struct S0 g_208[4] = {{0x9C46L,0L,1L,-5L,-1L,0xA056DCA7L,0x67L,-276,0xF251F002L},{0x9C46L,0L,1L,-5L,-1L,0xA056DCA7L,0x67L,-276,0xF251F002L},{0x9C46L,0L,1L,-5L,-1L,0xA056DCA7L,0x67L,-276,0xF251F002L},{0x9C46L,0L,1L,-5L,-1L,0xA056DCA7L,0x67L,-276,0xF251F002L}};
static struct S0 g_209 = {0x0FA4L,9L,0xA9F56009L,-1L,-7L,0L,0x30L,8,18446744073709551615UL};/* VOLATILE GLOBAL g_209 */
static struct S0 g_212 = {1L,0xEB16AD88L,0xDD47E45AL,8L,0x8A93EDA4L,0L,1UL,-869,0x4E550A76L};/* VOLATILE GLOBAL g_212 */
static struct S0 *g_211 = &g_212;
static volatile int32_t g_284 = (-1L);/* VOLATILE GLOBAL g_284 */
static const volatile int32_t *g_283[5] = {&g_284,&g_284,&g_284,&g_284,&g_284};
static const volatile int32_t **g_282 = &g_283[3];
static struct S0 g_290 = {0xE9DAL,-7L,-1L,-3L,-6L,0L,0x05L,-210,2UL};/* VOLATILE GLOBAL g_290 */
static struct S0 g_301 = {0x6ACFL,-7L,1L,9L,0L,0x9E5EE9B9L,0xCCL,-1375,0x6CF623B8L};/* VOLATILE GLOBAL g_301 */
static uint16_t g_324 = 65535UL;
static int16_t g_354 = 0x3D65L;
static int32_t *g_382 = &g_204.f4;
static int32_t **g_381[6] = {&g_382,&g_382,&g_382,&g_382,&g_382,&g_382};
static int32_t g_428 = 0x219A541FL;
static int32_t * const g_427 = &g_428;
static int32_t * const *g_426 = &g_427;
static int32_t * const **g_425 = &g_426;
static int32_t g_441 = 0x515674DFL;
static uint64_t g_485 = 0xDB9A225837F951FFLL;
static uint8_t **g_557 = &g_71;
static volatile uint32_t g_594 = 0x67E3C8A0L;/* VOLATILE GLOBAL g_594 */
static volatile uint32_t g_595 = 18446744073709551609UL;/* VOLATILE GLOBAL g_595 */
static volatile uint32_t *g_593[4] = {&g_594,&g_594,&g_594,&g_594};
static volatile uint32_t * const *g_592 = &g_593[2];
static const int8_t **g_611[1] = {(void*)0};
static const int8_t ***g_610 = &g_611[0];
static const int64_t g_618 = 0x30299EC872CF7CFBLL;
static int32_t g_691 = 0x9DEA8204L;
static int8_t * const g_813 = &g_190;
static int8_t * const *g_812 = &g_813;
static int8_t g_816 = (-5L);
static struct S0 g_830 = {8L,-1L,2L,0x8542L,0x45BC3E1FL,0x5F748339L,0UL,33,0x6A74A656L};/* VOLATILE GLOBAL g_830 */
static uint8_t * const *g_856 = (void*)0;
static uint8_t * const **g_855 = &g_856;
static uint8_t * const ***g_854 = &g_855;
static uint8_t * const ****g_853 = &g_854;
static uint8_t *** const *g_860 = (void*)0;
static uint8_t *** const **g_859 = &g_860;
static uint32_t g_943 = 0x1855FB8FL;
static struct S0 g_993 = {0x768BL,7L,-1L,0xFCEEL,0x018BFE89L,0xD69901F8L,0x76L,1077,0x0439E718L};/* VOLATILE GLOBAL g_993 */
static int16_t g_1017 = (-6L);
static volatile struct S0 g_1157 = {0L,0x1F2C0040L,-7L,0x9BF7L,-9L,-1L,0x90L,-398,1UL};/* VOLATILE GLOBAL g_1157 */
static struct S0 ** volatile g_1191 = (void*)0;/* VOLATILE GLOBAL g_1191 */
static struct S0 ** const  volatile g_1192 = &g_211;/* VOLATILE GLOBAL g_1192 */
static uint16_t *g_1204 = &g_324;
static uint16_t * const *g_1203 = &g_1204;
static struct S1 g_1220 = {0x8754C70B163DD141LL,0xEC402760D71F396BLL,0xF676C93DFF677177LL,-1L,0xE89BF2ADB5C6065DLL};/* VOLATILE GLOBAL g_1220 */
static struct S1 *g_1222 = &g_1220;
static struct S1 ** volatile g_1221[10][4] = {{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222},{&g_1222,&g_1222,&g_1222,&g_1222}};
static struct S0 **g_1234 = &g_211;
static struct S0 ***g_1233[8][10] = {{&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234},{(void*)0,&g_1234,(void*)0,&g_1234,&g_1234,&g_1234,(void*)0,&g_1234,(void*)0,&g_1234},{&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234},{(void*)0,&g_1234,(void*)0,&g_1234,&g_1234,&g_1234,(void*)0,&g_1234,(void*)0,&g_1234},{&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234},{(void*)0,&g_1234,(void*)0,&g_1234,&g_1234,&g_1234,(void*)0,&g_1234,(void*)0,&g_1234},{&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234,&g_1234},{(void*)0,&g_1234,(void*)0,&g_1234,&g_1234,&g_1234,(void*)0,&g_1234,(void*)0,&g_1234}};
static const uint8_t *g_1239 = &g_42;
static const uint8_t **g_1238[5][2] = {{(void*)0,&g_1239},{(void*)0,&g_1239},{(void*)0,&g_1239},{(void*)0,&g_1239},{(void*)0,&g_1239}};
static volatile int32_t * volatile g_1274 = &g_284;/* VOLATILE GLOBAL g_1274 */
static struct S1 g_1309[8][8][4] = {{{{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}},{{0UL,0x4D3DBAFFD532D2F4LL,1L,0L,18446744073709551611UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{0x0D864C044E088F08LL,1L,0x19904AEBC9FEDFD1LL,0x3BD6A2ABA334AC35LL,0UL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0xAFB6467C5E42B15FLL,6L,-1L,0xA2E20BD801BF5226LL,18446744073709551615UL},{0xE7119E84CC7952C6LL,0x709B8E60CBC13324LL,-1L,-6L,0x2BEC6FA95FAED603LL},{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL}},{{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0x829F2F6D4C42BD9ELL,0xC5C5A88F01E0011CLL,-6L,8L,0x7533C1F922EA6298LL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0xAF754315159627EALL,1L,1L,-1L,8UL}},{{0xD16F029653A3DD6CLL,1L,1L,0xDE13ACD8DDCBF0C4LL,18446744073709551612UL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL}},{{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{18446744073709551610UL,0x30B0BC800BB3AD1DLL,0L,0x4852A6F3643D35FELL,18446744073709551606UL},{0x9C74DDC89D2A7213LL,0x859CA2A6D47EA50ALL,2L,-1L,18446744073709551606UL},{1UL,-7L,6L,3L,18446744073709551614UL}},{{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{0x0D864C044E088F08LL,1L,0x19904AEBC9FEDFD1LL,0x3BD6A2ABA334AC35LL,0UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL},{0x0D864C044E088F08LL,1L,0x19904AEBC9FEDFD1LL,0x3BD6A2ABA334AC35LL,0UL}},{{18446744073709551610UL,0x30B0BC800BB3AD1DLL,0L,0x4852A6F3643D35FELL,18446744073709551606UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL},{0xAF754315159627EALL,1L,1L,-1L,8UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL}}},{{{0UL,0x4D3DBAFFD532D2F4LL,1L,0L,18446744073709551611UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0xECA6D9F1286327FELL,6L,-1L,0xF936E33DC9A4EC46LL,3UL}},{{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0xAFB6467C5E42B15FLL,6L,-1L,0xA2E20BD801BF5226LL,18446744073709551615UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL}},{{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{18446744073709551610UL,0x30B0BC800BB3AD1DLL,0L,0x4852A6F3643D35FELL,18446744073709551606UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{0UL,0x4D3DBAFFD532D2F4LL,1L,0L,18446744073709551611UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{0xAF754315159627EALL,1L,1L,-1L,8UL},{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL}},{{18446744073709551610UL,0x30B0BC800BB3AD1DLL,0L,0x4852A6F3643D35FELL,18446744073709551606UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL},{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL}},{{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{0UL,0x4D3DBAFFD532D2F4LL,1L,0L,18446744073709551611UL},{0x9C74DDC89D2A7213LL,0x859CA2A6D47EA50ALL,2L,-1L,18446744073709551606UL},{0xECA6D9F1286327FELL,6L,-1L,0xF936E33DC9A4EC46LL,3UL}},{{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{0x9C74DDC89D2A7213LL,0x859CA2A6D47EA50ALL,2L,-1L,18446744073709551606UL}},{{0xD16F029653A3DD6CLL,1L,1L,0xDE13ACD8DDCBF0C4LL,18446744073709551612UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0xD16F029653A3DD6CLL,1L,1L,0xDE13ACD8DDCBF0C4LL,18446744073709551612UL}}},{{{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0x0D864C044E088F08LL,1L,0x19904AEBC9FEDFD1LL,0x3BD6A2ABA334AC35LL,0UL},{0xE7119E84CC7952C6LL,0x709B8E60CBC13324LL,-1L,-6L,0x2BEC6FA95FAED603LL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{0xAF754315159627EALL,1L,1L,-1L,8UL}},{{0UL,0x4D3DBAFFD532D2F4LL,1L,0L,18446744073709551611UL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL},{0xAF754315159627EALL,1L,1L,-1L,8UL}},{{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL}},{{0xAF754315159627EALL,1L,1L,-1L,8UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{1UL,-7L,6L,3L,18446744073709551614UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL}},{{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0x8F3B60ABAF94BFF9LL,5L,0x72A8E22FB3AFDA1DLL,-1L,18446744073709551614UL}}},{{{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{0x9543147D090420ADLL,0xB420E02068636CBDLL,-9L,-7L,18446744073709551615UL},{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}},{{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL}},{{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL}},{{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0xAF754315159627EALL,1L,1L,-1L,8UL}},{{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}}},{{{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0x8BAE23567E74E3ADLL,0xA73D7DCC4DBF91D5LL,0xD28ED578EAF4A420LL,0x093015ED81EC04B2LL,18446744073709551615UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0x8F3B60ABAF94BFF9LL,5L,0x72A8E22FB3AFDA1DLL,-1L,18446744073709551614UL}},{{0xAF754315159627EALL,1L,1L,-1L,8UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0xE7119E84CC7952C6LL,0x709B8E60CBC13324LL,-1L,-6L,0x2BEC6FA95FAED603LL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL}},{{0x5A78C92C4AA1277DLL,0x2821A1C89094CE63LL,5L,1L,0x72A1D610D61157EDLL},{1UL,-7L,6L,3L,18446744073709551614UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{0xE7119E84CC7952C6LL,0x709B8E60CBC13324LL,-1L,-6L,0x2BEC6FA95FAED603LL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{1UL,-7L,6L,3L,18446744073709551614UL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL}},{{1UL,-7L,6L,3L,18446744073709551614UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0xE2D19C3B5499E80ALL,-1L,0x82CBF52574C8696DLL,-1L,18446744073709551607UL},{0x8F3B60ABAF94BFF9LL,5L,0x72A8E22FB3AFDA1DLL,-1L,18446744073709551614UL}},{{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{1UL,-7L,6L,3L,18446744073709551614UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL}},{{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{0x8BAE23567E74E3ADLL,0xA73D7DCC4DBF91D5LL,0xD28ED578EAF4A420LL,0x093015ED81EC04B2LL,18446744073709551615UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}}},{{{0x5A78C92C4AA1277DLL,0x2821A1C89094CE63LL,5L,1L,0x72A1D610D61157EDLL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0xAF754315159627EALL,1L,1L,-1L,8UL}},{{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL}},{{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{1UL,-7L,6L,3L,18446744073709551614UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0x5A78C92C4AA1277DLL,0x2821A1C89094CE63LL,5L,1L,0x72A1D610D61157EDLL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{1UL,-7L,6L,3L,18446744073709551614UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}},{{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0x9543147D090420ADLL,0xB420E02068636CBDLL,-9L,-7L,18446744073709551615UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{0x8F3B60ABAF94BFF9LL,5L,0x72A8E22FB3AFDA1DLL,-1L,18446744073709551614UL}}},{{{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{0x5A78C92C4AA1277DLL,0x2821A1C89094CE63LL,5L,1L,0x72A1D610D61157EDLL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL}},{{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{1UL,-7L,6L,3L,18446744073709551614UL},{1UL,-7L,6L,3L,18446744073709551614UL},{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL}},{{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0xE2D19C3B5499E80ALL,-1L,0x82CBF52574C8696DLL,-1L,18446744073709551607UL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{1UL,-7L,6L,3L,18446744073709551614UL},{0x9543147D090420ADLL,0xB420E02068636CBDLL,-9L,-7L,18446744073709551615UL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL}},{{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{0UL,-1L,0x55B3430E978CABDBLL,0L,0UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL}},{{0x5A78C92C4AA1277DLL,0x2821A1C89094CE63LL,5L,1L,0x72A1D610D61157EDLL},{0x9543147D090420ADLL,0xB420E02068636CBDLL,-9L,-7L,18446744073709551615UL},{0xE7119E84CC7952C6LL,0x709B8E60CBC13324LL,-1L,-6L,0x2BEC6FA95FAED603LL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{0xAF754315159627EALL,1L,1L,-1L,8UL},{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL},{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL}}},{{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{1UL,-7L,6L,3L,18446744073709551614UL},{18446744073709551615UL,0x4CD57D2FBE274AA0LL,3L,0xDAD65DD72024543CLL,6UL},{0x860289B43A5D7782LL,-1L,0x3A24CF8E46737BF7LL,0xB420F2752BF40C1BLL,18446744073709551615UL}},{{18446744073709551615UL,0x22C21269D1733CD1LL,0xBE4DF9C384BD477BLL,0x4FB325F05AA9B774LL,0UL},{18446744073709551615UL,1L,9L,0xA1C1CE3882E85B95LL,0xFACE575A48593AF1LL},{18446744073709551614UL,0x2B674195243B868ELL,1L,0xC13DC7EADA3BFFD9LL,0xAA5A5E96D49CC389LL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{0x4A1987EAC7EDA3DCLL,0x26D325F12D349551LL,0xD517E78DF3F259D8LL,0x54CEA883FB223343LL,18446744073709551606UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0x8F3B60ABAF94BFF9LL,5L,0x72A8E22FB3AFDA1DLL,-1L,18446744073709551614UL}},{{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{0x9543147D090420ADLL,0xB420E02068636CBDLL,-9L,-7L,18446744073709551615UL},{18446744073709551615UL,0x6EECE10E510425ECLL,0x25BE53EDD5B4F169LL,-10L,6UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL}},{{1UL,0x38016266C649CD09LL,0x04B77E6E94782147LL,0L,0x25F7233EED47FCD5LL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{0x2610F9ACD789FC86LL,-2L,1L,1L,1UL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{1UL,0x8E17AB1BF97660AELL,1L,5L,0xFC7CF18DFE17C54CLL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL}},{{5UL,0xEDD7BA06FE7505B1LL,0x5C96EA58DD65A18FLL,6L,18446744073709551612UL},{5UL,0L,0x9B6FF64B0F48A56CLL,0x326C427BED192EADLL,0x3DDD1D4D571A63CBLL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL},{0xC3A410A304C89BD7LL,1L,0x2C8587EA5CCAEAE3LL,0L,0x8194BDB133A4C310LL}},{{0x08954551D6DF6786LL,-6L,-1L,0x9FF379A89FD48696LL,18446744073709551615UL},{18446744073709551614UL,0x69626F3864A67A5CLL,0x218821808200867CLL,0x0C3EA64969EA042DLL,1UL},{6UL,-3L,0xBEA7B3AF2D39D91ALL,-3L,0UL},{0xD381F955DAC82B9ELL,0x64A1AB970AEE57B2LL,0xA99294AD35932DD4LL,-3L,5UL}}}};
static struct S0 g_1347 = {0xDD2DL,0xD411C9DBL,-1L,0x9886L,-6L,0x25B1DBCDL,0xC0L,-548,0UL};/* VOLATILE GLOBAL g_1347 */
static volatile uint32_t g_1443 = 0UL;/* VOLATILE GLOBAL g_1443 */
static uint32_t **g_1449 = &g_169;
static uint32_t *** volatile g_1448 = &g_1449;/* VOLATILE GLOBAL g_1448 */
static uint32_t *** volatile *g_1447 = &g_1448;
static uint32_t ***g_1451 = &g_1449;
static uint32_t ****g_1450 = &g_1451;
static int8_t g_1456 = 0x0EL;
static volatile uint32_t g_1496[2] = {4294967294UL,4294967294UL};
static struct S0 g_1512[10] = {{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL},{5L,1L,0x776AE408L,1L,0x15E0B377L,0L,0UL,205,0xF94FA80DL}};
static int32_t ** volatile g_1527 = (void*)0;/* VOLATILE GLOBAL g_1527 */
static int32_t ** volatile g_1528[8][3] = {{(void*)0,&g_382,(void*)0},{&g_382,&g_382,&g_382},{(void*)0,&g_382,(void*)0},{&g_382,&g_382,&g_382},{(void*)0,&g_382,(void*)0},{&g_382,&g_382,&g_382},{(void*)0,&g_382,(void*)0},{&g_382,&g_382,&g_382}};
static struct S1 g_1544 = {18446744073709551606UL,0x5FA9A1F8B8010456LL,0x9AD015D6C0297707LL,0L,18446744073709551606UL};/* VOLATILE GLOBAL g_1544 */


/* --- FORWARD DECLARATIONS --- */
static uint64_t  func_1(void);
static int64_t  func_6(uint32_t  p_7, int32_t  p_8);
static int64_t  func_12(int32_t  p_13, const int32_t  p_14, int32_t  p_15, int32_t  p_16, int32_t  p_17);
static int32_t  func_18(const int32_t  p_19, int16_t  p_20, int16_t  p_21);
static const uint8_t  func_28(int32_t  p_29, const int32_t  p_30, int32_t  p_31, uint32_t  p_32);
static int32_t  func_45(uint8_t * p_46, uint8_t  p_47);
static int32_t  func_48(uint64_t  p_49);
static uint16_t  func_52(uint16_t  p_53, int64_t  p_54, uint32_t * p_55, int32_t  p_56);
static const int8_t  func_64(const int64_t  p_65, uint8_t * p_66, int16_t  p_67, uint8_t  p_68);
static uint8_t * func_69(uint32_t * p_70);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_10 g_11 g_34 g_42 g_71 g_72 g_88 g_79 g_124 g_132 g_136 g_151 g_162 g_161 g_185 g_149 g_148 g_382 g_204.f4 g_197.f2 g_197.f8 g_425 g_426 g_427 g_428 g_166 g_691 g_197.f4 g_200.f1 g_618 g_592 g_593 g_354 g_301.f4 g_203.f1 g_198.f4 g_203.f8 g_202.f2 g_812 g_441 g_557 g_203.f2 g_211 g_381 g_202.f8 g_199.f2 g_813 g_190 g_853 g_290.f8 g_212.f2 g_816 g_203.f4 g_202.f1 g_324 g_993.f2 g_830.f2 g_610 g_611 g_943 g_199.f4 g_301.f8 g_290.f2
 * writes: g_34 g_42 g_79 g_88 g_132 g_139 g_151 g_161 g_72 g_162 g_166 g_169 g_185 g_190 g_211 g_204.f4 g_428 g_201.f8 g_354 g_324 g_301.f4 g_205.f4 g_149 g_201.f4 g_557 g_381 g_382 g_136 g_205.f2 g_203.f2 g_859 g_943 g_207.f2 g_441 g_148
 */
static uint64_t  func_1(void)
{ /* block id: 0 */
    uint16_t l_9[9] = {0xC9C3L,65535UL,65535UL,0xC9C3L,65535UL,65535UL,0xC9C3L,65535UL,65535UL};
    int32_t l_704 = 0xE6719E3AL;
    int32_t *l_1054 = &g_201.f4;
    uint16_t ***l_1070 = (void*)0;
    uint16_t ****l_1069 = &l_1070;
    uint32_t l_1076[6][1][5] = {{{18446744073709551615UL,0x1BE0410BL,0x1BE0410BL,18446744073709551615UL,0x1BE0410BL}},{{18446744073709551615UL,18446744073709551615UL,18446744073709551615UL,18446744073709551615UL,18446744073709551615UL}},{{0x1BE0410BL,18446744073709551615UL,0x1BE0410BL,0x1BE0410BL,18446744073709551615UL}},{{18446744073709551615UL,0x1BE0410BL,0x1BE0410BL,18446744073709551615UL,0x1BE0410BL}},{{18446744073709551615UL,18446744073709551615UL,18446744073709551615UL,18446744073709551615UL,18446744073709551615UL}},{{0x1BE0410BL,18446744073709551615UL,0x1BE0410BL,0x1BE0410BL,18446744073709551615UL}}};
    int32_t l_1079 = 8L;
    int32_t l_1080 = 2L;
    uint8_t l_1081 = 1UL;
    uint16_t l_1092[7] = {1UL,1UL,1UL,1UL,1UL,1UL,1UL};
    int32_t l_1177 = (-6L);
    int8_t *l_1183 = &g_816;
    int8_t **l_1182 = &l_1183;
    uint32_t **l_1208 = &g_169;
    uint32_t ***l_1207 = &l_1208;
    struct S1 *l_1219[7] = {&g_1220,(void*)0,&g_1220,&g_1220,(void*)0,&g_1220,&g_1220};
    volatile int32_t * volatile l_1275[5][1];
    int32_t ***l_1308 = &g_381[0];
    int32_t ****l_1307 = &l_1308;
    int32_t l_1351 = 0xDE89D3AEL;
    uint64_t *l_1368 = &g_1309[3][6][2].f4;
    int32_t l_1429 = 0x8DDF0359L;
    int64_t l_1444[6] = {5L,5L,0x6B14F198AE70BC54LL,5L,5L,0x6B14F198AE70BC54LL};
    struct S0 *l_1511 = &g_1512[6];
    struct S0 *l_1513 = &g_199;
    uint8_t l_1521 = 0x07L;
    int16_t l_1547 = 1L;
    int i, j, k;
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 1; j++)
            l_1275[i][j] = &g_1157.f4;
    }
    (*l_1054) = ((**g_426) = (safe_mul_func_uint16_t_u_u(((safe_div_func_int64_t_s_s(((func_6(l_9[3], (g_10 , l_9[1])) & g_11) < l_9[3]), (1UL || func_12(func_18((l_9[1] ^ (0xFFL < 0x1CL)), l_9[3], g_11), g_200.f1, l_9[8], l_9[3], l_704)))) == g_290.f2), 0x721BL)));
    for (g_148 = 28; (g_148 < 14); --g_148)
    { /* block id: 447 */
        uint64_t *l_1061 = &g_485;
        int32_t l_1062[1][9];
        int32_t l_1093 = 0x2416CC87L;
        int8_t l_1098[4] = {0x81L,0x81L,0x81L,0x81L};
        uint16_t **l_1134 = (void*)0;
        int32_t l_1150 = (-5L);
        uint8_t l_1165 = 0x93L;
        const uint64_t l_1202 = 0UL;
        uint32_t l_1228 = 5UL;
        uint32_t l_1273 = 4UL;
        uint32_t l_1342 = 0x75028388L;
        int i, j;
        for (i = 0; i < 1; i++)
        {
            for (j = 0; j < 9; j++)
                l_1062[i][j] = 5L;
        }
    }
    return g_816;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int64_t  func_6(uint32_t  p_7, int32_t  p_8)
{ /* block id: 1 */
    return p_8;
}


/* ------------------------------------------ */
/* 
 * reads : g_618 g_592 g_593 g_426 g_427 g_428 g_11 g_301.f4 g_354 g_71 g_72 g_79 g_166 g_203.f1 g_198.f4 g_203.f8 g_149 g_202.f2 g_812 g_441 g_557 g_203.f2 g_691 g_382 g_204.f4 g_211 g_381 g_136 g_425 g_202.f8 g_162 g_199.f2 g_813 g_190 g_853 g_124 g_290.f8 g_161 g_212.f2 g_816 g_197.f8 g_203.f4 g_202.f1 g_324 g_993.f2 g_830.f2 g_610 g_611 g_943 g_199.f4 g_301.f8 g_205.f2 g_34
 * writes: g_161 g_324 g_301.f4 g_205.f4 g_149 g_166 g_428 g_201.f4 g_185 g_557 g_132 g_381 g_382 g_136 g_204.f4 g_211 g_190 g_205.f2 g_203.f2 g_859 g_79 g_34 g_139 g_943 g_207.f2 g_162 g_354 g_441
 */
static int64_t  func_12(int32_t  p_13, const int32_t  p_14, int32_t  p_15, int32_t  p_16, int32_t  p_17)
{ /* block id: 302 */
    int8_t *l_707 = &g_161[0];
    uint32_t l_708[6];
    uint16_t *l_717 = (void*)0;
    uint16_t *l_718 = &g_324;
    int32_t l_767 = 0x849B1D10L;
    uint32_t *l_791 = &g_207.f8;
    uint32_t **l_790 = &l_791;
    uint32_t ***l_789 = &l_790;
    int32_t **l_821 = &g_382;
    uint32_t l_845 = 0xBEEBAE8CL;
    struct S0 **l_876 = (void*)0;
    struct S0 ***l_875 = &l_876;
    uint64_t l_897 = 0x3E1CFF72390DE402LL;
    uint16_t *l_965 = (void*)0;
    int32_t *l_1034[2];
    const uint16_t *l_1042 = &g_162;
    const uint16_t **l_1041 = &l_1042;
    const uint16_t ***l_1040 = &l_1041;
    uint16_t l_1053 = 0xB15EL;
    int i;
    for (i = 0; i < 6; i++)
        l_708[i] = 18446744073709551613UL;
    for (i = 0; i < 2; i++)
        l_1034[i] = &g_441;
    if ((((safe_div_func_int8_t_s_s(((*l_707) = p_17), p_15)) , (l_708[2]++)) && (safe_div_func_int64_t_s_s((safe_sub_func_uint32_t_u_u((((*l_718) = (p_13 ^ (safe_sub_func_uint64_t_u_u(g_618, (p_13 < ((l_708[2] > (((p_15 && 0x8EL) & ((((*g_592) != &l_708[2]) ^ p_13) == l_708[2])) & l_708[2])) && p_13)))))) == 3L), (**g_426))), g_11))))
    { /* block id: 306 */
        int64_t l_756 = (-1L);
        uint8_t *l_757 = (void*)0;
        uint32_t l_758 = 1UL;
        uint64_t l_761 = 0xE10E040E521611C5LL;
        int64_t l_764 = 0x81701C0354AA8702LL;
        struct S0 ** const l_765 = &g_211;
        uint16_t l_779[7][1][7] = {{{0UL,0xD096L,0xD096L,0UL,65535UL,0UL,0xD096L}},{{0x5CD1L,0x07AFL,1UL,0xBFC0L,1UL,0x07AFL,0x5CD1L}},{{0UL,0xD096L,0UL,0xD096L,0UL,0UL,0xD096L}},{{0xECDEL,0UL,0xECDEL,0UL,1UL,0UL,4UL}},{{0xD096L,65535UL,0UL,0UL,65535UL,0xD096L,65535UL}},{{0xECDEL,0UL,1UL,0UL,4UL,0UL,1UL}},{{0UL,0UL,0xD096L,0UL,0xD096L,0UL,0UL}}};
        uint32_t *l_786 = &g_209.f8;
        uint32_t **l_785 = &l_786;
        uint32_t ***l_784 = &l_785;
        int32_t l_794[3][8][6] = {{{(-6L),0x6733D8E0L,0xEB4B7CA5L,0L,1L,0x683DDE78L},{0x3AA2E8A9L,0L,(-1L),0x5FA7A5ADL,0xE8D50832L,1L},{0L,(-10L),(-8L),0x44519145L,1L,0x88F5F884L},{(-10L),0xF4741C5DL,(-1L),0xEB4B7CA5L,1L,1L},{1L,0x2A23A668L,0x2A23A668L,1L,(-1L),(-6L)},{0L,(-1L),0xE427F4D5L,1L,0xF61235C4L,0x4328E447L},{(-1L),0xAFC04379L,0L,0x65B5F8CAL,0xF61235C4L,0L},{0xF0951DD4L,(-1L),1L,0x43DC2DCBL,(-1L),0x04A18843L}},{{(-4L),0x2A23A668L,0L,0x3560EAD4L,1L,0x5FA7A5ADL},{0x88F5F884L,0xF4741C5DL,1L,1L,0x65B5F8CAL,0x5FA7A5ADL},{1L,0x43DC2DCBL,0x683DDE78L,0L,(-10L),0xB67F49F4L},{0L,0xA9792B73L,0xE427F4D5L,0x9D0FB1B7L,0xDA8D4C7CL,0xF4741C5DL},{0x88F5F884L,0x5FA7A5ADL,1L,0xF61235C4L,0xB67F49F4L,0x44519145L},{0x5F0E2775L,0L,0xDA8D4C7CL,(-10L),1L,(-10L)},{1L,0xB67F49F4L,1L,0xD0565D68L,0xF4741C5DL,1L},{0xA9792B73L,0x3A666ED2L,(-2L),0x5FA7A5ADL,0L,7L}},{{0L,0xEB4B7CA5L,(-1L),0x5FA7A5ADL,(-9L),0xD0565D68L},{0xA9792B73L,0x6733D8E0L,(-1L),0xD0565D68L,0x5FA7A5ADL,(-1L)},{1L,0xAFC04379L,(-6L),(-10L),1L,(-2L)},{0x5F0E2775L,0L,0x9D0FB1B7L,0xF61235C4L,(-1L),0xDA8D4C7CL},{0x88F5F884L,1L,(-2L),0x9D0FB1B7L,(-4L),0xEB4B7CA5L},{0L,0xF61235C4L,0x65B5F8CAL,0L,0xAFC04379L,(-1L)},{1L,9L,0xAFC04379L,1L,0x2C38627FL,0xA9792B73L},{(-9L),0L,9L,0x5F0E2775L,0x5F0E2775L,9L}}};
        int i, j, k;
        for (g_301.f4 = 2; (g_301.f4 > 13); ++g_301.f4)
        { /* block id: 309 */
            uint16_t l_725 = 0x6F87L;
            int32_t l_760[10][6][4] = {{{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)},{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)}},{{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)},{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)}},{{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)},{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)}},{{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)},{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{1L,0x00CB7D0DL,(-1L),(-1L)}},{{(-1L),(-1L),(-1L),0x00CB7D0DL},{1L,(-1L),0x9B4DC2C9L,(-1L)},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}},{{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}},{{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}},{{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}},{{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}},{{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL},{0x9B4DC2C9L,0x00CB7D0DL,0x9B4DC2C9L,0x891D3509L},{(-1L),0x00CB7D0DL,1L,0x00CB7D0DL},{(-1L),0x891D3509L,0x9B4DC2C9L,0x00CB7D0DL}}};
            int8_t * const l_815 = &g_816;
            int8_t * const *l_814 = &l_815;
            struct S0 *l_829 = &g_830;
            int i, j, k;
            for (g_205.f4 = 0; (g_205.f4 < (-1)); --g_205.f4)
            { /* block id: 312 */
                struct S0 **l_727[6];
                struct S0 ***l_726 = &l_727[0];
                uint64_t *l_759[7] = {&g_485,&g_485,&g_485,&g_485,&g_485,&g_485,&g_485};
                int64_t *l_762 = (void*)0;
                int64_t *l_763[10][7] = {{&l_756,&l_756,(void*)0,&l_756,&l_756,&g_166,(void*)0},{&l_756,&g_149,(void*)0,(void*)0,(void*)0,&g_149,&l_756},{&l_756,&g_166,&g_139,&g_166,&g_166,&g_139,&g_166},{&l_756,(void*)0,&g_149,&g_149,(void*)0,&g_149,&g_166},{&l_756,&g_139,&l_756,(void*)0,&g_139,&g_166,&g_139},{&g_149,&g_166,&g_166,&g_149,&g_166,&g_166,(void*)0},{&g_166,&g_139,&l_756,&g_166,&g_166,(void*)0,&g_166},{(void*)0,&g_166,(void*)0,&g_149,(void*)0,&g_166,(void*)0},{&g_139,(void*)0,(void*)0,&g_166,(void*)0,&g_149,&l_756},{(void*)0,&l_756,&g_166,(void*)0,&g_149,&g_149,(void*)0}};
                int32_t l_766 = (-2L);
                int32_t *l_768 = (void*)0;
                int32_t *l_769 = &l_766;
                int32_t *l_770 = &g_691;
                int32_t *l_771 = &g_194[0];
                int32_t *l_772 = (void*)0;
                int32_t *l_773 = &l_760[8][1][3];
                int32_t *l_774 = &g_197.f4;
                int32_t *l_775 = &l_766;
                int32_t *l_776 = &g_441;
                int32_t *l_777 = &l_766;
                int32_t *l_778 = &g_206[2].f4;
                int i, j;
                for (i = 0; i < 6; i++)
                    l_727[i] = (void*)0;
                (*g_427) = (safe_add_func_int8_t_s_s((((l_725 && (((*l_726) = &g_211) != (((((safe_rshift_func_uint8_t_u_u((safe_mod_func_uint8_t_u_u(0x0EL, ((safe_div_func_int64_t_s_s(((g_166 |= (g_149 = ((safe_mul_func_uint8_t_u_u(((l_760[9][0][2] = ((safe_rshift_func_int16_t_s_s((((*l_707) = (&g_557 == ((((safe_mul_func_uint16_t_u_u((safe_sub_func_int8_t_s_s((249UL ^ (safe_sub_func_int16_t_s_s(((safe_rshift_func_int16_t_s_s((safe_mul_func_int16_t_s_s((safe_lshift_func_int8_t_s_s(((((4294967290UL <= (safe_mul_func_uint16_t_u_u((((safe_lshift_func_int8_t_s_s(1L, 6)) , (safe_rshift_func_int16_t_s_u(l_756, ((((void*)0 == l_757) ^ l_725) == p_16)))) || g_354), l_725))) , (-9L)) , l_758) >= (*g_71)), l_708[2])), l_708[5])), 3)) ^ g_301.f4), p_14))), l_725)), p_14)) || p_15) ^ p_17) , (void*)0))) ^ (*g_71)), l_725)) == 0L)) == 7L), l_761)) , g_79))) < g_203.f1), 0x285C02DEE4480774LL)) && l_708[2]))), p_15)) , g_203.f1) & g_198.f4) >= l_764) , l_765))) | g_203.f8) , l_766), 0x7BL));
                l_779[6][0][6]--;
                for (g_201.f4 = (-21); (g_201.f4 == (-9)); g_201.f4 = safe_add_func_uint16_t_u_u(g_201.f4, 7))
                { /* block id: 322 */
                    uint32_t ****l_787 = (void*)0;
                    uint32_t ****l_788[6];
                    int i;
                    for (i = 0; i < 6; i++)
                        l_788[i] = &l_784;
                    l_789 = l_784;
                    return g_149;
                }
                for (g_185 = 0; (g_185 <= 0); g_185 += 1)
                { /* block id: 328 */
                    uint8_t ***l_805 = &g_557;
                    uint8_t **l_806 = &l_757;
                    uint32_t *l_807 = &g_132;
                    int32_t l_817 = 0xECB8091BL;
                    int32_t ***l_822 = (void*)0;
                    int32_t ***l_823 = &g_381[0];
                    uint8_t *****l_824 = (void*)0;
                    (**g_426) = (((safe_sub_func_uint8_t_u_u(0UL, l_794[2][6][0])) & (safe_sub_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u((safe_mul_func_int8_t_s_s((safe_mul_func_int16_t_s_s((safe_sub_func_uint32_t_u_u((((l_767 & ((void*)0 != l_718)) & (((*l_805) = &g_71) == l_806)) >= ((*l_807) = l_779[6][0][6])), 5L)), l_758)), p_17)), 14)), g_202.f2))) >= 0x8A93L);
                    if ((((l_817 = (safe_mul_func_uint8_t_u_u((l_767 > 0x6E0F800CL), (safe_rshift_func_uint16_t_u_u(((l_814 = g_812) != (void*)0), 9))))) & (7UL || (*l_776))) ^ ((((((!(**g_557)) , (safe_mul_func_int16_t_s_s(g_203.f2, (((*l_823) = l_821) != (void*)0)))) , (void*)0) == l_824) && (*l_770)) , p_14)))
                    { /* block id: 335 */
                        const int32_t *l_828 = &g_197.f4;
                        const int32_t **l_827 = &l_828;
                        const int32_t ***l_826[1];
                        const int32_t ****l_825 = &l_826[0];
                        int i;
                        for (i = 0; i < 1; i++)
                            l_826[i] = &l_827;
                        (*l_773) |= (*g_382);
                        (*l_825) = (void*)0;
                        (*l_821) = &p_13;
                        l_829 = g_211;
                    }
                    else
                    { /* block id: 340 */
                        int32_t l_831 = 0x8C9C5121L;
                        (**l_823) = &l_760[9][0][2];
                        return l_831;
                    }
                }
            }
            for (g_136 = 1; (g_136 <= 5); g_136 += 1)
            { /* block id: 348 */
                (***g_425) = ((*g_382) = (*g_382));
                return g_202.f8;
            }
            g_211 = (void*)0;
        }
    }
    else
    { /* block id: 355 */
        int32_t *l_844 = &g_441;
        int32_t l_907 = 0x23390158L;
        int32_t l_936 = (-8L);
        int8_t l_947[1];
        uint32_t l_951 = 0x24CC2318L;
        uint32_t **l_969 = &l_791;
        struct S0 *l_992 = &g_993;
        const uint16_t ****l_1043 = (void*)0;
        uint8_t ***l_1047 = &g_557;
        uint8_t ****l_1046 = &l_1047;
        const uint8_t ***l_1048 = (void*)0;
        int i;
        for (i = 0; i < 1; i++)
            l_947[i] = 0x10L;
        if ((safe_sub_func_int16_t_s_s(((safe_rshift_func_uint16_t_u_s((safe_add_func_int64_t_s_s(0xFCC6BF423096DD48LL, ((**l_821) != (safe_sub_func_int32_t_s_s((g_162 , ((((**g_812) ^= (safe_div_func_uint32_t_u_u(4UL, (safe_rshift_func_uint16_t_u_u(((void*)0 == l_844), g_199.f2))))) != (((void*)0 == l_844) > (*g_71))) >= 0UL)), 0xACC69CA8L))))), 1)) , l_845), (**l_821))))
        { /* block id: 357 */
            return p_13;
        }
        else
        { /* block id: 359 */
            uint16_t l_848 = 1UL;
            int64_t *l_920 = &g_166;
            int64_t *l_934 = (void*)0;
            int64_t *l_935[5];
            int32_t l_948 = (-7L);
            int32_t l_949 = 0x542FB140L;
            int32_t l_950[6] = {0x75475F90L,0x75475F90L,0x75475F90L,0x75475F90L,0x75475F90L,0x75475F90L};
            uint32_t **l_968[2];
            uint32_t *l_990 = (void*)0;
            int32_t l_1028[9][6][4] = {{{(-7L),0x3764777EL,0x3764777EL,(-7L)},{0xA9A4A2D0L,0L,0L,0x616E7E05L},{(-5L),0x27F9C0DEL,0L,(-7L)},{(-1L),5L,1L,(-7L)},{0x616E7E05L,0x27F9C0DEL,0x3764777EL,0x616E7E05L},{0x009E8B8DL,0L,0L,(-7L)}},{{(-5L),0x3764777EL,5L,(-7L)},{(-1L),0L,1L,0x616E7E05L},{(-7L),0x27F9C0DEL,0x071890E4L,(-7L)},{0x009E8B8DL,5L,0L,(-7L)},{0L,0x27F9C0DEL,5L,0x616E7E05L},{(-1L),0L,0xDD317C14L,(-7L)}},{{(-7L),0x3764777EL,0x3764777EL,(-7L)},{0xA9A4A2D0L,0L,0L,0x616E7E05L},{(-5L),0x27F9C0DEL,0L,(-7L)},{(-1L),5L,1L,(-7L)},{0x616E7E05L,0x27F9C0DEL,0x3764777EL,0x616E7E05L},{0x009E8B8DL,0L,0L,(-7L)}},{{(-5L),0x3764777EL,5L,(-7L)},{(-1L),0L,1L,0x616E7E05L},{(-7L),0x27F9C0DEL,0x071890E4L,(-7L)},{0x009E8B8DL,5L,0L,(-7L)},{0L,0x27F9C0DEL,5L,0x616E7E05L},{(-1L),0L,0xDD317C14L,(-7L)}},{{(-7L),0x3764777EL,0x3764777EL,(-7L)},{0xA9A4A2D0L,0L,0L,0x616E7E05L},{(-5L),0x27F9C0DEL,0L,(-7L)},{(-1L),5L,1L,(-7L)},{0x616E7E05L,0x27F9C0DEL,0x3764777EL,0x616E7E05L},{0x009E8B8DL,0L,0L,(-7L)}},{{(-5L),0x3764777EL,5L,(-7L)},{(-1L),0L,1L,0x616E7E05L},{(-7L),0x27F9C0DEL,0x071890E4L,(-7L)},{0x009E8B8DL,5L,0L,(-7L)},{0L,0x27F9C0DEL,5L,0x616E7E05L},{(-1L),0L,0xDD317C14L,(-7L)}},{{(-7L),0x3764777EL,0x3764777EL,(-7L)},{0xA9A4A2D0L,0L,0L,0x616E7E05L},{(-5L),0x27F9C0DEL,0L,(-7L)},{(-1L),5L,1L,(-7L)},{0x616E7E05L,0x27F9C0DEL,0x071890E4L,0xDD5079BFL},{0xA9A4A2D0L,5L,0xD7D477FFL,0x616E7E05L}},{{0L,0x071890E4L,0L,0x616E7E05L},{0x8E34B072L,5L,0xDD317C14L,0xDD5079BFL},{0x616E7E05L,0x3764777EL,0x27F9C0DEL,0x616E7E05L},{0xA9A4A2D0L,0L,0L,0x616E7E05L},{1L,0x3764777EL,0L,0xDD5079BFL},{(-1L),5L,1L,0x616E7E05L}},{{0x616E7E05L,0x071890E4L,0x071890E4L,0x616E7E05L},{0x1F4F5F81L,5L,0L,0xDD5079BFL},{0L,0x3764777EL,0L,0x616E7E05L},{(-1L),0L,0xDD317C14L,0x616E7E05L},{0xDD5079BFL,0x3764777EL,0x071890E4L,0xDD5079BFL},{0xA9A4A2D0L,5L,0xD7D477FFL,0x616E7E05L}}};
            uint64_t l_1031 = 1UL;
            int i, j, k;
            for (i = 0; i < 5; i++)
                l_935[i] = &g_139;
            for (i = 0; i < 2; i++)
                l_968[i] = &l_791;
lbl_974:
            (***g_425) ^= (safe_add_func_uint32_t_u_u(p_17, l_848));
            for (g_205.f2 = 0; (g_205.f2 <= 3); g_205.f2 += 1)
            { /* block id: 363 */
                uint8_t * const ****l_857[6][8][3] = {{{(void*)0,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,(void*)0},{&g_854,&g_854,&g_854},{&g_854,&g_854,(void*)0}},{{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,(void*)0}},{{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{(void*)0,&g_854,(void*)0},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,(void*)0}},{{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{(void*)0,(void*)0,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,&g_854}},{{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,(void*)0},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854}},{{&g_854,&g_854,(void*)0},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,(void*)0,(void*)0},{(void*)0,&g_854,&g_854},{(void*)0,&g_854,&g_854},{&g_854,&g_854,&g_854},{&g_854,&g_854,&g_854}}};
                struct S0 ***l_877 = &l_876;
                struct S0 ***l_878 = (void*)0;
                int32_t l_879 = 0L;
                uint32_t l_905 = 0x212ADB69L;
                int i, j, k;
                for (g_203.f2 = 1; (g_203.f2 <= 5); g_203.f2 += 1)
                { /* block id: 366 */
                    uint8_t *** const **l_858 = (void*)0;
                    uint32_t *l_880 = &l_845;
                    int i;
                    if ((((*l_880) = (((safe_div_func_uint32_t_u_u(((safe_mul_func_uint8_t_u_u(((l_857[2][5][1] = g_853) != (g_859 = l_858)), (safe_sub_func_uint16_t_u_u((safe_rshift_func_int8_t_s_u((safe_mod_func_int8_t_s_s(((*l_707) = (safe_sub_func_int32_t_s_s(((safe_lshift_func_uint16_t_u_u((g_691 < g_79), 3)) | (safe_div_func_uint32_t_u_u(((safe_mul_func_int16_t_s_s(((((l_877 = l_875) == (((-1L) | 65533UL) , l_878)) < p_16) < l_879), p_13)) >= p_14), p_17))), p_17))), p_17)), 7)), g_124)))) >= l_879), (*g_427))) <= (**l_821)) == (**l_821))) | l_879))
                    { /* block id: 372 */
                        (**l_821) ^= 0L;
                    }
                    else
                    { /* block id: 374 */
                        int32_t l_904[6] = {1L,(-3L),(-3L),1L,(-3L),(-3L)};
                        int16_t *l_906 = &g_79;
                        int i;
                        l_907 ^= (((safe_add_func_int64_t_s_s((safe_rshift_func_int16_t_s_s(0xD8B6L, (g_204.f4 <= (safe_mod_func_int8_t_s_s(((**g_812) = (~((*l_906) = ((0L <= ((safe_lshift_func_uint16_t_u_u((safe_div_func_int64_t_s_s((~((safe_mul_func_uint8_t_u_u(0x9CL, (safe_div_func_uint64_t_u_u(((((l_897 ^= p_16) < 0x16L) | ((safe_add_func_uint16_t_u_u(((safe_lshift_func_int8_t_s_u(((*l_707) = p_15), 1)) | 0x7AL), (safe_lshift_func_uint8_t_u_u(l_879, l_904[1])))) || 0x1E98EECDB26DBE55LL)) > 0xA8DF64A7L), p_16)))) != 1UL)), p_15)), p_17)) , l_905)) == (*l_844))))), (*l_844)))))), g_290.f8)) , (void*)0) == &l_790);
                    }
                    for (g_34 = 0; (g_34 <= 3); g_34 += 1)
                    { /* block id: 383 */
                        int32_t ***l_909 = &l_821;
                        int32_t ****l_908 = &l_909;
                        int32_t ***l_911 = &l_821;
                        int32_t ****l_910 = &l_911;
                        (*l_910) = ((*l_908) = &g_381[g_205.f2]);
                        if ((*g_382))
                            break;
                    }
                    return p_13;
                }
                return (**l_821);
            }
            if ((safe_rshift_func_uint16_t_u_s((safe_add_func_uint8_t_u_u((*l_844), ((safe_lshift_func_uint8_t_u_u((**l_821), (safe_div_func_int32_t_s_s((((*l_920) = p_13) & (g_943 = (safe_mul_func_uint8_t_u_u((safe_rshift_func_uint8_t_u_s((safe_add_func_int32_t_s_s(((***g_425) = p_15), (~((l_936 = (g_139 = (safe_sub_func_int64_t_s_s((safe_lshift_func_int8_t_s_u((safe_mul_func_int8_t_s_s(((*l_707) ^= (*g_813)), p_17)), 7)), (g_149 = 0x66D267BD42C570C6LL))))) >= (safe_sub_func_int32_t_s_s((*l_844), (safe_rshift_func_uint8_t_u_s((((safe_lshift_func_uint16_t_u_u(0xA4DEL, 5)) > g_212.f2) , 1UL), 5)))))))), l_848)), 0x5FL)))), (*l_844))))) && 246UL))), g_816)))
            { /* block id: 399 */
                int32_t *l_944 = &l_936;
                int32_t *l_945 = &g_194[2];
                int32_t *l_946[10];
                int32_t **l_954 = &l_944;
                int i;
                for (i = 0; i < 10; i++)
                    l_946[i] = &g_290.f4;
                --l_951;
                (*l_954) = (**g_425);
            }
            else
            { /* block id: 402 */
                uint16_t **l_966 = &l_965;
                uint16_t *l_967[6];
                uint64_t *l_970 = (void*)0;
                uint64_t *l_971[4];
                int32_t l_991 = 0x560464EBL;
                int32_t l_1002 = 1L;
                int32_t l_1030 = 6L;
                int i;
                for (i = 0; i < 6; i++)
                    l_967[i] = &g_324;
                for (i = 0; i < 4; i++)
                    l_971[i] = &l_897;
                if (((safe_add_func_int16_t_s_s(g_199.f2, ((safe_mod_func_int64_t_s_s((safe_mul_func_uint16_t_u_u(0UL, ((safe_sub_func_int64_t_s_s(1L, (((l_950[5] = (((((((*l_966) = l_965) == l_967[2]) & (g_197.f8 | (((g_301.f4 != ((((((l_968[0] != l_969) & g_428) < p_15) , l_848) , 0x0998771E8AC3AE52LL) == (**l_821))) , (-1L)) != (-3L)))) , 0xF0L) | 1UL) , p_13)) < (**l_821)) > l_948))) <= 0L))), 7L)) == 6UL))) , l_950[0]))
                { /* block id: 405 */
                    uint32_t l_988 = 0xDD9D49F5L;
                    for (g_204.f4 = 0; (g_204.f4 < (-23)); g_204.f4--)
                    { /* block id: 408 */
                        struct S0 **l_982 = &g_211;
                        int32_t l_987 = 0x0EA15B5AL;
                        uint32_t *l_989 = &g_132;
                        if (g_354)
                            goto lbl_974;
                        (***g_425) = (~p_13);
                        l_992 = ((((safe_rshift_func_uint8_t_u_u(((safe_sub_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u((((*l_875) == l_982) , 0x62L), (((safe_lshift_func_int8_t_s_s(0x69L, (((*l_844) < (((*l_989) = (((*g_427) = l_987) < l_988)) == (g_72 > (l_991 = ((void*)0 != l_990))))) <= 0x0BL))) < g_203.f4) == l_950[1]))), p_13)) >= 0x4A892288A7DABA83LL), 0)) , (void*)0) == (void*)0) , (*l_982));
                    }
                }
                else
                { /* block id: 416 */
                    uint8_t ** const **l_1007 = (void*)0;
                    uint8_t ** const ***l_1006 = &l_1007;
                    int32_t l_1013 = 1L;
                    int32_t l_1029 = 1L;
                    for (g_207.f2 = 0; (g_207.f2 == 14); g_207.f2 = safe_add_func_int64_t_s_s(g_207.f2, 7))
                    { /* block id: 419 */
                        int16_t *l_1014 = &g_354;
                        int16_t *l_1015 = &g_79;
                        int16_t *l_1016[1];
                        int32_t l_1018 = 0x5DBDDAF0L;
                        int32_t l_1019 = 5L;
                        int32_t *l_1020 = &g_993.f4;
                        int32_t *l_1021 = &g_202.f4;
                        int32_t *l_1022 = (void*)0;
                        int32_t *l_1023 = &g_208[3].f4;
                        int32_t *l_1024 = &g_205.f4;
                        int32_t *l_1025 = &g_202.f4;
                        int32_t *l_1026 = &g_198.f4;
                        int32_t *l_1027[8] = {&g_194[0],&l_948,&l_948,&g_194[0],&l_948,&l_948,&g_194[0],&l_948};
                        int i;
                        for (i = 0; i < 1; i++)
                            l_1016[i] = &g_1017;
                        p_17 = (safe_rshift_func_int16_t_s_s((l_948 = (p_15 && (safe_rshift_func_uint16_t_u_s((((safe_lshift_func_int8_t_s_u((((((((l_949 = (((((l_1002 == ((safe_add_func_uint16_t_u_u(((safe_unary_minus_func_int32_t_s((((0xE28B9A5AA14BDF9BLL ^ ((((g_162 = (g_324 ^= g_202.f1)) != g_993.f2) , (((l_1006 = (void*)0) != ((p_16 <= (((safe_lshift_func_int16_t_s_u((safe_mul_func_int16_t_s_s(((*l_1015) = ((*l_1014) = (p_16 > ((~(((*g_427) = ((l_1013 , (-1L)) <= l_991)) == 8UL)) | 1L)))), g_830.f2)), 9)) || l_950[1]) < (-1L))) , (void*)0)) ^ 0x8DL)) ^ p_15)) , 2UL) , (-1L)))) >= p_14), 4L)) != (-1L))) || 0L) <= g_203.f8) , (*l_844)) ^ p_15)) | l_1013) && 0x13A490CCL) < p_15) , (void*)0) != (*g_610)) , (*l_844)), p_17)) , 0xB9EC9371L) < p_17), l_1002)))), 6));
                        ++l_1031;
                    }
                }
                (*l_821) = l_1034[0];
                (***g_425) |= l_1002;
            }
        }
        (*l_844) = (!((p_13 == 0L) < (safe_mod_func_uint16_t_u_u(((safe_mul_func_uint8_t_u_u(((l_1040 = l_1040) == ((safe_mul_func_int8_t_s_s(((*l_707) = ((((**g_426) , (*g_425)) == (void*)0) != (((*l_1046) = &g_557) == (l_1048 = (void*)0)))), ((safe_lshift_func_uint8_t_u_u((((((safe_rshift_func_int16_t_s_s(g_943, 7)) ^ p_13) <= 0x74C770D3975FB435LL) < g_199.f4) , 254UL), 4)) == 0UL))) , (void*)0)), (**g_557))) , g_301.f8), p_17))));
    }
    return l_1053;
}


/* ------------------------------------------ */
/* 
 * reads : g_11 g_34 g_42 g_71 g_72 g_88 g_79 g_124 g_132 g_136 g_151 g_162 g_161 g_185 g_149 g_148 g_382 g_204.f4 g_197.f2 g_197.f8 g_425 g_426 g_427 g_428 g_166 g_691 g_201.f8 g_197.f4
 * writes: g_34 g_42 g_79 g_88 g_132 g_139 g_151 g_161 g_72 g_162 g_166 g_169 g_185 g_190 g_211 g_204.f4 g_428 g_201.f8 g_354
 */
static int32_t  func_18(const int32_t  p_19, int16_t  p_20, int16_t  p_21)
{ /* block id: 3 */
    uint32_t *l_33 = &g_34;
    uint32_t l_35[3][2];
    int16_t l_36 = 0x8E54L;
    uint8_t l_37[5] = {8UL,8UL,8UL,8UL,8UL};
    const uint32_t l_683 = 0x794E7761L;
    int32_t l_690 = 0xB0143853L;
    int i, j;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
            l_35[i][j] = 0x93BE41B0L;
    }
    (***g_425) |= (safe_sub_func_int32_t_s_s(func_6(((((((safe_lshift_func_int8_t_s_s((safe_rshift_func_uint16_t_u_u((func_28(g_11, ((func_6(p_21, ((3UL & (((*l_33) ^= g_11) < l_35[2][1])) , (l_36 | l_37[3]))) <= (l_35[2][1] || l_36)) | p_21), l_37[3], p_20) , 0xC215L), l_37[0])), l_683)) ^ 0x1DL) , g_124) == 0xF28DL) && p_19) <= p_19), g_197.f2), g_197.f8));
    if ((safe_unary_minus_func_uint16_t_u(4UL)))
    { /* block id: 286 */
        uint32_t *l_689[7] = {&g_132,&l_35[2][0],&g_132,&g_132,&l_35[2][0],&g_132,&g_132};
        int32_t l_692[3];
        int32_t l_695[5];
        int i;
        for (i = 0; i < 3; i++)
            l_692[i] = 0xD92BEB25L;
        for (i = 0; i < 5; i++)
            l_695[i] = 1L;
        (*g_382) &= (safe_mod_func_uint8_t_u_u((safe_add_func_int32_t_s_s(((((((l_690 = ((*l_33) = l_683)) > 0x2CA9F399L) | p_20) , g_166) ^ ((l_692[2] |= (1UL || g_691)) && p_20)) < (((l_695[2] = (p_21 >= (safe_div_func_uint8_t_u_u((0xACB373A21C4B697ELL | l_683), l_695[3])))) != (-5L)) < g_42)), l_683)), l_35[0][1]));
        for (g_201.f8 = (-10); (g_201.f8 < 1); g_201.f8 = safe_add_func_int16_t_s_s(g_201.f8, 2))
        { /* block id: 294 */
            int16_t *l_700 = &g_354;
            (*g_427) ^= (+(g_197.f4 <= ((*l_700) = (~0x247DL))));
        }
    }
    else
    { /* block id: 298 */
        uint8_t ****l_702 = (void*)0;
        uint8_t *****l_701 = &l_702;
        uint8_t *****l_703 = &l_702;
        l_703 = l_701;
    }
    return l_690;
}


/* ------------------------------------------ */
/* 
 * reads : g_42 g_11 g_34 g_71 g_72 g_88 g_79 g_124 g_132 g_136 g_151 g_162 g_161 g_185 g_149 g_148 g_382 g_204.f4
 * writes: g_42 g_79 g_88 g_132 g_139 g_151 g_161 g_72 g_162 g_166 g_169 g_185 g_190 g_211 g_204.f4
 */
static const uint8_t  func_28(int32_t  p_29, const int32_t  p_30, int32_t  p_31, uint32_t  p_32)
{ /* block id: 5 */
    uint64_t l_188 = 0x527752A06A2A823BLL;
    int64_t l_192 = 0x97FCA46356B4AE7FLL;
    int32_t l_195 = 0xD2DC6FEDL;
    int32_t l_677[2];
    int16_t l_678 = 0L;
    int16_t l_679 = 6L;
    uint8_t l_680 = 0xC4L;
    int i;
    for (i = 0; i < 2; i++)
        l_677[i] = 0xA0851C7AL;
    for (p_32 = 0; (p_32 != 35); p_32 = safe_add_func_uint32_t_u_u(p_32, 1))
    { /* block id: 8 */
        uint8_t *l_41 = &g_42;
        uint32_t *l_168 = &g_132;
        uint32_t **l_167[10][9] = {{(void*)0,(void*)0,&l_168,(void*)0,(void*)0,(void*)0,&l_168,&l_168,&l_168},{&l_168,(void*)0,&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,(void*)0},{&l_168,&l_168,&l_168,&l_168,&l_168,(void*)0,(void*)0,&l_168,&l_168},{&l_168,&l_168,&l_168,(void*)0,(void*)0,(void*)0,&l_168,&l_168,&l_168},{&l_168,&l_168,(void*)0,&l_168,(void*)0,(void*)0,&l_168,&l_168,&l_168},{&l_168,(void*)0,&l_168,&l_168,&l_168,&l_168,(void*)0,&l_168,(void*)0},{&l_168,(void*)0,&l_168,(void*)0,&l_168,&l_168,&l_168,&l_168,&l_168},{&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,(void*)0},{&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,(void*)0,&l_168},{&l_168,&l_168,&l_168,&l_168,&l_168,&l_168,(void*)0,&l_168,&l_168}};
        int32_t l_170 = 0xDBBC6626L;
        uint8_t *l_184 = &g_185;
        int8_t *l_189 = &g_190;
        const int64_t l_191 = 0xAC7DB9AC0673FC91LL;
        int32_t *l_193[1];
        int32_t l_676 = 0L;
        int i, j;
        for (i = 0; i < 1; i++)
            l_193[i] = &g_194[0];
        (*g_382) &= func_6((safe_unary_minus_func_uint8_t_u((--(*l_41)))), func_45((func_48((safe_rshift_func_uint8_t_u_s(g_11, 6))) , func_69((g_169 = (void*)0))), (l_170 < (l_195 = (p_30 | (~((safe_sub_func_uint16_t_u_u((((safe_rshift_func_int8_t_s_u(((*l_189) = ((safe_mul_func_int16_t_s_s((((safe_lshift_func_int16_t_s_s(g_124, (((safe_sub_func_uint32_t_u_u((((safe_mul_func_int8_t_s_s(g_11, ((*l_184)++))) , g_136) > l_188), (-1L))) ^ g_149) ^ l_170))) , l_170) || l_170), 0xBF17L)) > 0x2E8EBDD0L)), l_191)) | 0xDDDDL) , g_148), 0L)) | l_192)))))));
        ++l_680;
    }
    return p_32;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes: g_211
 */
static int32_t  func_45(uint8_t * p_46, uint8_t  p_47)
{ /* block id: 52 */
    struct S0 *l_196[8][5] = {{(void*)0,&g_207,(void*)0,&g_201,(void*)0},{&g_199,&g_197,(void*)0,&g_209,&g_209},{&g_197,(void*)0,&g_197,&g_206[2],&g_200},{&g_197,&g_198,&g_201,(void*)0,&g_208[3]},{&g_199,(void*)0,&g_207,&g_205,&g_204},{(void*)0,&g_209,&g_201,&g_208[3],&g_201},{(void*)0,(void*)0,&g_197,&g_198,&g_201},{&g_206[2],&g_200,(void*)0,(void*)0,&g_204}};
    struct S0 **l_210[10][10] = {{&l_196[6][2],&l_196[6][2],(void*)0,&l_196[6][2],&l_196[6][2],(void*)0,&l_196[6][2],&l_196[6][2],&l_196[1][0],&l_196[6][2]},{&l_196[6][3],&l_196[6][2],&l_196[3][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2]},{&l_196[6][2],&l_196[6][2],&l_196[3][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[1][0],&l_196[6][2],&l_196[6][2],&l_196[6][2]},{&l_196[6][3],&l_196[6][2],&l_196[6][2],&l_196[3][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[3][2],&l_196[6][2]},{&l_196[3][2],&l_196[3][2],&l_196[6][2],&l_196[6][2],(void*)0,&l_196[4][4],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2]},{&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[3][2]},{&l_196[6][2],&l_196[3][2],&l_196[6][2],(void*)0,&l_196[6][2],(void*)0,&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2]},{&l_196[6][2],&l_196[6][2],(void*)0,(void*)0,&l_196[6][2],&l_196[6][2],&l_196[6][3],(void*)0,&l_196[6][2],&l_196[4][4]},{&l_196[4][4],&l_196[6][2],&l_196[3][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2]},{&l_196[4][4],&l_196[6][2],&l_196[4][4],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[6][2],&l_196[3][2],(void*)0}};
    int32_t l_213 = 0xA9ED5AC8L;
    uint8_t *l_214 = &g_185;
    int32_t *l_217 = &g_203.f4;
    const int64_t *l_254 = &g_149;
    const int32_t *l_378[7][8][4] = {{{&g_208[3].f4,&g_206[2].f4,(void*)0,&g_205.f4},{&g_209.f4,(void*)0,(void*)0,&g_199.f4},{&g_205.f4,(void*)0,(void*)0,&g_205.f4},{(void*)0,&g_206[2].f4,&g_207.f4,&g_208[3].f4},{(void*)0,&g_207.f4,(void*)0,&g_206[2].f4},{&g_205.f4,&g_198.f4,(void*)0,&g_206[2].f4},{&g_209.f4,&g_207.f4,(void*)0,&g_208[3].f4},{&g_208[3].f4,&g_206[2].f4,(void*)0,&g_205.f4}},{{&g_209.f4,(void*)0,(void*)0,&g_199.f4},{&g_205.f4,(void*)0,(void*)0,&g_205.f4},{(void*)0,&g_206[2].f4,&g_207.f4,&g_208[3].f4},{(void*)0,&g_207.f4,(void*)0,&g_206[2].f4},{&g_205.f4,&g_198.f4,(void*)0,&g_206[2].f4},{&g_209.f4,&g_207.f4,(void*)0,&g_208[3].f4},{&g_208[3].f4,&g_206[2].f4,(void*)0,&g_205.f4},{&g_209.f4,(void*)0,(void*)0,&g_199.f4}},{{&g_205.f4,(void*)0,(void*)0,&g_205.f4},{(void*)0,&g_206[2].f4,&g_207.f4,&g_208[3].f4},{(void*)0,&g_207.f4,(void*)0,&g_206[2].f4},{&g_205.f4,&g_198.f4,(void*)0,&g_206[2].f4},{&g_209.f4,&g_207.f4,(void*)0,&g_208[3].f4},{&g_208[3].f4,&g_206[2].f4,(void*)0,&g_205.f4},{&g_209.f4,(void*)0,(void*)0,&g_199.f4},{&g_205.f4,(void*)0,(void*)0,&g_205.f4}},{{(void*)0,&g_206[2].f4,&g_207.f4,&g_208[3].f4},{(void*)0,&g_207.f4,(void*)0,&g_206[2].f4},{&g_205.f4,&g_198.f4,(void*)0,&g_206[2].f4},{&g_209.f4,&g_207.f4,(void*)0,&g_208[3].f4},{&g_208[3].f4,&g_206[2].f4,(void*)0,&g_205.f4},{&g_209.f4,(void*)0,(void*)0,&g_209.f4},{(void*)0,&g_198.f4,&g_198.f4,(void*)0},{&g_208[3].f4,(void*)0,&g_209.f4,&g_206[2].f4}},{{&g_208[3].f4,&g_209.f4,&g_198.f4,&g_199.f4},{(void*)0,(void*)0,(void*)0,&g_199.f4},{&g_201.f4,&g_209.f4,&g_207.f4,&g_206[2].f4},{&g_206[2].f4,(void*)0,&g_207.f4,(void*)0},{&g_201.f4,&g_198.f4,(void*)0,&g_209.f4},{(void*)0,&g_198.f4,&g_198.f4,(void*)0},{&g_208[3].f4,(void*)0,&g_209.f4,&g_206[2].f4},{&g_208[3].f4,&g_209.f4,&g_198.f4,&g_199.f4}},{{(void*)0,(void*)0,(void*)0,&g_199.f4},{&g_201.f4,&g_209.f4,&g_207.f4,&g_206[2].f4},{&g_206[2].f4,(void*)0,&g_207.f4,(void*)0},{&g_201.f4,&g_198.f4,(void*)0,&g_209.f4},{(void*)0,&g_198.f4,&g_198.f4,(void*)0},{&g_208[3].f4,(void*)0,&g_209.f4,&g_206[2].f4},{&g_208[3].f4,&g_209.f4,&g_198.f4,&g_199.f4},{(void*)0,(void*)0,(void*)0,&g_199.f4}},{{&g_201.f4,&g_209.f4,&g_207.f4,&g_206[2].f4},{&g_206[2].f4,(void*)0,&g_207.f4,(void*)0},{&g_201.f4,&g_198.f4,(void*)0,&g_209.f4},{(void*)0,&g_198.f4,&g_198.f4,(void*)0},{&g_208[3].f4,(void*)0,&g_209.f4,&g_206[2].f4},{&g_208[3].f4,&g_209.f4,&g_198.f4,&g_199.f4},{(void*)0,(void*)0,(void*)0,&g_199.f4},{&g_201.f4,&g_209.f4,&g_207.f4,&g_206[2].f4}}};
    uint8_t *l_440 = &g_72;
    uint8_t **l_521 = &l_440;
    int32_t l_535 = (-3L);
    int32_t l_537 = (-1L);
    uint32_t *l_597 = &g_212.f8;
    uint32_t **l_596 = &l_597;
    uint32_t l_626 = 18446744073709551610UL;
    int32_t l_669 = 0x04E20057L;
    int32_t *l_670 = &g_206[2].f4;
    int32_t *l_671 = &g_208[3].f4;
    int32_t *l_672[3];
    uint16_t l_673 = 0xEBEEL;
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_672[i] = &g_194[0];
    g_211 = l_196[6][2];
    return p_47;
}


/* ------------------------------------------ */
/* 
 * reads : g_34 g_71 g_72 g_88 g_79 g_124 g_132 g_11 g_136 g_151 g_162 g_161
 * writes: g_79 g_88 g_132 g_139 g_151 g_161 g_72 g_162 g_166
 */
static int32_t  func_48(uint64_t  p_49)
{ /* block id: 10 */
    uint8_t *l_59 = (void*)0;
    int16_t *l_78 = &g_79;
    uint32_t *l_80 = &g_34;
    const int32_t l_159 = 1L;
    int8_t *l_160 = &g_161[0];
    int32_t *l_165[7];
    int i;
    for (i = 0; i < 7; i++)
        l_165[i] = (void*)0;
    g_166 = (func_52((g_162 ^= (safe_lshift_func_uint8_t_u_u(((l_59 != l_59) , ((*g_71) = (((*l_160) = ((safe_lshift_func_int16_t_s_s(g_34, ((*l_78) = (safe_rshift_func_uint8_t_u_s((func_64(p_49, func_69(&g_34), g_72, ((((*l_78) = (safe_sub_func_int8_t_s_s((((safe_sub_func_uint32_t_u_u(((+p_49) >= (p_49 <= g_72)), 4294967295UL)) & g_34) == 0x2ABFL), p_49))) , &g_34) != l_80)) | l_159), p_49))))) >= l_159)) > g_72))), l_159))), p_49, l_80, l_159) | 0x0AEDL);
    return g_161[0];
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint16_t  func_52(uint16_t  p_53, int64_t  p_54, uint32_t * p_55, int32_t  p_56)
{ /* block id: 43 */
    int32_t *l_164 = &g_88;
    int32_t **l_163 = &l_164;
    (*l_163) = p_55;
    return p_56;
}


/* ------------------------------------------ */
/* 
 * reads : g_72 g_88 g_79 g_71 g_124 g_132 g_11 g_136 g_151
 * writes: g_88 g_79 g_132 g_139 g_151
 */
static const int8_t  func_64(const int64_t  p_65, uint8_t * p_66, int16_t  p_67, uint8_t  p_68)
{ /* block id: 14 */
    int32_t l_89 = (-8L);
    int32_t *l_90 = &l_89;
    int16_t *l_103[9] = {&g_79,&g_79,&g_79,&g_79,&g_79,&g_79,&g_79,&g_79,&g_79};
    int16_t l_125[9] = {0L,0x2142L,0L,0x2142L,0L,0x2142L,0L,0x2142L,0L};
    int32_t l_135 = 0xB6FCE132L;
    int16_t l_158 = 0xEBEBL;
    int i;
    for (p_68 = 0; (p_68 >= 38); p_68++)
    { /* block id: 17 */
        uint32_t l_85 = 18446744073709551612UL;
        int32_t *l_86 = (void*)0;
        int32_t *l_87 = &g_88;
        (*l_87) |= (safe_rshift_func_int16_t_s_s(g_72, l_85));
    }
    (*l_90) = ((p_65 | p_67) , l_89);
    if ((((safe_mod_func_uint64_t_u_u((safe_lshift_func_int8_t_s_u((safe_rshift_func_uint8_t_u_s((safe_lshift_func_uint8_t_u_u((safe_sub_func_uint32_t_u_u((g_88 & ((*l_90) != ((((safe_sub_func_int8_t_s_s(((1UL < ((p_67 = (*l_90)) > (safe_add_func_int64_t_s_s((safe_rshift_func_uint16_t_u_u((((((safe_add_func_int32_t_s_s(p_68, (((safe_add_func_uint32_t_u_u(g_79, 0x8B87B6FFL)) , (safe_mul_func_uint8_t_u_u(((safe_mul_func_int8_t_s_s(((((safe_sub_func_uint32_t_u_u((safe_div_func_uint64_t_u_u(((safe_mod_func_int8_t_s_s((safe_lshift_func_int16_t_s_u((g_79 = (&p_68 != &p_68)), p_65)), (*g_71))) & 0x97L), g_72)), p_65)) , p_68) && (*l_90)) >= p_65), (*p_66))) , (*g_71)), (*l_90)))) ^ (*l_90)))) == g_124) & g_88) >= 0xEB2A14D58F1AF85ELL) > p_65), (*l_90))), p_65)))) > (*g_71)), (*p_66))) | p_65) , 0x80L) ^ l_125[5]))), p_68)), (*p_66))), (*l_90))), (*l_90))), (*l_90))) | (*l_90)) && p_68))
    { /* block id: 23 */
        uint32_t *l_130 = (void*)0;
        uint32_t *l_131 = &g_132;
        const int32_t l_137[2] = {6L,6L};
        int i;
        l_135 ^= ((*l_90) = ((safe_div_func_int64_t_s_s(((*l_90) , (safe_sub_func_uint32_t_u_u(((*l_131) &= ((void*)0 == &g_79)), p_67))), g_11)) != (safe_lshift_func_uint8_t_u_u((*g_71), 1))));
        (*l_90) |= g_136;
        return l_137[1];
    }
    else
    { /* block id: 29 */
        int64_t *l_138 = &g_139;
        uint64_t *l_150 = &g_151;
        int32_t l_154 = 0xE68FEE39L;
        int32_t l_155 = 0x1B997E34L;
        l_155 = (((*l_138) = 1L) , ((((-3L) || (p_68 , (safe_sub_func_uint8_t_u_u((safe_div_func_uint64_t_u_u((safe_lshift_func_int16_t_s_s((l_158 = (p_67 | ((((safe_mul_func_int8_t_s_s(((l_154 = (++(*l_150))) >= ((*l_138) = l_155)), (0x15C768A6AAB061D9LL ^ p_68))) || (safe_sub_func_uint32_t_u_u(((*l_90) | (0x18DFC5AECEF6A3D7LL >= p_68)), g_136))) || 0xDB6C63C429AA74C4LL) , 0xBC438EE5L))), 14)), p_65)), 0xDCL)))) != l_155) , p_68));
        l_90 = &l_155;
    }
    return g_132;
}


/* ------------------------------------------ */
/* 
 * reads : g_71
 * writes:
 */
static uint8_t * func_69(uint32_t * p_70)
{ /* block id: 11 */
    return g_71;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_10, "g_10", print_hash_value);
    transparent_crc(g_11, "g_11", print_hash_value);
    transparent_crc(g_34, "g_34", print_hash_value);
    transparent_crc(g_42, "g_42", print_hash_value);
    transparent_crc(g_72, "g_72", print_hash_value);
    transparent_crc(g_79, "g_79", print_hash_value);
    transparent_crc(g_88, "g_88", print_hash_value);
    transparent_crc(g_124, "g_124", print_hash_value);
    transparent_crc(g_132, "g_132", print_hash_value);
    transparent_crc(g_136, "g_136", print_hash_value);
    transparent_crc(g_139, "g_139", print_hash_value);
    transparent_crc(g_148, "g_148", print_hash_value);
    transparent_crc(g_149, "g_149", print_hash_value);
    transparent_crc(g_151, "g_151", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_161[i], "g_161[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_162, "g_162", print_hash_value);
    transparent_crc(g_166, "g_166", print_hash_value);
    transparent_crc(g_185, "g_185", print_hash_value);
    transparent_crc(g_190, "g_190", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_194[i], "g_194[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_197.f0, "g_197.f0", print_hash_value);
    transparent_crc(g_197.f1, "g_197.f1", print_hash_value);
    transparent_crc(g_197.f2, "g_197.f2", print_hash_value);
    transparent_crc(g_197.f3, "g_197.f3", print_hash_value);
    transparent_crc(g_197.f4, "g_197.f4", print_hash_value);
    transparent_crc(g_197.f5, "g_197.f5", print_hash_value);
    transparent_crc(g_197.f6, "g_197.f6", print_hash_value);
    transparent_crc(g_197.f7, "g_197.f7", print_hash_value);
    transparent_crc(g_197.f8, "g_197.f8", print_hash_value);
    transparent_crc(g_198.f0, "g_198.f0", print_hash_value);
    transparent_crc(g_198.f1, "g_198.f1", print_hash_value);
    transparent_crc(g_198.f2, "g_198.f2", print_hash_value);
    transparent_crc(g_198.f3, "g_198.f3", print_hash_value);
    transparent_crc(g_198.f4, "g_198.f4", print_hash_value);
    transparent_crc(g_198.f5, "g_198.f5", print_hash_value);
    transparent_crc(g_198.f6, "g_198.f6", print_hash_value);
    transparent_crc(g_198.f7, "g_198.f7", print_hash_value);
    transparent_crc(g_198.f8, "g_198.f8", print_hash_value);
    transparent_crc(g_199.f0, "g_199.f0", print_hash_value);
    transparent_crc(g_199.f1, "g_199.f1", print_hash_value);
    transparent_crc(g_199.f2, "g_199.f2", print_hash_value);
    transparent_crc(g_199.f3, "g_199.f3", print_hash_value);
    transparent_crc(g_199.f4, "g_199.f4", print_hash_value);
    transparent_crc(g_199.f5, "g_199.f5", print_hash_value);
    transparent_crc(g_199.f6, "g_199.f6", print_hash_value);
    transparent_crc(g_199.f7, "g_199.f7", print_hash_value);
    transparent_crc(g_199.f8, "g_199.f8", print_hash_value);
    transparent_crc(g_200.f0, "g_200.f0", print_hash_value);
    transparent_crc(g_200.f1, "g_200.f1", print_hash_value);
    transparent_crc(g_200.f2, "g_200.f2", print_hash_value);
    transparent_crc(g_200.f3, "g_200.f3", print_hash_value);
    transparent_crc(g_200.f4, "g_200.f4", print_hash_value);
    transparent_crc(g_200.f5, "g_200.f5", print_hash_value);
    transparent_crc(g_200.f6, "g_200.f6", print_hash_value);
    transparent_crc(g_200.f7, "g_200.f7", print_hash_value);
    transparent_crc(g_200.f8, "g_200.f8", print_hash_value);
    transparent_crc(g_201.f0, "g_201.f0", print_hash_value);
    transparent_crc(g_201.f1, "g_201.f1", print_hash_value);
    transparent_crc(g_201.f2, "g_201.f2", print_hash_value);
    transparent_crc(g_201.f3, "g_201.f3", print_hash_value);
    transparent_crc(g_201.f4, "g_201.f4", print_hash_value);
    transparent_crc(g_201.f5, "g_201.f5", print_hash_value);
    transparent_crc(g_201.f6, "g_201.f6", print_hash_value);
    transparent_crc(g_201.f7, "g_201.f7", print_hash_value);
    transparent_crc(g_201.f8, "g_201.f8", print_hash_value);
    transparent_crc(g_202.f0, "g_202.f0", print_hash_value);
    transparent_crc(g_202.f1, "g_202.f1", print_hash_value);
    transparent_crc(g_202.f2, "g_202.f2", print_hash_value);
    transparent_crc(g_202.f3, "g_202.f3", print_hash_value);
    transparent_crc(g_202.f4, "g_202.f4", print_hash_value);
    transparent_crc(g_202.f5, "g_202.f5", print_hash_value);
    transparent_crc(g_202.f6, "g_202.f6", print_hash_value);
    transparent_crc(g_202.f7, "g_202.f7", print_hash_value);
    transparent_crc(g_202.f8, "g_202.f8", print_hash_value);
    transparent_crc(g_203.f0, "g_203.f0", print_hash_value);
    transparent_crc(g_203.f1, "g_203.f1", print_hash_value);
    transparent_crc(g_203.f2, "g_203.f2", print_hash_value);
    transparent_crc(g_203.f3, "g_203.f3", print_hash_value);
    transparent_crc(g_203.f4, "g_203.f4", print_hash_value);
    transparent_crc(g_203.f5, "g_203.f5", print_hash_value);
    transparent_crc(g_203.f6, "g_203.f6", print_hash_value);
    transparent_crc(g_203.f7, "g_203.f7", print_hash_value);
    transparent_crc(g_203.f8, "g_203.f8", print_hash_value);
    transparent_crc(g_204.f0, "g_204.f0", print_hash_value);
    transparent_crc(g_204.f1, "g_204.f1", print_hash_value);
    transparent_crc(g_204.f2, "g_204.f2", print_hash_value);
    transparent_crc(g_204.f3, "g_204.f3", print_hash_value);
    transparent_crc(g_204.f4, "g_204.f4", print_hash_value);
    transparent_crc(g_204.f5, "g_204.f5", print_hash_value);
    transparent_crc(g_204.f6, "g_204.f6", print_hash_value);
    transparent_crc(g_204.f7, "g_204.f7", print_hash_value);
    transparent_crc(g_204.f8, "g_204.f8", print_hash_value);
    transparent_crc(g_205.f0, "g_205.f0", print_hash_value);
    transparent_crc(g_205.f1, "g_205.f1", print_hash_value);
    transparent_crc(g_205.f2, "g_205.f2", print_hash_value);
    transparent_crc(g_205.f3, "g_205.f3", print_hash_value);
    transparent_crc(g_205.f4, "g_205.f4", print_hash_value);
    transparent_crc(g_205.f5, "g_205.f5", print_hash_value);
    transparent_crc(g_205.f6, "g_205.f6", print_hash_value);
    transparent_crc(g_205.f7, "g_205.f7", print_hash_value);
    transparent_crc(g_205.f8, "g_205.f8", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_206[i].f0, "g_206[i].f0", print_hash_value);
        transparent_crc(g_206[i].f1, "g_206[i].f1", print_hash_value);
        transparent_crc(g_206[i].f2, "g_206[i].f2", print_hash_value);
        transparent_crc(g_206[i].f3, "g_206[i].f3", print_hash_value);
        transparent_crc(g_206[i].f4, "g_206[i].f4", print_hash_value);
        transparent_crc(g_206[i].f5, "g_206[i].f5", print_hash_value);
        transparent_crc(g_206[i].f6, "g_206[i].f6", print_hash_value);
        transparent_crc(g_206[i].f7, "g_206[i].f7", print_hash_value);
        transparent_crc(g_206[i].f8, "g_206[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_207.f0, "g_207.f0", print_hash_value);
    transparent_crc(g_207.f1, "g_207.f1", print_hash_value);
    transparent_crc(g_207.f2, "g_207.f2", print_hash_value);
    transparent_crc(g_207.f3, "g_207.f3", print_hash_value);
    transparent_crc(g_207.f4, "g_207.f4", print_hash_value);
    transparent_crc(g_207.f5, "g_207.f5", print_hash_value);
    transparent_crc(g_207.f6, "g_207.f6", print_hash_value);
    transparent_crc(g_207.f7, "g_207.f7", print_hash_value);
    transparent_crc(g_207.f8, "g_207.f8", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        transparent_crc(g_208[i].f0, "g_208[i].f0", print_hash_value);
        transparent_crc(g_208[i].f1, "g_208[i].f1", print_hash_value);
        transparent_crc(g_208[i].f2, "g_208[i].f2", print_hash_value);
        transparent_crc(g_208[i].f3, "g_208[i].f3", print_hash_value);
        transparent_crc(g_208[i].f4, "g_208[i].f4", print_hash_value);
        transparent_crc(g_208[i].f5, "g_208[i].f5", print_hash_value);
        transparent_crc(g_208[i].f6, "g_208[i].f6", print_hash_value);
        transparent_crc(g_208[i].f7, "g_208[i].f7", print_hash_value);
        transparent_crc(g_208[i].f8, "g_208[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_209.f0, "g_209.f0", print_hash_value);
    transparent_crc(g_209.f1, "g_209.f1", print_hash_value);
    transparent_crc(g_209.f2, "g_209.f2", print_hash_value);
    transparent_crc(g_209.f3, "g_209.f3", print_hash_value);
    transparent_crc(g_209.f4, "g_209.f4", print_hash_value);
    transparent_crc(g_209.f5, "g_209.f5", print_hash_value);
    transparent_crc(g_209.f6, "g_209.f6", print_hash_value);
    transparent_crc(g_209.f7, "g_209.f7", print_hash_value);
    transparent_crc(g_209.f8, "g_209.f8", print_hash_value);
    transparent_crc(g_212.f0, "g_212.f0", print_hash_value);
    transparent_crc(g_212.f1, "g_212.f1", print_hash_value);
    transparent_crc(g_212.f2, "g_212.f2", print_hash_value);
    transparent_crc(g_212.f3, "g_212.f3", print_hash_value);
    transparent_crc(g_212.f4, "g_212.f4", print_hash_value);
    transparent_crc(g_212.f5, "g_212.f5", print_hash_value);
    transparent_crc(g_212.f6, "g_212.f6", print_hash_value);
    transparent_crc(g_212.f7, "g_212.f7", print_hash_value);
    transparent_crc(g_212.f8, "g_212.f8", print_hash_value);
    transparent_crc(g_284, "g_284", print_hash_value);
    transparent_crc(g_290.f0, "g_290.f0", print_hash_value);
    transparent_crc(g_290.f1, "g_290.f1", print_hash_value);
    transparent_crc(g_290.f2, "g_290.f2", print_hash_value);
    transparent_crc(g_290.f3, "g_290.f3", print_hash_value);
    transparent_crc(g_290.f4, "g_290.f4", print_hash_value);
    transparent_crc(g_290.f5, "g_290.f5", print_hash_value);
    transparent_crc(g_290.f6, "g_290.f6", print_hash_value);
    transparent_crc(g_290.f7, "g_290.f7", print_hash_value);
    transparent_crc(g_290.f8, "g_290.f8", print_hash_value);
    transparent_crc(g_301.f0, "g_301.f0", print_hash_value);
    transparent_crc(g_301.f1, "g_301.f1", print_hash_value);
    transparent_crc(g_301.f2, "g_301.f2", print_hash_value);
    transparent_crc(g_301.f3, "g_301.f3", print_hash_value);
    transparent_crc(g_301.f4, "g_301.f4", print_hash_value);
    transparent_crc(g_301.f5, "g_301.f5", print_hash_value);
    transparent_crc(g_301.f6, "g_301.f6", print_hash_value);
    transparent_crc(g_301.f7, "g_301.f7", print_hash_value);
    transparent_crc(g_301.f8, "g_301.f8", print_hash_value);
    transparent_crc(g_324, "g_324", print_hash_value);
    transparent_crc(g_354, "g_354", print_hash_value);
    transparent_crc(g_428, "g_428", print_hash_value);
    transparent_crc(g_441, "g_441", print_hash_value);
    transparent_crc(g_485, "g_485", print_hash_value);
    transparent_crc(g_594, "g_594", print_hash_value);
    transparent_crc(g_595, "g_595", print_hash_value);
    transparent_crc(g_618, "g_618", print_hash_value);
    transparent_crc(g_691, "g_691", print_hash_value);
    transparent_crc(g_816, "g_816", print_hash_value);
    transparent_crc(g_830.f0, "g_830.f0", print_hash_value);
    transparent_crc(g_830.f1, "g_830.f1", print_hash_value);
    transparent_crc(g_830.f2, "g_830.f2", print_hash_value);
    transparent_crc(g_830.f3, "g_830.f3", print_hash_value);
    transparent_crc(g_830.f4, "g_830.f4", print_hash_value);
    transparent_crc(g_830.f5, "g_830.f5", print_hash_value);
    transparent_crc(g_830.f6, "g_830.f6", print_hash_value);
    transparent_crc(g_830.f7, "g_830.f7", print_hash_value);
    transparent_crc(g_830.f8, "g_830.f8", print_hash_value);
    transparent_crc(g_943, "g_943", print_hash_value);
    transparent_crc(g_993.f0, "g_993.f0", print_hash_value);
    transparent_crc(g_993.f1, "g_993.f1", print_hash_value);
    transparent_crc(g_993.f2, "g_993.f2", print_hash_value);
    transparent_crc(g_993.f3, "g_993.f3", print_hash_value);
    transparent_crc(g_993.f4, "g_993.f4", print_hash_value);
    transparent_crc(g_993.f5, "g_993.f5", print_hash_value);
    transparent_crc(g_993.f6, "g_993.f6", print_hash_value);
    transparent_crc(g_993.f7, "g_993.f7", print_hash_value);
    transparent_crc(g_993.f8, "g_993.f8", print_hash_value);
    transparent_crc(g_1017, "g_1017", print_hash_value);
    transparent_crc(g_1157.f0, "g_1157.f0", print_hash_value);
    transparent_crc(g_1157.f1, "g_1157.f1", print_hash_value);
    transparent_crc(g_1157.f2, "g_1157.f2", print_hash_value);
    transparent_crc(g_1157.f3, "g_1157.f3", print_hash_value);
    transparent_crc(g_1157.f4, "g_1157.f4", print_hash_value);
    transparent_crc(g_1157.f5, "g_1157.f5", print_hash_value);
    transparent_crc(g_1157.f6, "g_1157.f6", print_hash_value);
    transparent_crc(g_1157.f7, "g_1157.f7", print_hash_value);
    transparent_crc(g_1157.f8, "g_1157.f8", print_hash_value);
    transparent_crc(g_1220.f0, "g_1220.f0", print_hash_value);
    transparent_crc(g_1220.f1, "g_1220.f1", print_hash_value);
    transparent_crc(g_1220.f2, "g_1220.f2", print_hash_value);
    transparent_crc(g_1220.f3, "g_1220.f3", print_hash_value);
    transparent_crc(g_1220.f4, "g_1220.f4", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_1309[i][j][k].f0, "g_1309[i][j][k].f0", print_hash_value);
                transparent_crc(g_1309[i][j][k].f1, "g_1309[i][j][k].f1", print_hash_value);
                transparent_crc(g_1309[i][j][k].f2, "g_1309[i][j][k].f2", print_hash_value);
                transparent_crc(g_1309[i][j][k].f3, "g_1309[i][j][k].f3", print_hash_value);
                transparent_crc(g_1309[i][j][k].f4, "g_1309[i][j][k].f4", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1347.f0, "g_1347.f0", print_hash_value);
    transparent_crc(g_1347.f1, "g_1347.f1", print_hash_value);
    transparent_crc(g_1347.f2, "g_1347.f2", print_hash_value);
    transparent_crc(g_1347.f3, "g_1347.f3", print_hash_value);
    transparent_crc(g_1347.f4, "g_1347.f4", print_hash_value);
    transparent_crc(g_1347.f5, "g_1347.f5", print_hash_value);
    transparent_crc(g_1347.f6, "g_1347.f6", print_hash_value);
    transparent_crc(g_1347.f7, "g_1347.f7", print_hash_value);
    transparent_crc(g_1347.f8, "g_1347.f8", print_hash_value);
    transparent_crc(g_1443, "g_1443", print_hash_value);
    transparent_crc(g_1456, "g_1456", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        transparent_crc(g_1496[i], "g_1496[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_1512[i].f0, "g_1512[i].f0", print_hash_value);
        transparent_crc(g_1512[i].f1, "g_1512[i].f1", print_hash_value);
        transparent_crc(g_1512[i].f2, "g_1512[i].f2", print_hash_value);
        transparent_crc(g_1512[i].f3, "g_1512[i].f3", print_hash_value);
        transparent_crc(g_1512[i].f4, "g_1512[i].f4", print_hash_value);
        transparent_crc(g_1512[i].f5, "g_1512[i].f5", print_hash_value);
        transparent_crc(g_1512[i].f6, "g_1512[i].f6", print_hash_value);
        transparent_crc(g_1512[i].f7, "g_1512[i].f7", print_hash_value);
        transparent_crc(g_1512[i].f8, "g_1512[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1544.f0, "g_1544.f0", print_hash_value);
    transparent_crc(g_1544.f1, "g_1544.f1", print_hash_value);
    transparent_crc(g_1544.f2, "g_1544.f2", print_hash_value);
    transparent_crc(g_1544.f3, "g_1544.f3", print_hash_value);
    transparent_crc(g_1544.f4, "g_1544.f4", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 316
   depth: 1, occurrence: 4
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 1
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 1
XXX structs with bitfields in the program: 24
breakdown:
   indirect level: 0, occurrence: 2
   indirect level: 1, occurrence: 11
   indirect level: 2, occurrence: 5
   indirect level: 3, occurrence: 5
   indirect level: 4, occurrence: 1
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 22
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 2
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 6

XXX max expression depth: 50
breakdown:
   depth: 1, occurrence: 81
   depth: 2, occurrence: 18
   depth: 3, occurrence: 2
   depth: 9, occurrence: 1
   depth: 16, occurrence: 2
   depth: 18, occurrence: 1
   depth: 19, occurrence: 1
   depth: 21, occurrence: 2
   depth: 22, occurrence: 1
   depth: 24, occurrence: 2
   depth: 26, occurrence: 2
   depth: 27, occurrence: 2
   depth: 28, occurrence: 1
   depth: 32, occurrence: 2
   depth: 41, occurrence: 1
   depth: 48, occurrence: 1
   depth: 50, occurrence: 1

XXX total number of pointers: 408

XXX times a variable address is taken: 780
XXX times a pointer is dereferenced on RHS: 194
breakdown:
   depth: 1, occurrence: 139
   depth: 2, occurrence: 49
   depth: 3, occurrence: 6
XXX times a pointer is dereferenced on LHS: 226
breakdown:
   depth: 1, occurrence: 174
   depth: 2, occurrence: 32
   depth: 3, occurrence: 19
   depth: 4, occurrence: 1
XXX times a pointer is compared with null: 30
XXX times a pointer is compared with address of another variable: 4
XXX times a pointer is compared with another pointer: 9
XXX times a pointer is qualified to be dereferenced: 2422

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 1057
   level: 2, occurrence: 269
   level: 3, occurrence: 127
   level: 4, occurrence: 38
   level: 5, occurrence: 7
XXX number of pointers point to pointers: 189
XXX number of pointers point to scalars: 206
XXX number of pointers point to structs: 13
XXX percent of pointers has null in alias set: 28.2
XXX average alias set size: 1.54

XXX times a non-volatile is read: 1221
XXX times a non-volatile is write: 704
XXX times a volatile is read: 28
XXX    times read thru a pointer: 2
XXX times a volatile is write: 4
XXX    times written thru a pointer: 1
XXX times a volatile is available for access: 543
XXX percentage of non-volatile access: 98.4

XXX forward jumps: 0
XXX backward jumps: 4

XXX stmts: 81
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 22
   depth: 1, occurrence: 14
   depth: 2, occurrence: 8
   depth: 3, occurrence: 13
   depth: 4, occurrence: 9
   depth: 5, occurrence: 15

XXX percentage a fresh-made variable is used: 19.9
XXX percentage an existing variable is used: 80.1
FYI: the random generator makes assumptions about the integer size. See platform.info for more details.
********************* end of statistics **********************/

