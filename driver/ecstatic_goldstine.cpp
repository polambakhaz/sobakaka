/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/ecstatic_goldstine.cpp
 * Seed:      793531030
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
#pragma pack(push)
#pragma pack(1)
struct S0 {
   uint32_t  f0;
   volatile uint32_t  f1;
   volatile int32_t  f2;
   uint8_t  f3;
   int8_t  f4;
   uint16_t  f5;
   volatile uint32_t  f6;
   int8_t  f7;
   int8_t  f8;
   uint8_t  f9;
};
#pragma pack(pop)

/* --- GLOBAL VARIABLES --- */
static int32_t g_3[8][5][6] = {{{(-8L),0xB04800FAL,4L,0xE76D238EL,0xC2E607D1L,1L},{1L,0xB04800FAL,(-1L),(-1L),1L,0L},{5L,(-1L),0x21589AFCL,(-7L),0x1DF82D83L,(-1L)},{0x12349124L,0x2FBB6BC3L,8L,0x4A2C6EB8L,(-8L),0xF068CD54L},{0x6E12CDFDL,3L,0x993DD61FL,0x7A501900L,0xC38EC326L,0x21589AFCL}},{{0xE76D238EL,0x21589AFCL,1L,(-1L),0xAE883781L,(-2L)},{1L,5L,(-7L),0xF068CD54L,0xCC73EE49L,0x292978D8L},{0xB04800FAL,0x1C0A9C5AL,0x449C9FB3L,0xC328129EL,0xFD020461L,0x76A47CDEL},{0x8D383303L,0x7F9F41ADL,0x86AEBA4DL,(-7L),0x6A08376FL,6L},{(-4L),0x4D4B4B26L,0xF98CAFA3L,0L,0xCEF33920L,0x73672D71L}},{{0x1DF82D83L,0L,0x67684593L,4L,0x7A501900L,0x7F28A996L},{9L,0x7356A0B3L,0x2C25FCC5L,7L,0x7F28A996L,(-1L)},{2L,1L,0x449C9FB3L,0x7A501900L,0x890BA5FCL,0xC328129EL},{0x4A2C6EB8L,0x993DD61FL,0xC2E607D1L,0x86AEBA4DL,0x73672D71L,0x2E1DFE00L},{0xE76D238EL,0x8D383303L,6L,(-1L),1L,0L}},{{0xFD2D1A4EL,4L,0x2FBB6BC3L,0x2FBB6BC3L,4L,0xFD2D1A4EL},{1L,(-7L),1L,0x3D88101AL,(-3L),0L},{0x989226C3L,3L,1L,(-1L),0x4D4B4B26L,0x890BA5FCL},{0x989226C3L,0xE76D238EL,(-1L),0x3D88101AL,0x02D9CAAFL,1L},{1L,(-3L),0x6E12CDFDL,0x2FBB6BC3L,0xC2E607D1L,0x1E5DE2CAL}},{{0xFD2D1A4EL,0x67684593L,4L,(-1L),0L,(-3L)},{0xE76D238EL,0xC328129EL,0x2EE8B720L,0x86AEBA4DL,5L,0x5912491EL},{0x4A2C6EB8L,0xB04800FAL,0x6A08376FL,0x7A501900L,0x292978D8L,0L},{2L,0xF7FFFF97L,0L,7L,0x7356A0B3L,0xAE883781L},{9L,0x1DF82D83L,0x7F28A996L,4L,0x7F9F41ADL,(-2L)}},{{0x1DF82D83L,0L,5L,0L,4L,0x2C25FCC5L},{(-4L),1L,3L,(-7L),0x993DD61FL,0x22DB785BL},{0x8D383303L,7L,0x993DD61FL,0xC38EC326L,1L,4L},{4L,0x6A08376FL,(-1L),1L,0L,0L},{5L,4L,1L,6L,1L,0xCC73EE49L}},{{(-1L),0L,5L,1L,0x67684593L,(-1L)},{0x4D4B4B26L,2L,8L,0x76A47CDEL,0xF068CD54L,0x292978D8L},{0x1C0A9C5AL,0x6D5D64F6L,0xE56E623BL,0x6D5D64F6L,0x1C0A9C5AL,0x3D88101AL},{0x6E12CDFDL,(-1L),1L,0x5912491EL,0x2FBB6BC3L,0xC38EC326L},{0x3D88101AL,0x4A2C6EB8L,0x02D9CAAFL,(-1L),0x2C25FCC5L,0xC38EC326L}},{{0L,0xCC73EE49L,1L,0x8D383303L,(-1L),0x3D88101AL},{0x2C25FCC5L,(-2L),0xE56E623BL,(-1L),(-1L),0x292978D8L},{0xAE883781L,6L,8L,0x7F9F41ADL,0L,(-1L)},{1L,1L,5L,1L,8L,0xCC73EE49L},{0x6A08376FL,0xAE883781L,1L,0L,0xFD020461L,1L}}};
static volatile struct S0 g_14 = {1UL,0x1A75C26FL,0x5532CF2DL,0x60L,0x50L,65529UL,0xAE23F119L,0xD3L,7L,0x1CL};/* VOLATILE GLOBAL g_14 */
static uint8_t g_35[8][2] = {{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL},{0xBDL,0xBDL}};
static uint16_t g_85 = 65533UL;
static uint8_t g_90 = 0xE5L;
static uint64_t g_92 = 0x819D97827EA9C8C9LL;
static volatile int16_t g_103 = 0L;/* VOLATILE GLOBAL g_103 */
static volatile int16_t *g_102[2] = {&g_103,&g_103};
static int16_t g_105 = 0x8EC7L;
static uint16_t g_139 = 0xC16DL;
static int8_t g_154 = 0xCEL;
static int64_t g_163 = 0xF712523078B0CAD1LL;
static int64_t g_165 = 0x0DA6F0B9C9A99D27LL;
static uint32_t g_166 = 1UL;
static uint8_t g_189 = 0UL;
static int32_t *g_197 = &g_3[5][4][2];
static int32_t **g_196 = &g_197;
static const int64_t g_199[1][9][6] = {{{2L,0xA769E6F5A32C323CLL,0L,(-7L),(-7L),0L},{0xA3779968936E2BBFLL,0xA3779968936E2BBFLL,8L,1L,(-3L),(-7L)},{8L,0L,0x62810AE63E790F2ELL,(-1L),(-1L),8L},{(-5L),8L,0x62810AE63E790F2ELL,0x3C7DD24A243EC472LL,0xA3779968936E2BBFLL,(-7L)},{0L,0x3C7DD24A243EC472LL,8L,0L,0xE44B7FDB35930639LL,0L},{0L,0xE44B7FDB35930639LL,0L,8L,0x3C7DD24A243EC472LL,0L},{(-7L),0xA3779968936E2BBFLL,0x3C7DD24A243EC472LL,0x62810AE63E790F2ELL,8L,(-5L)},{8L,(-1L),(-1L),0x62810AE63E790F2ELL,0L,8L},{(-7L),(-3L),1L,8L,0xA3779968936E2BBFLL,0xA3779968936E2BBFLL}}};
static uint16_t g_306 = 0x74C3L;
static int16_t g_331 = 0L;
static uint32_t g_333 = 0xDD30E99DL;
static volatile uint8_t g_350 = 0x7FL;/* VOLATILE GLOBAL g_350 */
static volatile uint8_t g_351[9][7][4] = {{{2UL,0x13L,255UL,7UL},{0xECL,0x13L,2UL,250UL},{0x93L,248UL,1UL,0x31L},{0xECL,0x86L,0x13L,0x31L},{2UL,248UL,1UL,250UL},{7UL,0x13L,0x13L,7UL},{0x18L,0x13L,1UL,250UL}},{{250UL,248UL,2UL,0x31L},{0x18L,0x86L,255UL,0x31L},{7UL,248UL,0x9CL,250UL},{2UL,0x13L,255UL,7UL},{0xECL,0x13L,2UL,250UL},{0x93L,248UL,1UL,0x31L},{0xECL,0x86L,0x13L,0x31L}},{{2UL,248UL,1UL,250UL},{7UL,0x13L,0x13L,7UL},{0x18L,0x13L,1UL,250UL},{250UL,248UL,2UL,0x31L},{0x18L,0x86L,255UL,0x31L},{7UL,248UL,0x9CL,250UL},{2UL,0x13L,255UL,7UL}},{{0xECL,0x13L,2UL,250UL},{0x93L,248UL,1UL,0x31L},{0xECL,0x86L,0x13L,0x31L},{2UL,248UL,1UL,250UL},{7UL,0x13L,0x13L,7UL},{0x18L,0x13L,1UL,250UL},{250UL,248UL,2UL,0x31L}},{{0x18L,0x86L,255UL,0xFFL},{0x31L,0x86L,2UL,7UL},{0xE1L,0x9CL,1UL,0x31L},{250UL,0x9CL,248UL,7UL},{2UL,0x86L,5UL,0xFFL},{250UL,0x13L,0x9CL,0xFFL},{0xE1L,0x86L,1UL,7UL}},{{0x31L,0x9CL,0x9CL,0x31L},{0x93L,0x9CL,5UL,7UL},{7UL,0x86L,248UL,0xFFL},{0x93L,0x13L,1UL,0xFFL},{0x31L,0x86L,2UL,7UL},{0xE1L,0x9CL,1UL,0x31L},{250UL,0x9CL,248UL,7UL}},{{2UL,0x86L,5UL,0xFFL},{250UL,0x13L,0x9CL,0xFFL},{0xE1L,0x86L,1UL,7UL},{0x31L,0x9CL,0x9CL,0x31L},{0x93L,0x9CL,5UL,7UL},{7UL,0x86L,248UL,0xFFL},{0x93L,0x13L,1UL,0xFFL}},{{0x31L,0x86L,2UL,7UL},{0xE1L,0x9CL,1UL,0x31L},{250UL,0x9CL,248UL,7UL},{2UL,0x86L,5UL,0xFFL},{250UL,0x13L,0x9CL,0xFFL},{0xE1L,0x86L,1UL,7UL},{0x31L,0x9CL,0x9CL,0x31L}},{{0x93L,0x9CL,5UL,7UL},{7UL,0x86L,248UL,0xFFL},{0x93L,0x13L,1UL,0xFFL},{0x31L,0x86L,2UL,7UL},{0xE1L,0x9CL,1UL,0x31L},{250UL,0x9CL,248UL,7UL},{2UL,0x86L,5UL,0xFFL}}};
static volatile uint8_t g_352[8][4] = {{0x28L,0x28L,0x11L,0UL},{0x8AL,0x49L,0x8AL,0x11L},{0x8AL,0x11L,0x11L,0x8AL},{0x28L,0x11L,0UL,0x11L},{0x11L,0x49L,0UL,0UL},{0x28L,0x28L,0x11L,0UL},{0x8AL,0x49L,0x8AL,0x11L},{0x8AL,0x11L,0x11L,0x8AL}};
static volatile uint8_t g_353 = 0x9BL;/* VOLATILE GLOBAL g_353 */
static volatile uint8_t *g_349[9] = {&g_350,&g_350,&g_350,&g_350,&g_350,&g_350,&g_350,&g_350,&g_350};
static volatile uint8_t **g_348 = &g_349[2];
static uint64_t * const  volatile g_365 = &g_92;/* VOLATILE GLOBAL g_365 */
static uint64_t * const  volatile *g_364 = &g_365;
static int32_t g_370 = 1L;
static uint32_t g_391 = 2UL;
static uint16_t *g_429 = &g_306;
static uint16_t **g_428[7] = {&g_429,&g_429,&g_429,&g_429,&g_429,&g_429,&g_429};
static uint16_t ** volatile * volatile g_448[7] = {&g_428[1],&g_428[1],&g_428[1],&g_428[1],&g_428[1],&g_428[1],&g_428[1]};
static uint16_t ** volatile *g_449[2][2][6] = {{{&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0]},{&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0]}},{{&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0]},{&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0],&g_428[0]}}};
static uint16_t ** volatile * volatile *g_447[3][5] = {{&g_449[0][0][1],&g_449[0][0][1],(void*)0,&g_449[0][0][1],&g_449[0][0][1]},{&g_449[1][1][1],&g_449[1][1][5],&g_449[1][1][1],&g_449[1][1][1],&g_449[1][1][5]},{&g_449[0][0][1],&g_448[1],&g_448[1],&g_449[0][0][1],&g_448[1]}};
static int16_t g_453 = 0xD052L;
static int16_t g_469 = 3L;
static int32_t g_470 = 0x576B5BEDL;
static struct S0 g_551 = {1UL,1UL,-7L,2UL,0x1BL,1UL,0xFC718440L,6L,0x78L,8UL};/* VOLATILE GLOBAL g_551 */
static struct S0 *g_550 = &g_551;
static struct S0 g_631 = {0x9BB40B8BL,6UL,0xAE51D758L,9UL,0x10L,65527UL,4294967287UL,0x64L,-1L,0x11L};/* VOLATILE GLOBAL g_631 */
static uint64_t g_633 = 0UL;
static struct S0 **g_662[9] = {&g_550,&g_550,(void*)0,&g_550,&g_550,(void*)0,&g_550,&g_550,(void*)0};
static int32_t g_701 = 0x90D373DBL;
static uint8_t **g_739 = (void*)0;
static uint8_t ***g_738 = &g_739;
static int64_t *g_758 = &g_165;
static int32_t g_768 = 0x9359B6D7L;
static int64_t g_793 = 7L;
static const struct S0 g_800 = {0xD0CD9373L,0xCF50E259L,0x80316C74L,3UL,8L,1UL,0UL,7L,0x4FL,0x56L};/* VOLATILE GLOBAL g_800 */
static uint16_t ****g_812[7] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
static int8_t g_851 = 1L;
static const int32_t g_853 = (-7L);
static uint64_t ***g_865[1][5][4] = {{{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0}}};
static uint64_t g_923 = 0x405338FB70C0BE16LL;
static int16_t g_930 = 0x91F0L;
static uint16_t **g_938 = &g_429;
static uint16_t **g_939[9] = {&g_429,&g_429,&g_429,&g_429,&g_429,&g_429,&g_429,&g_429,&g_429};
static uint16_t *** const g_937[6] = {&g_939[2],&g_939[2],&g_939[2],&g_939[2],&g_939[2],&g_939[2]};
static uint16_t *** const *g_936 = &g_937[1];
static uint16_t *** const **g_935 = &g_936;
static struct S0 g_950 = {0xE186C266L,0x19D5DD46L,2L,255UL,0xD3L,65526UL,4294967295UL,8L,0x28L,255UL};/* VOLATILE GLOBAL g_950 */
static const uint16_t **g_984 = (void*)0;
static struct S0 g_1036 = {0xB65ECA1DL,4294967286UL,-9L,1UL,1L,65529UL,1UL,0L,0xBFL,0xEBL};/* VOLATILE GLOBAL g_1036 */
static struct S0 g_1037 = {0x561C73F1L,4294967286UL,0xF30B8137L,255UL,0x37L,65529UL,9UL,-9L,-1L,0x2FL};/* VOLATILE GLOBAL g_1037 */
static struct S0 g_1038 = {0x9696870AL,0x00BCD998L,-10L,0xC5L,1L,0x076AL,3UL,-1L,0xEAL,1UL};/* VOLATILE GLOBAL g_1038 */
static const int16_t g_1137 = 0x52FDL;
static int16_t g_1150 = 0xB423L;
static const int8_t g_1151 = 5L;
static struct S0 g_1242 = {0x1218DBACL,1UL,1L,255UL,8L,0x4AA2L,1UL,0L,0xFFL,0x09L};/* VOLATILE GLOBAL g_1242 */
static const struct S0 g_1244 = {0x8FA727D9L,0x720636EBL,0L,0x13L,1L,65526UL,0UL,-1L,0L,0xF9L};/* VOLATILE GLOBAL g_1244 */
static struct S0 ****g_1267 = (void*)0;
static struct S0 *** volatile g_1270 = &g_662[1];/* VOLATILE GLOBAL g_1270 */
static struct S0 *** volatile *g_1269 = &g_1270;
static uint16_t **g_1376 = &g_429;
static volatile int64_t g_1493 = 1L;/* VOLATILE GLOBAL g_1493 */
static volatile int64_t *g_1492[2] = {&g_1493,&g_1493};
static volatile int64_t **g_1491 = &g_1492[1];
static volatile int64_t *** const g_1490 = &g_1491;
static volatile int64_t *** const  volatile *g_1489 = &g_1490;
static const int32_t *g_1523[8] = {&g_470,&g_470,&g_470,&g_470,&g_470,&g_470,&g_470,&g_470};
static struct S0 g_1583[1][4][1] = {{{{0x70A21D57L,1UL,6L,0x32L,0x7DL,0x541EL,6UL,0x4DL,0x17L,0UL}},{{0x70A21D57L,1UL,6L,0x32L,0x7DL,0x541EL,6UL,0x4DL,0x17L,0UL}},{{0x70A21D57L,1UL,6L,0x32L,0x7DL,0x541EL,6UL,0x4DL,0x17L,0UL}},{{0x70A21D57L,1UL,6L,0x32L,0x7DL,0x541EL,6UL,0x4DL,0x17L,0UL}}}};
static struct S0 g_1584[10][8][2] = {{{{5UL,0x33AE08C7L,-1L,255UL,0x27L,0UL,4294967290UL,1L,-5L,255UL},{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L}},{{5UL,0x33AE08C7L,-1L,255UL,0x27L,0UL,4294967290UL,1L,-5L,255UL},{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL}},{{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL},{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL}},{{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL},{1UL,0x39436DE3L,1L,252UL,0x73L,0x9524L,4294967286UL,-1L,0xEEL,0x13L}},{{0x462233A0L,0UL,0x54100F46L,0xC8L,-1L,0xD83DL,4294967294UL,-3L,0x77L,255UL},{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L}},{{4294967291UL,0xA5A6D9E9L,0xBB90DEA4L,0x6DL,0xF0L,0x6F1FL,4UL,0L,1L,248UL},{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L}},{{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L},{0UL,0UL,0x625FF3DEL,0x91L,0x4EL,0x2EBFL,4294967288UL,0x20L,1L,0x84L}},{{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L},{4294967295UL,0x9FC81D50L,0L,0x95L,0xB9L,1UL,0UL,-3L,0x30L,4UL}}},{{{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL},{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL}},{{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L},{0x462233A0L,0UL,0x54100F46L,0xC8L,-1L,0xD83DL,4294967294UL,-3L,0x77L,255UL}},{{4294967290UL,0x8A388574L,1L,255UL,0xFCL,0x6AB9L,3UL,-1L,0x4DL,0xE0L},{0xCCA7B475L,0x1EC27893L,0xDC096CF8L,2UL,3L,0x3E15L,4294967290UL,0L,9L,0x3FL}},{{0xAD0203CEL,0x196C3188L,8L,0UL,0L,1UL,0x38C1EF7FL,0L,-1L,0xA0L},{4294967295UL,0xB3A73CF8L,0L,7UL,1L,1UL,4UL,1L,0x29L,6UL}},{{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L},{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL}},{{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL},{0x1670406AL,0x74ABF60CL,0x383618C9L,0x83L,0x21L,0UL,0xD4EF433DL,0xE6L,0x32L,0xB0L}},{{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL},{4294967290UL,0x8A388574L,1L,255UL,0xFCL,0x6AB9L,3UL,-1L,0x4DL,0xE0L}},{{4294967295UL,4294967294UL,1L,0xCDL,-3L,0xBFB4L,4294967288UL,0x28L,1L,0xC8L},{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL}}},{{{0UL,0x3E40CC24L,0xA5767DA7L,0x4EL,0x70L,0xD649L,4294967292UL,0L,0x85L,2UL},{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL}},{{0x6028F5CBL,4294967291UL,0x2D1294CAL,0xD2L,-1L,65530UL,0x0CE2D45CL,0x3FL,0L,7UL},{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L}},{{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL},{0UL,0x3CFE7A73L,1L,0x05L,0xB8L,0x3D06L,0UL,8L,-6L,253UL}},{{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL},{0UL,0x3CFE7A73L,1L,0x05L,0xB8L,0x3D06L,0UL,8L,-6L,253UL}},{{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL},{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L}},{{0x6028F5CBL,4294967291UL,0x2D1294CAL,0xD2L,-1L,65530UL,0x0CE2D45CL,0x3FL,0L,7UL},{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL}},{{0UL,0x3E40CC24L,0xA5767DA7L,0x4EL,0x70L,0xD649L,4294967292UL,0L,0x85L,2UL},{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL}},{{4294967295UL,4294967294UL,1L,0xCDL,-3L,0xBFB4L,4294967288UL,0x28L,1L,0xC8L},{4294967290UL,0x8A388574L,1L,255UL,0xFCL,0x6AB9L,3UL,-1L,0x4DL,0xE0L}}},{{{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL},{0x1670406AL,0x74ABF60CL,0x383618C9L,0x83L,0x21L,0UL,0xD4EF433DL,0xE6L,0x32L,0xB0L}},{{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL},{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL}},{{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L},{4294967295UL,0xB3A73CF8L,0L,7UL,1L,1UL,4UL,1L,0x29L,6UL}},{{0xAD0203CEL,0x196C3188L,8L,0UL,0L,1UL,0x38C1EF7FL,0L,-1L,0xA0L},{0xCCA7B475L,0x1EC27893L,0xDC096CF8L,2UL,3L,0x3E15L,4294967290UL,0L,9L,0x3FL}},{{4294967290UL,0x8A388574L,1L,255UL,0xFCL,0x6AB9L,3UL,-1L,0x4DL,0xE0L},{0x462233A0L,0UL,0x54100F46L,0xC8L,-1L,0xD83DL,4294967294UL,-3L,0x77L,255UL}},{{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L},{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL}},{{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL},{4294967295UL,0x9FC81D50L,0L,0x95L,0xB9L,1UL,0UL,-3L,0x30L,4UL}},{{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L},{0UL,0UL,0x625FF3DEL,0x91L,0x4EL,0x2EBFL,4294967288UL,0x20L,1L,0x84L}}},{{{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L},{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L}},{{4294967291UL,0xA5A6D9E9L,0xBB90DEA4L,0x6DL,0xF0L,0x6F1FL,4UL,0L,1L,248UL},{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L}},{{0x462233A0L,0UL,0x54100F46L,0xC8L,-1L,0xD83DL,4294967294UL,-3L,0x77L,255UL},{1UL,0x39436DE3L,1L,252UL,0x73L,0x9524L,4294967286UL,-1L,0xEEL,0x13L}},{{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL},{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL}},{{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL},{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL}},{{5UL,0x33AE08C7L,-1L,255UL,0x27L,0UL,4294967290UL,1L,-5L,255UL},{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L}},{{5UL,0x33AE08C7L,-1L,255UL,0x27L,0UL,4294967290UL,1L,-5L,255UL},{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL}},{{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL},{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL}}},{{{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL},{1UL,0x39436DE3L,1L,252UL,0x73L,0x9524L,4294967286UL,-1L,0xEEL,0x13L}},{{0x462233A0L,0UL,0x54100F46L,0xC8L,-1L,0xD83DL,4294967294UL,-3L,0x77L,255UL},{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L}},{{4294967291UL,0xA5A6D9E9L,0xBB90DEA4L,0x6DL,0xF0L,0x6F1FL,4UL,0L,1L,248UL},{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L}},{{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL},{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L}},{{0xCCA7B475L,0x1EC27893L,0xDC096CF8L,2UL,3L,0x3E15L,4294967290UL,0L,9L,0x3FL},{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL}},{{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL},{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L}},{{4294967295UL,1UL,0x46917FBCL,0xC0L,5L,0xBA2CL,0xB0880F35L,0x6CL,0x2BL,0x3FL},{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL}},{{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L},{4294967291UL,0xA5A6D9E9L,0xBB90DEA4L,0x6DL,0xF0L,0x6F1FL,4UL,0L,1L,248UL}}},{{{4294967295UL,4294967294UL,1L,0xCDL,-3L,0xBFB4L,4294967288UL,0x28L,1L,0xC8L},{0UL,0UL,0x625FF3DEL,0x91L,0x4EL,0x2EBFL,4294967288UL,0x20L,1L,0x84L}},{{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL},{4294967293UL,0xE90D6B02L,1L,0xD4L,0x22L,0x7823L,0UL,3L,0x0EL,0x80L}},{{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL},{4294967295UL,0xB3A73CF8L,0L,7UL,1L,1UL,4UL,1L,0x29L,6UL}},{{1UL,8UL,0x912195C8L,0x55L,-1L,0xFC79L,0x447E01F6L,0xE8L,0L,0xB0L},{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L}},{{1UL,0x39436DE3L,1L,252UL,0x73L,0x9524L,4294967286UL,-1L,0xEEL,0x13L},{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL}},{{0x406CA07EL,4294967295UL,0x1C87E74FL,0xD7L,0x85L,3UL,0xC9B9ED7CL,0xF5L,0xB1L,0xE3L},{0x11C961EAL,0UL,-9L,0xABL,0L,65528UL,0xE916FEFCL,0x60L,-3L,255UL}},{{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL},{4294967295UL,1UL,0x46917FBCL,0xC0L,5L,0xBA2CL,0xB0880F35L,0x6CL,0x2BL,0x3FL}},{{0xAD0203CEL,0x196C3188L,8L,0UL,0L,1UL,0x38C1EF7FL,0L,-1L,0xA0L},{0xA4DF6E2CL,0x81995F19L,1L,1UL,0x6FL,65535UL,1UL,6L,-8L,0UL}}},{{{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L},{0xA4DF6E2CL,0x81995F19L,1L,1UL,0x6FL,65535UL,1UL,6L,-8L,0UL}},{{0xAD0203CEL,0x196C3188L,8L,0UL,0L,1UL,0x38C1EF7FL,0L,-1L,0xA0L},{4294967295UL,1UL,0x46917FBCL,0xC0L,5L,0xBA2CL,0xB0880F35L,0x6CL,0x2BL,0x3FL}},{{4294967288UL,1UL,0xA5BC5DEEL,1UL,0L,0x9479L,0x6B858B83L,7L,0x29L,0x4FL},{0x11C961EAL,0UL,-9L,0xABL,0L,65528UL,0xE916FEFCL,0x60L,-3L,255UL}},{{0x406CA07EL,4294967295UL,0x1C87E74FL,0xD7L,0x85L,3UL,0xC9B9ED7CL,0xF5L,0xB1L,0xE3L},{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL}},{{1UL,0x39436DE3L,1L,252UL,0x73L,0x9524L,4294967286UL,-1L,0xEEL,0x13L},{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L}},{{1UL,8UL,0x912195C8L,0x55L,-1L,0xFC79L,0x447E01F6L,0xE8L,0L,0xB0L},{4294967295UL,0xB3A73CF8L,0L,7UL,1L,1UL,4UL,1L,0x29L,6UL}},{{0UL,1UL,3L,255UL,-9L,65529UL,0x5C0DFEE9L,0xE5L,0xB9L,6UL},{4294967293UL,0xE90D6B02L,1L,0xD4L,0x22L,0x7823L,0UL,3L,0x0EL,0x80L}},{{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL},{0UL,0UL,0x625FF3DEL,0x91L,0x4EL,0x2EBFL,4294967288UL,0x20L,1L,0x84L}}},{{{4294967295UL,4294967294UL,1L,0xCDL,-3L,0xBFB4L,4294967288UL,0x28L,1L,0xC8L},{4294967291UL,0xA5A6D9E9L,0xBB90DEA4L,0x6DL,0xF0L,0x6F1FL,4UL,0L,1L,248UL}},{{0x5D3E8D49L,3UL,0x905078B4L,0x47L,1L,0xF0C6L,4294967295UL,0x35L,1L,0xB2L},{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL}},{{4294967295UL,1UL,0x46917FBCL,0xC0L,5L,0xBA2CL,0xB0880F35L,0x6CL,0x2BL,0x3FL},{0UL,0x7C715609L,-10L,255UL,0x68L,65535UL,0xDC0D05C6L,-1L,0L,0xD2L}},{{4294967290UL,1UL,0L,0x9AL,-1L,65535UL,0xBF56281BL,0L,0x4BL,1UL},{0x8C35D37CL,4UL,-1L,249UL,0L,0x90AEL,0UL,0xB2L,0L,9UL}},{{0xCCA7B475L,0x1EC27893L,0xDC096CF8L,2UL,3L,0x3E15L,4294967290UL,0L,9L,0x3FL},{0x99E5870BL,4UL,6L,0xAAL,0x05L,0xAFBCL,1UL,0x84L,5L,0x63L}},{{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL},{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL}},{{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL},{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL}},{{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL},{0UL,4294967293UL,-1L,0x50L,-1L,0x5B15L,4294967295UL,0xADL,0x11L,0x64L}}},{{{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL},{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L}},{{0x11C961EAL,0UL,-9L,0xABL,0L,65528UL,0xE916FEFCL,0x60L,-3L,255UL},{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL}},{{0x1670406AL,0x74ABF60CL,0x383618C9L,0x83L,0x21L,0UL,0xD4EF433DL,0xE6L,0x32L,0xB0L},{0xCCA7B475L,0x1EC27893L,0xDC096CF8L,2UL,3L,0x3E15L,4294967290UL,0L,9L,0x3FL}},{{0x1670406AL,0x74ABF60CL,0x383618C9L,0x83L,0x21L,0UL,0xD4EF433DL,0xE6L,0x32L,0xB0L},{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL}},{{0x11C961EAL,0UL,-9L,0xABL,0L,65528UL,0xE916FEFCL,0x60L,-3L,255UL},{0x00228BB1L,0x7400F708L,0x60F64791L,0x15L,-9L,0x684CL,4294967288UL,0xEDL,0x99L,0x46L}},{{0UL,0x71A31BE2L,-1L,1UL,0x48L,0UL,4294967288UL,1L,0x25L,253UL},{0UL,4294967293UL,-1L,0x50L,-1L,0x5B15L,4294967295UL,0xADL,0x11L,0x64L}},{{0x858001C7L,4UL,0x4E7CE7B0L,255UL,-5L,4UL,0x59270129L,3L,-1L,0x3BL},{0xD59F39DDL,0UL,1L,0x6EL,0xA2L,65535UL,4294967292UL,-1L,0x98L,255UL}},{{0x3D313ECDL,0x8B9816E2L,0L,0x2DL,0xA7L,0xE4B9L,0x217EE97AL,0xA6L,0x5CL,0UL},{0x9ADC6B61L,0UL,0x66FFFF55L,0xAAL,0x73L,65535UL,0x0FEDBD0BL,0xFAL,0xAAL,1UL}}}};
static uint32_t g_1607 = 7UL;
static struct S0 g_1608 = {4294967295UL,0x1C7ED944L,0x8B7EC927L,0x6FL,0xDAL,0x54A9L,1UL,0xF4L,0x8EL,249UL};/* VOLATILE GLOBAL g_1608 */
static struct S0 g_1609 = {0xECC31248L,0x569D2A65L,0xAEA7BF8CL,1UL,0x40L,0xA10BL,5UL,0x26L,0L,1UL};/* VOLATILE GLOBAL g_1609 */
static struct S0 g_1613 = {1UL,4294967295UL,0xE02B83FBL,246UL,8L,0x81FFL,4294967295UL,0xDCL,-2L,0UL};/* VOLATILE GLOBAL g_1613 */
static volatile struct S0 g_1660[6][8][4] = {{{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL}}},{{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL}}},{{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L}}},{{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{4294967295UL,0xFC1F5072L,-1L,0xA9L,0L,0xBFEBL,0xCB0CA63FL,-1L,0x0FL,0xCFL},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0xB8AFBE4AL,5UL,-1L,1UL,-4L,0xC4B3L,0x0F696E76L,0xD5L,-1L,0x80L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0x5F83B6BDL,4294967292UL,-6L,0x49L,-1L,0x0369L,0UL,0xC2L,0x40L,0x81L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{6UL,0x3C702CDDL,0x87FFD9CFL,0xE5L,-9L,1UL,0x503AD62CL,-3L,0xB0L,1UL}},{{0xCB6265ABL,0xDD06AE7EL,0xC9F66643L,0x52L,0xDCL,0x2091L,0xFB66E01BL,0xBDL,0xA1L,0xB6L},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0x28AFC413L,1UL,9L,1UL,0x2DL,0UL,4294967289UL,0xF8L,0x61L,255UL},{0x67C8D5C4L,0xC1D0E5BDL,0xFEFA5346L,0x71L,8L,65535UL,0x0945C213L,0xCDL,0x4CL,0UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x139AA64EL,0x315B6560L,0x6D4A9213L,255UL,0x7CL,0xF020L,0x9BCE7B99L,0xEDL,0xD5L,0xE2L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL},{0xE3B53467L,0x0BEE7015L,0x745CDFA8L,0xD0L,0xE4L,65530UL,0x655D8E39L,0xC8L,0L,7UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x139AA64EL,0x315B6560L,0x6D4A9213L,255UL,0x7CL,0xF020L,0x9BCE7B99L,0xEDL,0xD5L,0xE2L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L}}},{{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0x7AFD5A41L,0xBC0FB6F8L,0xD3E0D0A3L,0x28L,1L,0x7F78L,4294967295UL,0xB2L,0xA8L,255UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{1UL,0xDB90F9DAL,5L,0x71L,-1L,9UL,0xC2195E34L,-1L,0L,255UL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{4294967294UL,0UL,0x7B773C85L,8UL,0L,65533UL,0xE4750888L,0xA1L,0xD1L,0x66L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0xE3424099L,0UL,-1L,251UL,6L,8UL,0xFDBEA298L,0x68L,0x8CL,0x1FL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0xE3B53467L,0x0BEE7015L,0x745CDFA8L,0xD0L,0xE4L,65530UL,0x655D8E39L,0xC8L,0L,7UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0xE3424099L,0UL,-1L,251UL,6L,8UL,0xFDBEA298L,0x68L,0x8CL,0x1FL},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L}},{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{4294967294UL,0UL,0x7B773C85L,8UL,0L,65533UL,0xE4750888L,0xA1L,0xD1L,0x66L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L},{1UL,0xDB90F9DAL,5L,0x71L,-1L,9UL,0xC2195E34L,-1L,0L,255UL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L}}},{{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x7AFD5A41L,0xBC0FB6F8L,0xD3E0D0A3L,0x28L,1L,0x7F78L,4294967295UL,0xB2L,0xA8L,255UL},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L}},{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x139AA64EL,0x315B6560L,0x6D4A9213L,255UL,0x7CL,0xF020L,0x9BCE7B99L,0xEDL,0xD5L,0xE2L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL},{0xE3B53467L,0x0BEE7015L,0x745CDFA8L,0xD0L,0xE4L,65530UL,0x655D8E39L,0xC8L,0L,7UL},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x139AA64EL,0x315B6560L,0x6D4A9213L,255UL,0x7CL,0xF020L,0x9BCE7B99L,0xEDL,0xD5L,0xE2L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L}},{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{0xEA9043E3L,0xB0DE485AL,1L,0x87L,-3L,65535UL,0x10EEAD2CL,0xE0L,0xFDL,0xD3L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{0x7AFD5A41L,0xBC0FB6F8L,0xD3E0D0A3L,0x28L,1L,0x7F78L,4294967295UL,0xB2L,0xA8L,255UL}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{0x8DEE671BL,0x6E662CDFL,1L,255UL,1L,0x79EEL,0x727888F0L,0L,7L,0x59L},{1UL,0xDB90F9DAL,5L,0x71L,-1L,9UL,0xC2195E34L,-1L,0L,255UL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L}},{{0x3B025CEDL,4294967295UL,0x307F1F97L,0x70L,0x8FL,0x8C7CL,0UL,0L,0x0EL,247UL},{4294967294UL,0UL,0x7B773C85L,8UL,0L,65533UL,0xE4750888L,0xA1L,0xD1L,0x66L},{0x6F4310ADL,2UL,0xA531BDC8L,0x78L,1L,0xE30DL,0x7F79948EL,-1L,0x51L,0xD5L},{2UL,4294967295UL,0x1B98FC69L,0x24L,-2L,0xD581L,4294967295UL,0x2CL,0xBFL,255UL}},{{1UL,4294967290UL,4L,0x16L,0L,65535UL,1UL,0x8EL,0xDDL,249UL},{8UL,0xC7B87940L,0xD7610C46L,250UL,-1L,0UL,0x3CCAF65AL,0x0BL,0L,0xF8L},{0xB9719D4FL,0xEC309284L,-9L,3UL,0x4DL,65528UL,0xB182BEFDL,0x7CL,0xCDL,0x19L},{0xE3424099L,0UL,-1L,251UL,6L,8UL,0xFDBEA298L,0x68L,0x8CL,0x1FL}}}};
static volatile struct S0 g_1684[1][10][10] = {{{{4294967295UL,0xB9312BF2L,-1L,7UL,0xEAL,0x1641L,9UL,0x70L,-6L,0x58L},{0x41202B51L,4294967286UL,0x6DF99AF1L,0x42L,-3L,0x1AF7L,4294967288UL,0xD9L,0xDCL,1UL},{0x5FEED355L,4294967292UL,2L,1UL,0xDCL,2UL,0x502B80A6L,1L,0L,0xDFL},{0x725F2411L,0x652BF1E9L,0x70D87874L,3UL,0xE6L,0UL,8UL,1L,0xA4L,0x4AL},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L},{8UL,0UL,0x85EE7F6DL,253UL,8L,0xF0BAL,0x5EAD4C86L,0xB0L,0L,1UL},{0UL,1UL,0xD4BE971DL,1UL,-1L,0xC011L,0x95D843D6L,0L,-7L,0x0BL},{4294967295UL,0x917CD7BDL,0x28A27701L,6UL,0xE7L,0x724AL,0x82598FC9L,0L,0xE4L,0UL},{0x49F2B9EDL,0xB543CA07L,5L,0x91L,-9L,0xC55FL,0UL,1L,0x9CL,1UL},{0x00D7A72DL,1UL,-5L,0xD0L,0x55L,65531UL,0x1C1B036BL,9L,1L,0x12L}},{{0x126AC955L,0x2B7A793FL,-2L,251UL,-1L,0UL,0x4AC7EB02L,-7L,0x75L,0x78L},{4294967293UL,0x39F7681AL,-1L,0x1DL,4L,0x720EL,0x31C962BDL,0x0AL,0x76L,255UL},{0UL,0xACEBF04AL,0x8AE4E5D6L,2UL,0xF6L,65535UL,0x7E156830L,0L,0xF8L,251UL},{0xA973E977L,0x5DC1DD34L,0xA0BECB9CL,1UL,0x43L,65533UL,4294967289UL,0x3AL,0x94L,0xBCL},{4294967295UL,3UL,1L,251UL,0x8BL,0UL,0x2902A68EL,0xA7L,-10L,0xBAL},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L},{0UL,0xF6A06913L,1L,254UL,0L,65534UL,1UL,-1L,3L,7UL},{8UL,0UL,0x85EE7F6DL,253UL,8L,0xF0BAL,0x5EAD4C86L,0xB0L,0L,1UL},{0x5FEED355L,4294967292UL,2L,1UL,0xDCL,2UL,0x502B80A6L,1L,0L,0xDFL},{1UL,0x71119301L,-3L,0x4FL,1L,0x830BL,1UL,0xE9L,-2L,255UL}},{{0x991B3685L,0x1C99354AL,0L,0UL,0xB9L,3UL,4294967295UL,0xB5L,0x0DL,255UL},{8UL,0UL,0x85EE7F6DL,253UL,8L,0xF0BAL,0x5EAD4C86L,0xB0L,0L,1UL},{0UL,0UL,1L,0x98L,-4L,0x5621L,0xD60727F4L,2L,0x19L,1UL},{0x8E7D6093L,4294967288UL,0x89A849CBL,0x18L,0x8AL,65531UL,1UL,0L,-1L,0x12L},{0x5FF6CB11L,0x6CA71462L,-6L,1UL,-6L,0xF0DFL,0x7DA2D830L,1L,0L,0x65L},{0x8E2A0748L,1UL,0x587D44DBL,0x68L,-8L,0UL,0xF0A0BFF0L,1L,0x81L,0x5DL},{0x725F2411L,0x652BF1E9L,0x70D87874L,3UL,0xE6L,0UL,8UL,1L,0xA4L,0x4AL},{4294967294UL,0x1CFA3FDBL,0x3DAA84A2L,1UL,0x7FL,0x59BCL,0x03FF0885L,0x99L,0x18L,0xD4L},{4294967294UL,0x1CFA3FDBL,0x3DAA84A2L,1UL,0x7FL,0x59BCL,0x03FF0885L,0x99L,0x18L,0xD4L},{0x725F2411L,0x652BF1E9L,0x70D87874L,3UL,0xE6L,0UL,8UL,1L,0xA4L,0x4AL}},{{4294967294UL,4294967295UL,0L,0xF7L,-1L,1UL,7UL,0xEAL,0xECL,249UL},{4294967295UL,0x4D73FA4EL,0L,0UL,4L,0xD1DAL,4294967295UL,0x44L,0x83L,255UL},{9UL,6UL,0L,0xB7L,0x1CL,0x9928L,3UL,7L,-9L,255UL},{9UL,6UL,0L,0xB7L,0x1CL,0x9928L,3UL,7L,-9L,255UL},{4294967295UL,0x4D73FA4EL,0L,0UL,4L,0xD1DAL,4294967295UL,0x44L,0x83L,255UL},{4294967294UL,4294967295UL,0L,0xF7L,-1L,1UL,7UL,0xEAL,0xECL,249UL},{4294967293UL,0x39F7681AL,-1L,0x1DL,4L,0x720EL,0x31C962BDL,0x0AL,0x76L,255UL},{0x9AF9A825L,4294967295UL,-9L,0x46L,0xBDL,0x3B27L,1UL,-1L,0x66L,251UL},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L},{4294967295UL,4294967295UL,-4L,1UL,0x1AL,1UL,9UL,1L,0xE3L,255UL}},{{9UL,6UL,0L,0xB7L,0x1CL,0x9928L,3UL,7L,-9L,255UL},{4294967294UL,4294967295UL,0L,0xF7L,-1L,1UL,7UL,0xEAL,0xECL,249UL},{0x00D7A72DL,1UL,-5L,0xD0L,0x55L,65531UL,0x1C1B036BL,9L,1L,0x12L},{0x4588F993L,0x5E514E28L,-1L,0xB9L,0x42L,0x00F9L,0xA014F0A9L,0L,0x02L,0UL},{0x126AC955L,0x2B7A793FL,-2L,251UL,-1L,0UL,0x4AC7EB02L,-7L,0x75L,0x78L},{0x324EC185L,0x63699009L,7L,0xFDL,0x1CL,65534UL,4294967295UL,0x02L,0x4CL,0x11L},{9UL,6UL,-4L,0x72L,0x1FL,0x5AD0L,0xA5D4378CL,0x1DL,0xBEL,0xF8L},{0UL,0xACEBF04AL,0x8AE4E5D6L,2UL,0xF6L,65535UL,0x7E156830L,0L,0xF8L,251UL},{4294967295UL,0x1DF144FEL,9L,0xF3L,0x14L,1UL,4294967286UL,-1L,0x23L,1UL},{0x49F2B9EDL,0xB543CA07L,5L,0x91L,-9L,0xC55FL,0UL,1L,0x9CL,1UL}},{{9UL,6UL,0L,0xB7L,0x1CL,0x9928L,3UL,7L,-9L,255UL},{0UL,0xF6A06913L,1L,254UL,0L,65534UL,1UL,-1L,3L,7UL},{0x49ABBBC1L,0x04B135EAL,0L,0UL,0L,65535UL,4294967295UL,-1L,-1L,0x25L},{0x82C7AC04L,4294967295UL,1L,250UL,0xA9L,3UL,0UL,0L,0L,0x5EL},{0x8E7D6093L,4294967288UL,0x89A849CBL,0x18L,0x8AL,65531UL,1UL,0L,-1L,0x12L},{4294967294UL,4294967295UL,0L,0xF7L,-1L,1UL,7UL,0xEAL,0xECL,249UL},{0x49F2B9EDL,0xB543CA07L,5L,0x91L,-9L,0xC55FL,0UL,1L,0x9CL,1UL},{4294967295UL,0xB9312BF2L,-1L,7UL,0xEAL,0x1641L,9UL,0x70L,-6L,0x58L},{0x5B7A3487L,2UL,0x1B9BD233L,0x3AL,0L,0x79BCL,4294967295UL,1L,0xD7L,2UL},{4294967294UL,0x4BADDBEEL,1L,0x27L,3L,65535UL,2UL,1L,-1L,0x3BL}},{{4294967294UL,4294967295UL,0L,0xF7L,-1L,1UL,7UL,0xEAL,0xECL,249UL},{0x49F2B9EDL,0xB543CA07L,5L,0x91L,-9L,0xC55FL,0UL,1L,0x9CL,1UL},{4294967295UL,0xB9312BF2L,-1L,7UL,0xEAL,0x1641L,9UL,0x70L,-6L,0x58L},{0x5B7A3487L,2UL,0x1B9BD233L,0x3AL,0L,0x79BCL,4294967295UL,1L,0xD7L,2UL},{4294967294UL,0x4BADDBEEL,1L,0x27L,3L,65535UL,2UL,1L,-1L,0x3BL},{0x8E2A0748L,1UL,0x587D44DBL,0x68L,-8L,0UL,0xF0A0BFF0L,1L,0x81L,0x5DL},{8UL,0UL,0x85EE7F6DL,253UL,8L,0xF0BAL,0x5EAD4C86L,0xB0L,0L,1UL},{4294967295UL,4294967295UL,-4L,1UL,0x1AL,1UL,9UL,1L,0xE3L,255UL},{0xDD29751CL,1UL,-4L,0xFEL,7L,1UL,0x56A91471L,0x21L,2L,255UL},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L}},{{0x991B3685L,0x1C99354AL,0L,0UL,0xB9L,3UL,4294967295UL,0xB5L,0x0DL,255UL},{0x82C7AC04L,4294967295UL,1L,250UL,0xA9L,3UL,0UL,0L,0L,0x5EL},{1UL,0xD7CF99B1L,0x23A54233L,0xE1L,0x92L,6UL,4294967295UL,1L,1L,0UL},{4294967295UL,4294967286UL,0xFA40C479L,1UL,0x28L,0xF63CL,0x57AB0056L,-9L,1L,1UL},{1UL,0x71119301L,-3L,0x4FL,1L,0x830BL,1UL,0xE9L,-2L,255UL},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L},{0x8E7D6093L,4294967288UL,0x89A849CBL,0x18L,0x8AL,65531UL,1UL,0L,-1L,0x12L},{0x9F0569BDL,0xFF5A6C10L,0L,0x6FL,0x6EL,65532UL,0x70D86C4AL,0xD7L,0L,0x08L},{1UL,0x71119301L,-3L,0x4FL,1L,0x830BL,1UL,0xE9L,-2L,255UL},{4294967295UL,4294967286UL,0xFA40C479L,1UL,0x28L,0xF63CL,0x57AB0056L,-9L,1L,1UL}},{{0x126AC955L,0x2B7A793FL,-2L,251UL,-1L,0UL,0x4AC7EB02L,-7L,0x75L,0x78L},{0xDD29751CL,1UL,-4L,0xFEL,7L,1UL,0x56A91471L,0x21L,2L,255UL},{0x126AC955L,0x2B7A793FL,-2L,251UL,-1L,0UL,0x4AC7EB02L,-7L,0x75L,0x78L},{0UL,0UL,1L,0x98L,-4L,0x5621L,0xD60727F4L,2L,0x19L,1UL},{0x98D05A5BL,4UL,0xD6945376L,248UL,9L,65530UL,1UL,-1L,1L,0x4BL},{8UL,0UL,0x85EE7F6DL,253UL,8L,0xF0BAL,0x5EAD4C86L,0xB0L,0L,1UL},{4294967295UL,0xB9312BF2L,-1L,7UL,0xEAL,0x1641L,9UL,0x70L,-6L,0x58L},{0x4588F993L,0x5E514E28L,-1L,0xB9L,0x42L,0x00F9L,0xA014F0A9L,0L,0x02L,0UL},{0UL,0xACEBF04AL,0x8AE4E5D6L,2UL,0xF6L,65535UL,0x7E156830L,0L,0xF8L,251UL},{4294967295UL,0x917CD7BDL,0x28A27701L,6UL,0xE7L,0x724AL,0x82598FC9L,0L,0xE4L,0UL}},{{4294967295UL,0xB9312BF2L,-1L,7UL,0xEAL,0x1641L,9UL,0x70L,-6L,0x58L},{0x9F989E32L,0x6B2C8B5AL,0x03E974D8L,1UL,0x30L,65530UL,0UL,-10L,0xDAL,6UL},{1UL,0x71119301L,-3L,0x4FL,1L,0x830BL,1UL,0xE9L,-2L,255UL},{4294967295UL,3UL,1L,251UL,0x8BL,0UL,0x2902A68EL,0xA7L,-10L,0xBAL},{0x00D7A72DL,1UL,-5L,0xD0L,0x55L,65531UL,0x1C1B036BL,9L,1L,0x12L},{0xD59EA557L,3UL,1L,255UL,3L,65528UL,4294967295UL,0xA5L,0x69L,0x6FL},{0x324EC185L,0x63699009L,7L,0xFDL,0x1CL,65534UL,4294967295UL,0x02L,0x4CL,0x11L},{0x4588F993L,0x5E514E28L,-1L,0xB9L,0x42L,0x00F9L,0xA014F0A9L,0L,0x02L,0UL},{9UL,6UL,0L,0xB7L,0x1CL,0x9928L,3UL,7L,-9L,255UL},{0xBB2FAE31L,4294967295UL,0x3800AC04L,0x64L,0x79L,0xC2BDL,4294967291UL,-9L,-10L,255UL}}}};
static volatile int64_t ** volatile *g_1735 = &g_1491;
static volatile struct S0 g_1754 = {0xFE1C965DL,0UL,-4L,0x70L,0x43L,0x71BEL,0xEF6B33FFL,0xBFL,0L,7UL};/* VOLATILE GLOBAL g_1754 */
static int32_t g_1792 = 0xD52384E4L;
static struct S0 g_1874 = {0x2E6346C9L,4294967295UL,1L,252UL,-5L,0UL,4294967289UL,-3L,0xD6L,9UL};/* VOLATILE GLOBAL g_1874 */
static struct S0 * volatile g_1875 = &g_1038;/* VOLATILE GLOBAL g_1875 */
static struct S0 *g_1918 = (void*)0;
static int16_t *g_1927 = (void*)0;
static int16_t **g_1926 = &g_1927;
static int32_t *g_1941[10][3] = {{&g_1792,&g_701,&g_1792},{&g_1792,&g_701,(void*)0},{&g_1792,&g_1792,&g_1792},{(void*)0,&g_701,&g_1792},{&g_1792,&g_701,&g_1792},{&g_1792,&g_1792,&g_701},{&g_1792,&g_1792,&g_701},{&g_1792,&g_701,&g_1792},{&g_1792,&g_701,&g_1792},{&g_701,&g_1792,&g_1792}};
static int32_t *g_1944 = &g_3[5][4][2];
static int32_t ** volatile g_1943[1][1] = {{&g_1944}};
static struct S0 g_1953 = {0x82654177L,0xDD0490A4L,-1L,0x71L,-8L,0x64F8L,0x4809AC3BL,0x8CL,1L,0UL};/* VOLATILE GLOBAL g_1953 */
static struct S0 g_1954[4] = {{4294967287UL,4294967294UL,-4L,248UL,0x5BL,65535UL,0UL,-1L,-10L,255UL},{4294967287UL,4294967294UL,-4L,248UL,0x5BL,65535UL,0UL,-1L,-10L,255UL},{4294967287UL,4294967294UL,-4L,248UL,0x5BL,65535UL,0UL,-1L,-10L,255UL},{4294967287UL,4294967294UL,-4L,248UL,0x5BL,65535UL,0UL,-1L,-10L,255UL}};
static uint8_t g_1974 = 1UL;
static int32_t ** volatile g_1976 = &g_1944;/* VOLATILE GLOBAL g_1976 */
static struct S0 g_2035 = {0x6D5C60EAL,0x4EF1F63FL,7L,0x73L,0x5DL,2UL,0x34AC9DF6L,0x7AL,1L,0x1EL};/* VOLATILE GLOBAL g_2035 */
static int32_t g_2085 = 0xC3794E43L;
static uint64_t ****g_2113 = &g_865[0][0][1];
static volatile uint32_t g_2170[8] = {0x98DE55A1L,0x98DE55A1L,0x98DE55A1L,0x98DE55A1L,0x98DE55A1L,0x98DE55A1L,0x98DE55A1L,0x98DE55A1L};
static volatile int8_t g_2215 = 0x8CL;/* VOLATILE GLOBAL g_2215 */
static volatile struct S0 g_2220 = {0xFEB08D7DL,6UL,0x06E81FA6L,0x68L,0x00L,0x3CBCL,1UL,0xEFL,0x5DL,6UL};/* VOLATILE GLOBAL g_2220 */
static volatile struct S0 g_2253[10] = {{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{0x4D26DB5BL,0x3678ECB3L,-8L,0x87L,1L,5UL,0x88B405C4L,-1L,1L,0xACL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{0x4D26DB5BL,0x3678ECB3L,-8L,0x87L,1L,5UL,0x88B405C4L,-1L,1L,0xACL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{0x4D26DB5BL,0x3678ECB3L,-8L,0x87L,1L,5UL,0x88B405C4L,-1L,1L,0xACL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL},{4294967294UL,0UL,0xC5B90D3BL,0UL,0xF7L,65531UL,4294967293UL,7L,-9L,0UL}};
static int32_t ** volatile g_2308[6][5] = {{&g_1944,&g_1944,&g_1944,&g_1944,&g_1944},{&g_1944,(void*)0,&g_1944,&g_1944,&g_1944},{&g_1944,&g_1944,&g_1944,&g_1944,&g_1944},{&g_1944,&g_1944,(void*)0,&g_1944,(void*)0},{&g_1944,&g_1944,&g_1944,&g_1944,(void*)0},{&g_1944,&g_1944,&g_1944,&g_1944,(void*)0}};
static int8_t g_2344 = 0L;
static struct S0 g_2400 = {0x69640A5AL,2UL,0x3048D047L,0x83L,-8L,65528UL,0x920F1700L,0xE0L,0x85L,0xCFL};/* VOLATILE GLOBAL g_2400 */
static volatile int32_t g_2404[5][2][3] = {{{0xD89F24AAL,0xD89F24AAL,0xD89F24AAL},{(-1L),0xD80AE6CDL,(-1L)}},{{0xD89F24AAL,0xD89F24AAL,0xD89F24AAL},{(-1L),0xD80AE6CDL,(-1L)}},{{0xD89F24AAL,0xD89F24AAL,0xD89F24AAL},{(-1L),0xD80AE6CDL,(-1L)}},{{0xD89F24AAL,0xD89F24AAL,0xD89F24AAL},{(-1L),0xD80AE6CDL,(-1L)}},{{0xD89F24AAL,0xD89F24AAL,0xD89F24AAL},{(-1L),0xD80AE6CDL,(-1L)}}};


/* --- FORWARD DECLARATIONS --- */
static uint32_t  func_1(void);
static int32_t * func_9(int32_t * p_10, int32_t  p_11);
static int32_t * func_12(int32_t * p_13);
static uint32_t  func_18(int32_t * const  p_19, uint32_t  p_20, const int32_t  p_21, uint8_t  p_22);
static int8_t  func_26(int32_t * p_27, uint32_t  p_28, int32_t * p_29, int32_t * p_30);
static int32_t * func_37(const uint8_t * p_38, uint8_t  p_39, uint8_t  p_40);
static uint8_t * func_41(int64_t  p_42);
static int32_t * func_43(int16_t  p_44, int32_t * p_45, uint32_t  p_46);
static int16_t  func_47(uint8_t * p_48, uint8_t  p_49, uint64_t  p_50, int8_t  p_51, int32_t * p_52);
static uint8_t * func_53(uint16_t  p_54);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_1037.f5 g_105 g_1491 g_1492 g_1493 g_758 g_165 g_1150 g_631.f9 g_950.f5 g_1953.f4 g_3 g_196 g_1037.f0 g_738 g_739 g_429 g_306 g_1684.f5 g_1754.f7 g_950.f9 g_197 g_2400 g_550 g_1953.f3 g_1874.f8 g_1036.f1
 * writes: g_1037.f5 g_105 g_165 g_197 g_1037.f0 g_306 g_551 g_1953.f3
 */
static uint32_t  func_1(void)
{ /* block id: 0 */
    int32_t *l_2[8];
    int32_t l_4[7] = {2L,2L,2L,2L,2L,2L,2L};
    int64_t l_5 = 3L;
    uint32_t l_6 = 0x08F52837L;
    int32_t *l_36 = &g_3[7][2][2];
    int16_t *l_2288 = (void*)0;
    uint64_t l_2311 = 18446744073709551606UL;
    int16_t ***l_2332 = &g_1926;
    int64_t ***l_2369 = (void*)0;
    int64_t ****l_2368 = &l_2369;
    int64_t *****l_2367 = &l_2368;
    uint64_t ****l_2395 = &g_865[0][3][0];
    int32_t l_2403 = 6L;
    int8_t l_2405 = 0xA4L;
    uint32_t l_2406 = 18446744073709551615UL;
    int i;
    for (i = 0; i < 8; i++)
        l_2[i] = &g_3[5][4][2];
    ++l_6;
    for (l_6 = 0; (l_6 <= 6); l_6 += 1)
    { /* block id: 4 */
        uint32_t l_17 = 2UL;
        int32_t l_23 = 0x19A80272L;
        uint8_t *l_33 = (void*)0;
        uint8_t *l_34 = &g_35[4][1];
        int8_t *l_1470 = &g_851;
        uint32_t *l_1606[2];
        int8_t l_2312 = 0xF2L;
        int8_t l_2320 = 0x84L;
        int i;
        for (i = 0; i < 2; i++)
            l_1606[i] = &g_1607;
    }
    for (g_1037.f5 = 27; (g_1037.f5 <= 45); ++g_1037.f5)
    { /* block id: 911 */
        int32_t l_2359[8];
        uint64_t ****l_2394[7][4][9] = {{{&g_865[0][4][3],&g_865[0][3][3],(void*)0,&g_865[0][4][0],&g_865[0][3][3],(void*)0,&g_865[0][0][3],&g_865[0][3][3],(void*)0},{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][4][0],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][4][0]},{(void*)0,(void*)0,&g_865[0][0][0],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][2][1],(void*)0,(void*)0},{(void*)0,&g_865[0][3][3],&g_865[0][2][0],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][4][0],(void*)0,&g_865[0][3][3],&g_865[0][1][1]}},{{&g_865[0][0][2],&g_865[0][0][3],&g_865[0][0][3],&g_865[0][1][0],&g_865[0][4][3],&g_865[0][3][3],&g_865[0][0][0],&g_865[0][3][3],&g_865[0][0][0]},{&g_865[0][3][3],(void*)0,&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][3][3],&g_865[0][0][3],&g_865[0][3][3],&g_865[0][3][3]},{&g_865[0][4][0],(void*)0,&g_865[0][1][2],(void*)0,&g_865[0][4][3],&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][2][3]},{&g_865[0][3][3],&g_865[0][1][1],&g_865[0][1][3],&g_865[0][3][3],&g_865[0][3][0],&g_865[0][0][0],&g_865[0][0][3],&g_865[0][3][3],&g_865[0][3][3]}},{{&g_865[0][3][3],(void*)0,(void*)0,&g_865[0][4][3],&g_865[0][2][2],(void*)0,&g_865[0][0][0],&g_865[0][0][3],&g_865[0][3][3]},{(void*)0,&g_865[0][4][0],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][0][2],&g_865[0][3][3],&g_865[0][0][3],&g_865[0][1][2]},{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],(void*)0,(void*)0,&g_865[0][3][3],&g_865[0][3][3],&g_865[0][1][3],&g_865[0][2][0]},{&g_865[0][3][3],&g_865[0][2][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][4][2],&g_865[0][3][3],(void*)0,&g_865[0][3][3],&g_865[0][3][1]}},{{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][2][3],&g_865[0][3][3],&g_865[0][3][3]},{(void*)0,&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3]},{(void*)0,(void*)0,&g_865[0][3][3],&g_865[0][3][3],&g_865[0][0][0],&g_865[0][0][2],&g_865[0][4][2],(void*)0,&g_865[0][3][3]},{&g_865[0][2][2],&g_865[0][3][3],&g_865[0][4][2],&g_865[0][3][0],&g_865[0][2][1],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][2][1]}},{{&g_865[0][1][1],&g_865[0][2][0],&g_865[0][2][0],&g_865[0][1][1],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][1][1],(void*)0,&g_865[0][4][0]},{(void*)0,&g_865[0][0][0],(void*)0,&g_865[0][2][0],&g_865[0][2][2],&g_865[0][0][2],&g_865[0][2][2],&g_865[0][4][1],&g_865[0][4][3]},{&g_865[0][0][2],(void*)0,&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][3][0],&g_865[0][3][0],&g_865[0][4][2]},{&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][4][2],&g_865[0][2][1],&g_865[0][3][3],&g_865[0][4][0],(void*)0,&g_865[0][0][2]}},{{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][0][0],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][1]},{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],(void*)0,(void*)0,&g_865[0][0][3]},{&g_865[0][2][1],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][2][3],&g_865[0][3][3],&g_865[0][1][3],(void*)0,&g_865[0][2][0],&g_865[0][1][3]},{&g_865[0][3][3],&g_865[0][0][3],&g_865[0][2][1],&g_865[0][2][3],&g_865[0][4][2],&g_865[0][4][3],(void*)0,&g_865[0][3][3],&g_865[0][2][2]}},{{(void*)0,&g_865[0][2][1],&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][3][3],(void*)0,&g_865[0][3][0],(void*)0},{&g_865[0][2][3],&g_865[0][0][2],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][0],&g_865[0][3][3],&g_865[0][1][3],(void*)0,&g_865[0][3][0]},{&g_865[0][3][3],(void*)0,&g_865[0][3][3],&g_865[0][4][2],(void*)0,(void*)0,(void*)0,&g_865[0][4][2],&g_865[0][3][3]},{&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],&g_865[0][3][3],(void*)0,&g_865[0][3][3],&g_865[0][3][3],&g_865[0][1][1],&g_865[0][3][3]}}};
        uint64_t ****l_2396 = &g_865[0][2][3];
        int i, j, k;
        for (i = 0; i < 8; i++)
            l_2359[i] = (-10L);
        for (g_105 = 18; (g_105 == 13); g_105 = safe_sub_func_int8_t_s_s(g_105, 5))
        { /* block id: 914 */
            int32_t l_2376 = 0xD301ACBEL;
            int32_t l_2377 = (-1L);
            uint32_t *l_2380 = &g_1037.f0;
            uint64_t *****l_2392 = (void*)0;
            uint64_t *****l_2393[9] = {&g_2113,&g_2113,&g_2113,&g_2113,&g_2113,&g_2113,&g_2113,&g_2113,&g_2113};
            int64_t **l_2399 = &g_758;
            int64_t ***l_2398 = &l_2399;
            int i;
            l_2377 = (safe_div_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u(((safe_add_func_uint8_t_u_u((((safe_mul_func_int8_t_s_s((safe_mul_func_uint16_t_u_u((((*g_758) |= (**g_1491)) <= l_2359[5]), (safe_mul_func_int8_t_s_s((g_1150 , (-7L)), 0xF8L)))), (safe_sub_func_uint32_t_u_u((!g_631.f9), (safe_mod_func_int8_t_s_s((&g_1489 != l_2367), (safe_div_func_int16_t_s_s((safe_sub_func_int64_t_s_s((safe_mod_func_uint32_t_u_u(g_950.f5, l_2359[4])), 0xA3DD339DF72BA009LL)), 65535UL)))))))) > g_1953.f4) , l_2376), (*l_36))) & l_2359[5]), l_2359[5])), l_2359[4]));
            (*g_196) = &l_2359[5];
            (*g_197) = (((safe_mul_func_uint16_t_u_u((((*l_2380)--) && (safe_div_func_int16_t_s_s(l_2359[1], l_2377))), (((*g_738) == (void*)0) || ((safe_rshift_func_uint16_t_u_u(0x7499L, ((*g_429) &= (*l_36)))) == ((((~(safe_add_func_int8_t_s_s(((safe_sub_func_uint32_t_u_u(((l_2394[5][0][5] = (void*)0) == ((l_2395 != (l_2396 = l_2395)) , &g_865[0][2][1])), g_1684[0][9][2].f5)) && g_1754.f7), g_950.f9))) | l_2359[5]) && 0x0EE47976L) , (*l_36)))))) , l_2359[1]) <= l_2376);
            if (((!0x61C147F5C0F97191LL) & (((*l_2368) = (l_2398 = l_2398)) != (void*)0)))
            { /* block id: 925 */
                (*g_550) = g_2400;
            }
            else
            { /* block id: 927 */
                for (g_1953.f3 = 0; (g_1953.f3 > 22); g_1953.f3++)
                { /* block id: 930 */
                    return g_2400.f5;
                }
                (*g_196) = &l_2377;
            }
        }
        return g_1874.f8;
    }
    --l_2406;
    return g_1036.f1;
}


/* ------------------------------------------ */
/* 
 * reads : g_1376 g_429 g_197 g_470 g_370 g_768 g_3 g_2085 g_196 g_364 g_365 g_92 g_1608.f4 g_950.f3 g_1038.f3 g_758 g_1944 g_1036.f6 g_550 g_551 g_1953.f9 g_1269 g_1270 g_2170 g_1490 g_1491 g_1492 g_1493 g_1976 g_631.f1 g_165 g_2220 g_1613.f4 g_1874.f7 g_1037.f8 g_2253 g_631.f3 g_935 g_936 g_937 g_939 g_938 g_306
 * writes: g_306 g_2085 g_197 g_950.f3 g_551.f9 g_1038.f3 g_2113 g_165 g_105 g_1954.f4 g_3 g_470 g_370 g_768 g_35 g_1037.f0 g_662 g_2170 g_92 g_1660 g_1613.f4 g_1874.f7 g_1037.f8 g_551 g_2035.f0 g_453
 */
static int32_t * func_9(int32_t * p_10, int32_t  p_11)
{ /* block id: 777 */
    uint32_t l_2071 = 1UL;
    int32_t l_2074 = (-8L);
    struct S0 ***l_2079 = &g_662[8];
    int32_t l_2080[1];
    int16_t *l_2081[1][10] = {{&g_930,&g_930,&g_930,&g_930,&g_930,&g_930,&g_930,&g_930,&g_930,&g_930}};
    int32_t l_2082[3][2];
    int32_t *l_2083 = (void*)0;
    int32_t *l_2084 = &g_2085;
    int32_t l_2090 = 0xF9331570L;
    int16_t l_2091 = 0x513FL;
    uint64_t l_2092 = 0x77144E5585DA9DFCLL;
    uint64_t ****l_2111 = &g_865[0][3][3];
    int64_t **l_2122 = (void*)0;
    int8_t *l_2143[9] = {(void*)0,&g_1037.f7,(void*)0,(void*)0,&g_1037.f7,(void*)0,&g_950.f7,(void*)0,&g_950.f7};
    uint8_t ***l_2187 = &g_739;
    int64_t ***l_2205 = &l_2122;
    int64_t ****l_2204 = &l_2205;
    uint32_t *l_2264 = &g_2035.f0;
    uint16_t l_2270 = 65535UL;
    uint16_t ****l_2271 = (void*)0;
    int8_t l_2280 = (-1L);
    uint16_t l_2281[7] = {0UL,0UL,0UL,0UL,0UL,0UL,0UL};
    int32_t *l_2282 = (void*)0;
    int32_t *l_2283 = &l_2074;
    uint64_t l_2284 = 1UL;
    int32_t *l_2285 = (void*)0;
    int i, j;
    for (i = 0; i < 1; i++)
        l_2080[i] = (-10L);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
            l_2082[i][j] = 0xDA01FE02L;
    }
    if (((*l_2084) |= ((!l_2071) != (p_11 != (((l_2082[1][0] &= ((((safe_mod_func_int16_t_s_s(l_2074, (((**g_1376) = 4UL) || p_11))) , (((safe_lshift_func_int16_t_s_s(((safe_div_func_int64_t_s_s(((4294967295UL > (*g_197)) || (((void*)0 == l_2079) & 0UL)), l_2074)) || l_2080[0]), 0)) >= p_11) , &g_348)) != (void*)0) , 0xA956L)) != p_11) | 0x38L)))))
    { /* block id: 781 */
        int32_t *l_2086 = &l_2080[0];
        int32_t *l_2087 = &g_370;
        int32_t *l_2088 = &l_2080[0];
        int32_t *l_2089[4];
        int i;
        for (i = 0; i < 4; i++)
            l_2089[i] = &l_2080[0];
        (*g_196) = l_2086;
        l_2092++;
    }
    else
    { /* block id: 784 */
        uint32_t l_2103 = 4294967287UL;
        uint64_t l_2106[8] = {0xC3613B7DAF6EE457LL,0xC3613B7DAF6EE457LL,1UL,0xC3613B7DAF6EE457LL,0xC3613B7DAF6EE457LL,1UL,0xC3613B7DAF6EE457LL,0xC3613B7DAF6EE457LL};
        int i;
        l_2083 = (p_10 = ((3L > ((p_11 , ((*l_2084) >= (g_551.f9 = (g_950.f3 &= (((p_11 && (safe_rshift_func_int8_t_s_u((((((safe_mul_func_uint8_t_u_u((safe_sub_func_int64_t_s_s((*l_2084), ((safe_lshift_func_int16_t_s_u(((**g_364) & l_2103), (p_11 >= ((safe_mod_func_uint64_t_u_u((p_11 || p_11), p_11)) & 0x8B8FL)))) != p_11))), p_11)) || 8L) , p_11) != 0L) , l_2106[6]), 3))) > l_2106[6]) && g_1608.f4))))) == l_2106[6])) , (void*)0));
    }
    for (g_1038.f3 = 27; (g_1038.f3 > 25); --g_1038.f3)
    { /* block id: 792 */
        uint64_t *****l_2112 = &l_2111;
        int32_t l_2116 = 0L;
        uint32_t l_2119 = 1UL;
        int8_t *l_2120 = &g_1954[1].f4;
        uint16_t **l_2134 = (void*)0;
        int32_t l_2160 = 8L;
        int32_t l_2162 = 4L;
        int32_t l_2163 = 0xCC67E5A9L;
        int32_t l_2164 = 0xD17187E5L;
        int32_t l_2165 = 0xC86E61B7L;
        int32_t l_2166 = 0x825B948CL;
        int32_t l_2167 = 0xCE9F13E2L;
        int32_t l_2168 = 0xEDD9E813L;
        int32_t l_2169 = 0x8B034313L;
        uint64_t l_2225 = 0UL;
        int8_t l_2242 = (-10L);
        int32_t l_2243[3][3][9] = {{{0L,0x8E657943L,0xEA905F1CL,0xEA905F1CL,0x8E657943L,0L,0x0BC95FABL,0x4601BA04L,0xEA905F1CL},{0xAF1DAA0DL,(-9L),1L,(-1L),7L,0xAF1DAA0DL,0xAF1DAA0DL,7L,(-1L)},{0L,0x8E657943L,0L,0L,0x77ED370AL,0L,0x0BC95FABL,(-2L),0L}},{{(-1L),7L,1L,(-1L),0x9EBB6E58L,(-1L),1L,7L,(-1L)},{(-2L),0x77ED370AL,0xEA905F1CL,0L,(-1L),(-2L),0L,0x4601BA04L,0L},{1L,0x9EBB6E58L,(-1L),(-1L),0x9EBB6E58L,1L,(-1L),(-4L),(-1L)}},{{(-2L),(-1L),0L,0xEA905F1CL,0x77ED370AL,(-2L),(-2L),0x77ED370AL,0xEA905F1CL},{(-1L),0x9EBB6E58L,(-1L),1L,7L,(-1L),(-1L),0x784428FEL,1L},{0L,0x77ED370AL,0L,0L,0x8E657943L,0L,0L,0x77ED370AL,0L}}};
        int i, j, k;
        (*g_1944) &= (((safe_mod_func_int8_t_s_s(((*l_2120) = (p_11 <= (((((*l_2112) = ((*l_2084) , l_2111)) == (g_2113 = (void*)0)) <= (((*g_758) = p_11) && ((safe_add_func_uint32_t_u_u(p_11, l_2116)) , (0x85686351EF715B94LL & (safe_rshift_func_int16_t_s_u((g_105 = (l_2119 = 0L)), (*l_2084))))))) <= 0x124D0950L))), p_11)) ^ l_2116) || 3L);
        for (g_2085 = 1; (g_2085 >= 0); g_2085 -= 1)
        { /* block id: 802 */
            uint8_t l_2121 = 0xF9L;
            volatile int64_t ** volatile **l_2136[2][9] = {{&g_1735,(void*)0,&g_1735,&g_1735,(void*)0,&g_1735,&g_1735,(void*)0,&g_1735},{&g_1735,&g_1735,&g_1735,&g_1735,&g_1735,&g_1735,&g_1735,&g_1735,&g_1735}};
            struct S0 **l_2148 = &g_1918;
            struct S0 **l_2149 = &g_550;
            int32_t l_2159[7][5] = {{1L,0x65E96890L,(-1L),(-1L),0x0974D9EFL},{0x65E96890L,1L,(-1L),0L,(-1L)},{0x0974D9EFL,0x0974D9EFL,1L,1L,0x5176A3A7L},{0x65E96890L,0x5176A3A7L,0x21E7EE25L,1L,1L},{1L,0xA9FEB548L,1L,0L,8L},{0x21E7EE25L,0x5176A3A7L,0x65E96890L,(-1L),8L},{1L,0x0974D9EFL,0x0974D9EFL,1L,1L}};
            int16_t l_2216 = 0x3F3EL;
            int32_t l_2241 = 0xB9AE6CDDL;
            uint16_t l_2244 = 1UL;
            int i, j;
            (*g_197) |= l_2121;
            (*g_196) = &p_11;
            if ((((void*)0 != l_2122) || (-7L)))
            { /* block id: 805 */
                uint32_t *l_2133[5] = {&g_1953.f0,&g_1953.f0,&g_1953.f0,&g_1953.f0,&g_1953.f0};
                uint8_t *l_2135 = &g_35[4][0];
                int32_t l_2151[10] = {8L,8L,8L,8L,8L,8L,8L,8L,8L,8L};
                int32_t l_2189 = (-9L);
                uint16_t l_2217 = 0xE4D4L;
                int i;
                (*g_196) = (g_1036.f6 , (((g_1037.f0 = (((safe_sub_func_uint8_t_u_u((l_2119 == 0x7483L), (((*l_2135) = (safe_sub_func_uint16_t_u_u(((((((*g_550) , (safe_div_func_int32_t_s_s(((((safe_sub_func_int16_t_s_s((((-7L) == p_11) , ((safe_div_func_uint32_t_u_u(4294967295UL, (l_2116 = 0xF944FCB0L))) < ((void*)0 != l_2134))), l_2119)) , &g_1269) != &g_1267) , 0xA9B552DCL), l_2121))) != l_2121) || l_2119) == 0UL) | (*g_1944)), l_2121))) < p_11))) || (*l_2084)) < g_1953.f9)) ^ p_11) , &p_11));
                (*g_197) = 1L;
                l_2136[0][4] = &g_1735;
                for (l_2121 = 0; (l_2121 <= 1); l_2121 += 1)
                { /* block id: 814 */
                    const uint8_t l_2146 = 0UL;
                    int32_t l_2158 = 0xF4248B48L;
                    int32_t l_2161[2][1];
                    uint32_t * const l_2186 = &g_1038.f0;
                    int16_t l_2206 = 0L;
                    int i, j;
                    for (i = 0; i < 2; i++)
                    {
                        for (j = 0; j < 1; j++)
                            l_2161[i][j] = 0xF20DE4EAL;
                    }
                    for (g_950.f3 = 0; (g_950.f3 <= 3); g_950.f3 += 1)
                    { /* block id: 817 */
                        struct S0 **l_2147 = &g_1918;
                        int32_t l_2150 = 8L;
                        int32_t *l_2152 = &l_2082[1][0];
                        int32_t *l_2153 = (void*)0;
                        int32_t *l_2154 = &l_2082[2][1];
                        int32_t *l_2155 = (void*)0;
                        int32_t *l_2156 = (void*)0;
                        int32_t *l_2157[6] = {&g_470,&l_2116,&l_2116,&g_470,&l_2116,&l_2116};
                        uint32_t **l_2188 = &l_2133[2];
                        uint8_t **** const l_2207 = &l_2187;
                        uint8_t l_2208 = 0UL;
                        int i, j, k;
                        (*g_197) = (safe_mul_func_int8_t_s_s(0x80L, ((l_2116 = (3UL == (((safe_mul_func_uint16_t_u_u(((((safe_add_func_int8_t_s_s((((void*)0 == l_2143[7]) && ((safe_sub_func_int16_t_s_s(l_2146, l_2146)) , (((((**g_1269) = (l_2148 = l_2147)) == (p_11 , l_2149)) <= 18446744073709551609UL) > 18446744073709551607UL))), l_2150)) == (-2L)) <= (-4L)) == p_11), l_2121)) ^ p_11) , 0xAD61A950A55D307ALL))) | l_2151[8])));
                        g_2170[7]--;
                        (*l_2152) = (((***g_1490) , ((safe_div_func_int8_t_s_s((safe_mul_func_uint8_t_u_u((safe_add_func_int16_t_s_s((!((*g_1976) == (void*)0)), ((safe_add_func_int16_t_s_s(((safe_div_func_int16_t_s_s((safe_sub_func_int32_t_s_s(p_11, (p_11 , ((&g_391 != ((*l_2188) = func_43((l_2164 ^= (((((l_2151[8] = 0xE3AE467651C14CA4LL) ^ (((l_2186 != p_10) > 0xF3B51333CC869AB1LL) | l_2160)) , l_2151[8]) , l_2187) == (void*)0)), &l_2150, p_11))) & (-4L))))), (*l_2084))) || l_2161[0][0]), l_2161[0][0])) || p_11))), l_2158)), p_11)) != p_11)) >= l_2189);
                        (*g_1944) &= ((safe_sub_func_uint8_t_u_u((safe_sub_func_int64_t_s_s((safe_rshift_func_uint16_t_u_s((((safe_sub_func_int8_t_s_s(7L, ((safe_rshift_func_int16_t_s_u(p_11, 14)) & ((((**g_364)--) || ((((*g_758) |= (safe_rshift_func_int16_t_s_u(((((l_2204 != (void*)0) ^ ((6L & g_631.f1) != (l_2206 = 1UL))) , &g_738) == l_2207), p_11))) & l_2208) != p_11)) , 8UL)))) | p_11) && l_2163), 10)), l_2151[8])), p_11)) ^ 0x3573083CF0072125LL);
                    }
                    for (l_2163 = 1; (l_2163 >= 0); l_2163 -= 1)
                    { /* block id: 834 */
                        int32_t *l_2209 = &g_3[0][4][5];
                        int32_t *l_2210 = &l_2082[1][0];
                        int32_t *l_2211 = &l_2090;
                        int32_t *l_2212 = &g_370;
                        int32_t *l_2213 = &l_2160;
                        int32_t *l_2214[8] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
                        int i;
                        l_2217--;
                    }
                }
            }
            else
            { /* block id: 838 */
                int32_t *l_2221 = &l_2164;
                int32_t *l_2222 = &l_2080[0];
                int32_t *l_2223 = &l_2169;
                int32_t *l_2224[3];
                int i;
                for (i = 0; i < 3; i++)
                    l_2224[i] = &l_2166;
                for (l_2216 = 0; (l_2216 <= 3); l_2216 += 1)
                { /* block id: 841 */
                    int i, j, k;
                    g_1660[(g_2085 + 4)][(g_2085 + 3)][l_2216] = g_2220;
                    return (*g_1976);
                }
                ++l_2225;
            }
            for (g_1613.f4 = 0; (g_1613.f4 <= 1); g_1613.f4 += 1)
            { /* block id: 849 */
                int32_t *l_2228 = &l_2082[2][1];
                int32_t *l_2229 = &g_470;
                int32_t *l_2230 = &l_2163;
                int32_t *l_2231 = &l_2082[2][1];
                int32_t *l_2232 = (void*)0;
                int32_t *l_2233 = &l_2080[0];
                int32_t *l_2234 = &l_2169;
                int32_t *l_2235 = &l_2169;
                int32_t l_2236 = (-1L);
                int32_t *l_2237 = &l_2236;
                int32_t l_2238[10] = {(-6L),(-6L),(-6L),(-6L),(-6L),(-6L),(-6L),(-6L),(-6L),(-6L)};
                int32_t *l_2239 = &l_2159[3][4];
                int32_t *l_2240[10] = {(void*)0,&g_470,&g_470,(void*)0,&g_470,&g_470,(void*)0,&g_470,&g_470,(void*)0};
                int i;
                ++l_2244;
                if (p_11)
                    continue;
            }
        }
        for (g_1874.f7 = 3; (g_1874.f7 > (-11)); g_1874.f7--)
        { /* block id: 856 */
            int16_t l_2251 = 0xA519L;
            int32_t *l_2252 = &l_2080[0];
            for (g_1037.f8 = 0; (g_1037.f8 > 13); g_1037.f8 = safe_add_func_int64_t_s_s(g_1037.f8, 9))
            { /* block id: 859 */
                l_2251 = l_2162;
                (*g_196) = &l_2080[0];
            }
            return (*g_1976);
        }
        (*g_550) = g_2253[2];
    }
    (**g_196) = (safe_sub_func_int64_t_s_s((((safe_mod_func_uint8_t_u_u((((l_2082[1][0] ^= (((*l_2084) = (safe_rshift_func_int8_t_s_s(g_631.f3, 5))) < ((safe_sub_func_uint16_t_u_u(((safe_sub_func_int32_t_s_s((p_11 <= ((*l_2264) = p_11)), ((*l_2283) &= ((safe_add_func_uint32_t_u_u((safe_mod_func_uint32_t_u_u((safe_unary_minus_func_uint32_t_u((((g_453 = l_2270) || (l_2271 == ((safe_mul_func_int8_t_s_s((safe_div_func_uint16_t_u_u(((safe_lshift_func_int16_t_s_u(((safe_mod_func_uint64_t_u_u((**g_364), ((*g_758) &= (&g_154 != l_2143[7])))) | ((p_11 == l_2280) || p_11)), p_11)) & 0L), 65535UL)), p_11)) , (*g_935)))) ^ p_11))), l_2281[6])), (**g_196))) , (*g_1944))))) == l_2284), (*****g_935))) < p_11))) ^ g_306) < p_11), 0x25L)) != p_11) , 0x935F56BD33D45638LL), p_11));
    return l_2285;
}


/* ------------------------------------------ */
/* 
 * reads : g_1608 g_196
 * writes: g_1609 g_197
 */
static int32_t * func_12(int32_t * p_13)
{ /* block id: 563 */
    int32_t *l_1610[2][5][1] = {{{&g_768},{&g_470},{&g_3[5][4][2]},{&g_470},{&g_768}},{{&g_768},{&g_470},{&g_3[5][4][2]},{&g_470},{&g_768}}};
    int8_t l_1616[9];
    int16_t *l_1623 = &g_469;
    uint8_t l_1624 = 254UL;
    uint32_t l_1625 = 18446744073709551615UL;
    struct S0 ****l_1626 = (void*)0;
    int64_t *l_1627 = &g_793;
    uint8_t **l_1641 = (void*)0;
    int16_t **l_1647[4] = {&l_1623,&l_1623,&l_1623,&l_1623};
    int64_t **l_1737 = &l_1627;
    int64_t ** const * const l_1736 = &l_1737;
    int32_t l_1843 = 0L;
    int32_t l_1872[8] = {0xB329A348L,0xB329A348L,0xB329A348L,0xB329A348L,0xB329A348L,0xB329A348L,0xB329A348L,0xB329A348L};
    struct S0 *l_1913 = &g_1036;
    struct S0 *l_1914 = &g_1038;
    uint16_t l_1938 = 0UL;
    int32_t *l_1986 = (void*)0;
    uint8_t ****l_1994 = (void*)0;
    uint64_t l_2066[2];
    int32_t *l_2069 = (void*)0;
    int i, j, k;
    for (i = 0; i < 9; i++)
        l_1616[i] = 8L;
    for (i = 0; i < 2; i++)
        l_2066[i] = 0x221E1226129DC063LL;
    g_1609 = g_1608;
    (*g_196) = l_1610[1][4][0];
    return p_13;
}


/* ------------------------------------------ */
/* 
 * reads : g_1036.f4 g_1150 g_92 g_1242.f0 g_163 g_1037.f3 g_3 g_1376 g_429 g_306 g_800.f3 g_35 g_196 g_197 g_370 g_1242.f7
 * writes: g_1036.f4 g_1150 g_92 g_1242.f0 g_950.f0 g_306 g_370 g_197
 */
static uint32_t  func_18(int32_t * const  p_19, uint32_t  p_20, const int32_t  p_21, uint8_t  p_22)
{ /* block id: 520 */
    int64_t ** const l_1471[6][8][5] = {{{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0}},{{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0}},{{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0}},{{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,&g_758,(void*)0},{(void*)0,(void*)0,&g_758,&g_758,(void*)0},{&g_758,(void*)0,&g_758,(void*)0,&g_758}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&g_758,&g_758,(void*)0,(void*)0,&g_758}}};
    int32_t l_1476 = 2L;
    int32_t l_1502 = 0x30A03FB1L;
    uint64_t *l_1531 = (void*)0;
    int32_t l_1572 = 0x3CF1266DL;
    uint64_t *l_1575 = &g_92;
    struct S0 * const l_1582[8] = {&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1],&g_1584[3][7][1]};
    uint16_t *l_1600[1];
    int16_t *l_1601 = &g_1150;
    uint64_t l_1602[3][10][4] = {{{0UL,0UL,0x0EA4980C06A060E6LL,0UL},{18446744073709551615UL,0x3A7FAA0B9EA2E329LL,0x4D38316C406BB88CLL,18446744073709551615UL},{0xCFA1AFE49941CE94LL,1UL,0x3BDE4296C8D8AAB6LL,0xE6CAF46C19D3F9D0LL},{0x4D38316C406BB88CLL,0xEBFA6C66AA03DAD6LL,0UL,0xD85C7411ADB380DCLL},{0x4D38316C406BB88CLL,0xB414284C2C3151F4LL,0x3BDE4296C8D8AAB6LL,0xD842D701C77FD0E6LL},{0xCFA1AFE49941CE94LL,0xD85C7411ADB380DCLL,0x4D38316C406BB88CLL,1UL},{18446744073709551615UL,3UL,0x0EA4980C06A060E6LL,0xB414284C2C3151F4LL},{0UL,3UL,0UL,1UL},{0xA2067797728EE985LL,0xD85C7411ADB380DCLL,0x9D35DB045A7DFEF5LL,0xD842D701C77FD0E6LL},{0x60351140204CBB88LL,0xB414284C2C3151F4LL,18446744073709551615UL,0xD85C7411ADB380DCLL}},{{0UL,0xEBFA6C66AA03DAD6LL,18446744073709551615UL,0xE6CAF46C19D3F9D0LL},{0x60351140204CBB88LL,1UL,0x9D35DB045A7DFEF5LL,18446744073709551615UL},{0xA2067797728EE985LL,0x3A7FAA0B9EA2E329LL,0UL,0UL},{0UL,0UL,0x0EA4980C06A060E6LL,0UL},{18446744073709551615UL,0x3A7FAA0B9EA2E329LL,0x4D38316C406BB88CLL,18446744073709551615UL},{0xCFA1AFE49941CE94LL,1UL,0x3BDE4296C8D8AAB6LL,0xE6CAF46C19D3F9D0LL},{0x4D38316C406BB88CLL,0xEBFA6C66AA03DAD6LL,0UL,0xD85C7411ADB380DCLL},{0x4D38316C406BB88CLL,0xB414284C2C3151F4LL,0x3BDE4296C8D8AAB6LL,0xD842D701C77FD0E6LL},{0xCFA1AFE49941CE94LL,0xD85C7411ADB380DCLL,0x4D38316C406BB88CLL,1UL},{18446744073709551615UL,3UL,0x0EA4980C06A060E6LL,0xB414284C2C3151F4LL}},{{0UL,3UL,0UL,1UL},{0xA2067797728EE985LL,0xD85C7411ADB380DCLL,0x9D35DB045A7DFEF5LL,0xD842D701C77FD0E6LL},{0x60351140204CBB88LL,0xB414284C2C3151F4LL,18446744073709551615UL,0xD85C7411ADB380DCLL},{0UL,0xEBFA6C66AA03DAD6LL,18446744073709551615UL,0xE6CAF46C19D3F9D0LL},{0x60351140204CBB88LL,1UL,0x9D35DB045A7DFEF5LL,18446744073709551615UL},{0xA2067797728EE985LL,0UL,0UL,3UL},{0UL,3UL,0xCFA1AFE49941CE94LL,3UL},{0UL,0UL,0x3BDE4296C8D8AAB6LL,0xD85C7411ADB380DCLL},{0UL,0x3A7FAA0B9EA2E329LL,0xA2067797728EE985LL,0xB414284C2C3151F4LL},{0x3BDE4296C8D8AAB6LL,0xE6CAF46C19D3F9D0LL,18446744073709551615UL,0xEBFA6C66AA03DAD6LL}}};
    int8_t l_1603 = 9L;
    int32_t l_1604[2][5];
    uint64_t *l_1605 = &l_1602[1][4][3];
    int i, j, k;
    for (i = 0; i < 1; i++)
        l_1600[i] = &g_631.f5;
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 5; j++)
            l_1604[i][j] = 0xA4391623L;
    }
    if (((p_21 , l_1471[5][7][0]) != l_1471[5][7][0]))
    { /* block id: 521 */
        int32_t l_1486 = 0x6F543CCAL;
        int16_t **l_1541 = (void*)0;
        int16_t ***l_1540 = &l_1541;
        int16_t *l_1542 = &g_1150;
        uint64_t *l_1545 = &g_92;
        uint32_t *l_1561 = &g_1242.f0;
        uint32_t *l_1562 = &g_950.f0;
        int64_t *****l_1563 = (void*)0;
        int64_t ***l_1565 = (void*)0;
        int64_t ****l_1564 = &l_1565;
        for (g_1036.f4 = 0; (g_1036.f4 != 0); g_1036.f4 = safe_add_func_uint8_t_u_u(g_1036.f4, 6))
        { /* block id: 524 */
            int32_t l_1503 = 0x2085B9ECL;
        }
        l_1486 = (safe_sub_func_int8_t_s_s((0xF84F62D8FBD88AA4LL | ((safe_mul_func_uint8_t_u_u((safe_lshift_func_int16_t_s_u((((l_1502 , l_1531) != ((safe_mul_func_uint16_t_u_u(((l_1564 = ((((safe_mod_func_int64_t_s_s((safe_add_func_uint16_t_u_u((safe_lshift_func_uint8_t_u_s(((l_1502 > ((*l_1542) ^= (((*l_1540) = (void*)0) == &g_102[0]))) , ((p_22 > ((((safe_add_func_uint16_t_u_u(((--(*l_1545)) ^ (safe_sub_func_uint16_t_u_u(((safe_sub_func_uint64_t_u_u((((safe_rshift_func_uint16_t_u_s((((*l_1562) = ((*l_1561) &= (safe_mul_func_uint8_t_u_u((+(safe_sub_func_int32_t_s_s(l_1486, (safe_sub_func_int8_t_s_s((1L || 0x8613829AA77854EALL), 0UL))))), 0UL)))) , p_22), p_20)) && l_1476) >= l_1486), l_1476)) != (-10L)), 1L))), p_21)) == l_1502) || 1L) > (-8L))) || l_1486)), 2)), p_22)), 18446744073709551615UL)) , 0xBD647B3FL) ^ g_163) , (void*)0)) != (void*)0), 1UL)) , l_1545)) <= p_21), 12)), l_1486)) & (-6L))), g_1037.f3));
    }
    else
    { /* block id: 549 */
        return p_22;
    }
    (**g_196) |= (safe_add_func_uint64_t_u_u(((*l_1605) = (l_1604[0][3] = ((safe_mul_func_int8_t_s_s((((((safe_div_func_uint32_t_u_u(((l_1572 & 0x6AFC31D2AEE67C12LL) == ((safe_mul_func_int8_t_s_s((-1L), (((*p_19) && (((*l_1575)++) || (safe_rshift_func_int16_t_s_s((safe_div_func_int8_t_s_s((-1L), ((l_1582[2] != l_1582[2]) ^ (safe_rshift_func_int8_t_s_s((safe_add_func_int16_t_s_s((safe_div_func_uint16_t_u_u((safe_add_func_int8_t_s_s((safe_lshift_func_uint16_t_u_u(((safe_rshift_func_uint16_t_u_u(((**g_1376) &= 65527UL), ((((*l_1601) = (((safe_unary_minus_func_uint8_t_u((safe_lshift_func_uint16_t_u_u((l_1476 = (l_1572 , p_20)), 7)))) && p_20) && p_22)) , g_800.f3) , p_22))) & l_1602[1][4][3]), l_1602[0][1][2])), 0x09L)), l_1602[1][4][3])), g_35[4][1])), p_22))))), l_1602[2][8][2])))) , 0xEBL))) | p_22)), l_1602[2][7][3])) | l_1602[1][4][3]) | l_1602[1][4][3]) ^ l_1603) || l_1604[1][3]), 0UL)) < 0xBD56C0A62FE21AAFLL))), 0x19C776DC67E9CCE2LL));
    (*g_196) = (void*)0;
    (*g_196) = (*g_196);
    return g_1242.f7;
}


/* ------------------------------------------ */
/* 
 * reads : g_950.f9 g_196 g_197 g_1036.f4
 * writes: g_3 g_950.f9 g_197
 */
static int8_t  func_26(int32_t * p_27, uint32_t  p_28, int32_t * p_29, int32_t * p_30)
{ /* block id: 426 */
    int64_t **l_1231 = &g_758;
    int64_t ***l_1230 = &l_1231;
    int32_t l_1245 = 0L;
    int32_t l_1249[9][5][4] = {{{(-1L),0xF64C5D90L,0xB4322960L,0x1AF2F0AEL},{(-1L),0x217CCB6DL,7L,0x217CCB6DL},{0x217CCB6DL,0xB4322960L,(-1L),0x217CCB6DL},{(-1L),0x217CCB6DL,0x1AF2F0AEL,0x1AF2F0AEL},{0xF64C5D90L,0xF64C5D90L,7L,(-1L)}},{{0xF64C5D90L,0xB4322960L,0x1AF2F0AEL,0xF64C5D90L},{(-1L),(-1L),(-1L),0x1AF2F0AEL},{0x217CCB6DL,(-1L),7L,0xF64C5D90L},{(-1L),0xB4322960L,0xB4322960L,(-1L)},{(-1L),0xF64C5D90L,0xB4322960L,0x1AF2F0AEL}},{{(-1L),0x217CCB6DL,7L,0x217CCB6DL},{0x217CCB6DL,0xB4322960L,(-1L),0x217CCB6DL},{(-1L),0x217CCB6DL,0x1AF2F0AEL,0x1AF2F0AEL},{0xF64C5D90L,0xF64C5D90L,7L,(-1L)},{0xF64C5D90L,0xB4322960L,0x1AF2F0AEL,0xF64C5D90L}},{{(-1L),(-1L),(-1L),0x1AF2F0AEL},{0x217CCB6DL,(-1L),7L,0xF64C5D90L},{(-1L),0xB4322960L,0xB4322960L,(-1L)},{(-1L),0xF64C5D90L,0xB4322960L,0x1AF2F0AEL},{(-1L),0x217CCB6DL,7L,0x217CCB6DL}},{{0x217CCB6DL,0xB4322960L,(-1L),0x217CCB6DL},{(-1L),0x217CCB6DL,0x1AF2F0AEL,0x1AF2F0AEL},{0xF64C5D90L,0xF64C5D90L,7L,(-1L)},{0xF64C5D90L,0xB4322960L,0x1AF2F0AEL,0xF64C5D90L},{(-1L),(-1L),(-1L),0x1AF2F0AEL}},{{0x217CCB6DL,(-1L),7L,0xF64C5D90L},{(-1L),0xB4322960L,0xB4322960L,(-1L)},{(-1L),0xF64C5D90L,0xB4322960L,0x1AF2F0AEL},{(-1L),0x217CCB6DL,7L,0x217CCB6DL},{0x217CCB6DL,0xB4322960L,(-1L),0x217CCB6DL}},{{(-1L),0x217CCB6DL,0x1AF2F0AEL,0x1AF2F0AEL},{0xF64C5D90L,0xF64C5D90L,7L,(-1L)},{0xF64C5D90L,0xB4322960L,0x1AF2F0AEL,0xF64C5D90L},{(-1L),(-1L),(-1L),0x1AF2F0AEL},{0x217CCB6DL,(-1L),7L,0xF64C5D90L}},{{(-1L),0xB4322960L,0xB4322960L,(-1L)},{(-1L),0xF64C5D90L,0xB4322960L,0x1AF2F0AEL},{(-1L),0x217CCB6DL,7L,0x217CCB6DL},{0x217CCB6DL,0xB4322960L,(-1L),0x217CCB6DL},{(-1L),0x217CCB6DL,0x1AF2F0AEL,0x1AF2F0AEL}},{{0xF64C5D90L,0xF64C5D90L,7L,(-1L)},{0xF64C5D90L,0xB4322960L,0x1AF2F0AEL,0xF64C5D90L},{(-1L),(-1L),(-1L),1L},{0x1AF2F0AEL,0xB4322960L,0xF64C5D90L,(-1L)},{0xB4322960L,7L,7L,0xB4322960L}}};
    int16_t l_1304 = 0x3F86L;
    uint8_t l_1305 = 0UL;
    const int32_t *l_1308 = &g_768;
    int64_t l_1452 = (-1L);
    struct S0 *l_1458 = (void*)0;
    const uint8_t l_1469 = 0xDAL;
    int i, j, k;
    (*p_29) = 1L;
    for (g_950.f9 = 0; (g_950.f9 <= 59); g_950.f9++)
    { /* block id: 430 */
        int64_t ****l_1232 = &l_1230;
        struct S0 *l_1241[7];
        uint8_t *l_1264[1];
        uint8_t **l_1263 = &l_1264[0];
        int32_t l_1273 = 0x732BD947L;
        int32_t l_1303[2][3][1];
        uint64_t *l_1352 = (void*)0;
        uint64_t **l_1351[7];
        int64_t l_1364 = 0xBC0DF66F55B72E4FLL;
        uint16_t ** const l_1375 = (void*)0;
        int i, j, k;
        for (i = 0; i < 7; i++)
            l_1241[i] = &g_1242;
        for (i = 0; i < 1; i++)
            l_1264[i] = &g_551.f9;
        for (i = 0; i < 2; i++)
        {
            for (j = 0; j < 3; j++)
            {
                for (k = 0; k < 1; k++)
                    l_1303[i][j][k] = 1L;
            }
        }
        for (i = 0; i < 7; i++)
            l_1351[i] = &l_1352;
        (*l_1232) = l_1230;
    }
    (*g_196) = &g_370;
    (*g_196) = (*g_196);
    return g_1036.f4;
}


/* ------------------------------------------ */
/* 
 * reads : g_306 g_154 g_163 g_1037.f4 g_470 g_758 g_165 g_189 g_800.f5 g_935 g_936 g_551.f5 g_631.f4 g_196 g_1037.f3 g_1584.f9
 * writes: g_306 g_163 g_470 g_930 g_768 g_165 g_631.f4 g_197
 */
static int32_t * func_37(const uint8_t * p_38, uint8_t  p_39, uint8_t  p_40)
{ /* block id: 393 */
    uint32_t l_1168 = 4294967293UL;
    int32_t l_1193[4] = {0x68E07C1BL,0x68E07C1BL,0x68E07C1BL,0x68E07C1BL};
    int32_t l_1221 = 1L;
    uint8_t *** const l_1224 = &g_739;
    uint8_t ***l_1225 = &g_739;
    int i;
    for (g_306 = 15; (g_306 >= 50); g_306 = safe_add_func_int8_t_s_s(g_306, 8))
    { /* block id: 396 */
        int32_t l_1158 = 0x9B8113B9L;
        const uint64_t *l_1161 = &g_633;
        const uint64_t **l_1160 = &l_1161;
        int64_t l_1163 = (-3L);
        int32_t l_1195 = 0x63FDAF79L;
        uint16_t l_1206 = 0x1FD8L;
        uint8_t l_1218[4][9];
        int32_t l_1223 = 0x37DA30C1L;
        int i, j;
        for (i = 0; i < 4; i++)
        {
            for (j = 0; j < 9; j++)
                l_1218[i][j] = 0x48L;
        }
        if ((l_1158 = (g_154 != (safe_lshift_func_int16_t_s_s(0x65C7L, 4)))))
        { /* block id: 398 */
            const uint64_t ***l_1167[8] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
            const uint64_t ****l_1166[10][9][2] = {{{(void*)0,&l_1167[2]},{(void*)0,&l_1167[4]},{&l_1167[0],(void*)0},{(void*)0,&l_1167[2]},{&l_1167[2],&l_1167[7]},{(void*)0,&l_1167[5]},{(void*)0,(void*)0},{&l_1167[3],(void*)0},{&l_1167[5],&l_1167[0]}},{{&l_1167[5],&l_1167[4]},{(void*)0,&l_1167[4]},{&l_1167[5],&l_1167[0]},{&l_1167[5],(void*)0},{&l_1167[3],(void*)0},{(void*)0,&l_1167[5]},{(void*)0,&l_1167[7]},{&l_1167[2],&l_1167[2]},{(void*)0,(void*)0}},{{&l_1167[0],&l_1167[4]},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[2]},{(void*)0,(void*)0},{&l_1167[2],(void*)0},{&l_1167[2],(void*)0},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[4]}},{{&l_1167[0],(void*)0},{(void*)0,&l_1167[2]},{&l_1167[2],&l_1167[7]},{(void*)0,&l_1167[5]},{(void*)0,(void*)0},{&l_1167[3],(void*)0},{&l_1167[5],&l_1167[0]},{&l_1167[5],&l_1167[4]},{(void*)0,&l_1167[4]}},{{&l_1167[5],&l_1167[0]},{&l_1167[5],(void*)0},{&l_1167[3],(void*)0},{(void*)0,&l_1167[5]},{(void*)0,&l_1167[7]},{&l_1167[2],&l_1167[2]},{(void*)0,(void*)0},{&l_1167[0],&l_1167[4]},{(void*)0,&l_1167[2]}},{{(void*)0,&l_1167[2]},{(void*)0,(void*)0},{&l_1167[2],(void*)0},{&l_1167[2],(void*)0},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[4]},{&l_1167[0],(void*)0},{(void*)0,&l_1167[2]}},{{&l_1167[2],&l_1167[7]},{(void*)0,&l_1167[5]},{(void*)0,(void*)0},{&l_1167[3],(void*)0},{&l_1167[5],&l_1167[0]},{&l_1167[5],&l_1167[4]},{(void*)0,&l_1167[4]},{&l_1167[5],&l_1167[0]},{&l_1167[5],(void*)0}},{{&l_1167[3],(void*)0},{(void*)0,&l_1167[5]},{(void*)0,&l_1167[7]},{&l_1167[2],&l_1167[2]},{(void*)0,(void*)0},{&l_1167[0],&l_1167[4]},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[2]},{(void*)0,(void*)0}},{{&l_1167[2],(void*)0},{&l_1167[2],(void*)0},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[2]},{(void*)0,&l_1167[4]},{&l_1167[0],(void*)0},{(void*)0,&l_1167[2]},{&l_1167[2],&l_1167[7]},{(void*)0,&l_1167[5]}},{{(void*)0,(void*)0},{&l_1167[3],(void*)0},{&l_1167[5],&l_1167[0]},{&l_1167[5],&l_1167[4]},{&l_1167[5],&l_1167[2]},{(void*)0,(void*)0},{(void*)0,(void*)0},{&l_1167[2],(void*)0},{&l_1167[2],&l_1167[0]}}};
            int32_t l_1176 = 0x65E436E9L;
            int32_t *l_1222[6][3][10] = {{{&g_768,&g_768,&l_1193[0],&g_3[5][4][2],&g_768,&g_3[5][4][2],&l_1193[0],&g_768,&g_768,&g_768},{&l_1193[3],&g_3[5][4][2],&g_370,(void*)0,&g_370,&g_3[5][4][2],&l_1193[3],(void*)0,&l_1193[3],&g_3[5][4][2]},{&g_768,(void*)0,&g_3[5][3][5],(void*)0,&g_768,&g_3[1][1][0],&g_3[5][3][5],&g_3[1][1][0],&g_768,(void*)0}},{{&g_370,(void*)0,&g_370,&g_3[5][4][2],&l_1193[3],(void*)0,&l_1193[3],&g_3[5][4][2],&g_370,(void*)0},{&g_768,&g_3[5][4][2],&l_1193[0],&g_768,&g_768,&g_768,&l_1193[0],&g_3[5][4][2],&g_768,&g_3[5][4][2]},{&l_1193[3],&g_768,&g_370,&g_3[1][1][0],&g_370,&g_768,&l_1193[3],&g_3[1][1][0],&l_1193[3],&g_768}},{{&g_768,&g_3[1][1][0],&g_3[5][3][5],&g_3[1][1][0],&g_768,(void*)0,&g_3[5][3][5],(void*)0,&g_768,&g_3[1][1][0]},{&g_370,&g_3[1][1][0],&g_370,&g_768,&l_1193[3],&g_3[1][1][0],&l_1193[3],&g_768,&g_370,&g_3[1][1][0]},{&g_768,&g_768,&l_1193[0],&g_3[5][4][2],&g_768,&g_3[5][4][2],&l_1193[0],&g_768,&g_768,&g_768}},{{&l_1193[3],&g_3[5][4][2],&g_370,(void*)0,&g_370,&g_3[5][4][2],&l_1193[3],(void*)0,&l_1193[3],&g_3[5][4][2]},{&g_768,(void*)0,&g_3[5][3][5],(void*)0,&g_768,&g_3[1][1][0],&g_3[5][3][5],&g_3[1][1][0],&g_768,(void*)0},{&g_370,(void*)0,&g_370,&g_3[5][4][2],&l_1193[3],(void*)0,&l_1193[3],&g_3[5][4][2],&g_370,(void*)0}},{{&g_768,&g_3[5][4][2],&l_1193[0],&g_768,&g_768,&g_768,&l_1193[0],&g_3[5][4][2],&g_768,&g_3[5][4][2]},{&l_1193[3],&g_768,&g_370,&g_3[1][1][0],&g_370,&g_768,&l_1193[3],&g_3[1][1][0],&l_1193[3],&g_768},{&g_768,&g_3[1][1][0],&g_3[5][3][5],&g_3[1][1][0],&g_768,(void*)0,&g_3[5][3][5],(void*)0,&g_768,&g_3[1][1][0]}},{{&g_370,&g_3[1][1][0],&g_370,&g_768,&l_1193[3],&g_3[1][1][0],&l_1193[3],&g_768,&g_370,&g_3[1][1][0]},{&g_768,&g_768,&l_1193[0],&g_3[5][4][2],&g_768,&g_3[5][4][2],&l_1193[0],&g_768,&g_768,&g_768},{&l_1193[3],&g_3[5][4][2],&g_370,(void*)0,&g_370,&g_3[5][4][2],&l_1193[3],(void*)0,&l_1193[3],&g_3[5][4][2]}}};
            int i, j, k;
            for (g_163 = 0; (g_163 <= 6); g_163 += 1)
            { /* block id: 401 */
                int64_t **l_1159 = &g_758;
                const uint64_t ***l_1162 = &l_1160;
                int32_t l_1171 = 0x1600FA90L;
                int32_t *l_1177 = &g_470;
                int16_t *l_1194[8] = {&g_331,&g_331,&g_331,&g_331,&g_331,&g_331,&g_331,&g_331};
                int32_t *l_1196[10][5][5] = {{{&g_3[7][4][2],&g_3[4][1][4],(void*)0,&g_3[5][4][2],&g_768},{(void*)0,&g_3[5][4][2],&g_3[5][4][2],&l_1193[2],&g_3[5][4][2]},{&g_768,&g_3[7][1][5],(void*)0,&l_1176,(void*)0},{&g_3[5][4][2],(void*)0,&l_1193[3],&l_1193[3],&l_1193[2]},{&g_3[5][4][2],&g_370,&g_3[5][4][2],(void*)0,&g_3[0][0][0]}},{{&g_768,(void*)0,(void*)0,&g_768,&g_3[5][4][2]},{(void*)0,&g_768,&g_768,&l_1193[3],&g_3[6][4][4]},{&g_3[7][4][2],&g_3[6][3][4],&g_3[5][4][2],(void*)0,(void*)0},{(void*)0,(void*)0,&l_1176,&g_370,&g_768},{(void*)0,&g_768,&l_1193[3],(void*)0,&l_1176}},{{&g_3[5][4][2],&g_370,(void*)0,(void*)0,&g_3[4][4][5]},{(void*)0,(void*)0,&l_1193[3],&l_1193[3],&g_3[5][4][2]},{&g_3[6][3][4],&l_1193[3],&l_1193[3],&g_3[6][3][4],(void*)0},{&l_1193[3],&g_3[5][4][2],&l_1193[1],&g_3[4][1][1],&g_3[7][4][2]},{&g_768,(void*)0,(void*)0,(void*)0,&l_1193[3]}},{{&l_1193[3],&g_768,&g_768,&g_3[4][1][1],&g_370},{&g_768,&g_3[5][4][2],(void*)0,&g_3[6][3][4],&l_1193[2]},{&g_3[5][4][2],&l_1193[1],&g_3[5][4][2],&l_1193[3],&l_1176},{&l_1193[1],&g_3[7][0][3],&l_1193[3],(void*)0,&l_1193[3]},{&g_3[5][4][2],&l_1193[2],&g_370,(void*)0,&l_1193[2]}},{{&g_3[6][4][4],(void*)0,(void*)0,&g_370,&g_3[6][3][4]},{(void*)0,(void*)0,(void*)0,(void*)0,&g_768},{&l_1176,&l_1176,&l_1176,&l_1193[3],&g_3[7][4][2]},{&g_3[4][1][4],&g_3[4][1][1],&l_1193[3],&g_768,&g_3[5][4][2]},{&l_1176,&g_370,&g_3[5][4][2],(void*)0,&g_3[5][4][2]}},{{&g_3[5][4][2],&g_3[0][0][0],&g_3[5][4][2],&l_1193[3],&g_3[4][4][5]},{&g_768,&g_3[0][0][0],&g_768,&l_1176,&l_1176},{&g_3[5][4][2],&g_370,&g_3[5][4][2],&l_1193[2],&g_3[7][0][3]},{&g_768,&g_3[4][1][1],&g_3[5][4][2],&g_3[5][4][2],(void*)0},{&l_1193[3],&l_1176,&g_370,&g_3[5][4][2],&l_1176}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&l_1193[3],(void*)0,&l_1193[0],&l_1193[1],&g_3[0][0][0]},{&g_370,&l_1193[2],&g_768,(void*)0,&l_1176},{(void*)0,&g_3[7][0][3],(void*)0,&g_3[5][4][2],&g_3[4][1][4]},{&g_3[5][4][2],&l_1193[1],&g_3[2][0][2],&l_1193[1],&g_3[5][4][2]}},{{&g_370,&g_3[5][4][2],&l_1193[3],&g_370,(void*)0},{(void*)0,&g_768,&l_1193[0],&g_3[5][4][2],&l_1193[0]},{&g_370,&g_3[5][4][2],(void*)0,&l_1193[3],&g_3[5][4][2]},{&g_3[5][4][2],&g_3[6][4][4],&l_1193[3],&g_3[5][4][2],&l_1193[3]},{&g_3[5][4][2],&g_768,&l_1176,&g_768,&g_3[5][4][2]}},{{&g_3[6][0][4],&g_370,(void*)0,(void*)0,(void*)0},{&l_1193[3],&l_1193[3],&l_1176,&l_1176,&l_1193[0]},{&g_3[5][4][2],&g_3[2][0][2],(void*)0,&l_1193[2],&l_1193[3]},{(void*)0,&g_768,(void*)0,(void*)0,&l_1193[3]},{(void*)0,(void*)0,(void*)0,&g_3[5][4][2],(void*)0}},{{&g_768,&l_1193[2],&g_768,(void*)0,&g_3[1][2][3]},{(void*)0,&g_3[5][4][2],(void*)0,&g_370,&g_768},{(void*)0,&l_1193[3],&g_3[5][4][2],&g_3[5][4][2],&l_1176},{&g_370,(void*)0,&g_3[5][4][2],(void*)0,&l_1193[3]},{(void*)0,&g_768,(void*)0,(void*)0,&g_768}}};
                int i, j, k;
                l_1159 = l_1159;
                (*l_1162) = l_1160;
                g_768 = (l_1195 = ((l_1163 == (((safe_div_func_uint16_t_u_u((l_1168 = ((void*)0 == l_1166[7][4][0])), (safe_add_func_uint16_t_u_u((l_1171 = l_1171), p_40)))) > (!((((safe_mod_func_int32_t_s_s(((*l_1177) = ((~l_1158) > l_1176)), 0x33A7A9FAL)) , ((safe_rshift_func_int16_t_s_s((g_930 = ((~(safe_mod_func_int16_t_s_s((((safe_mul_func_int16_t_s_s((safe_sub_func_int16_t_s_s(((safe_mul_func_uint8_t_u_u((safe_div_func_uint32_t_u_u((safe_mul_func_uint16_t_u_u(((void*)0 == &g_936), l_1193[3])), 0x50544A40L)), 0x25L)) , g_1037.f4), l_1158)), g_154)) | g_470) > 0L), 4L))) == 0xB48E3A083CF2734ALL)), p_40)) ^ 2UL)) , 0x6CL) > l_1193[1]))) > p_39)) != l_1193[1]));
            }
            l_1193[3] = (l_1193[3] <= (safe_mod_func_uint8_t_u_u((l_1193[0] > ((l_1168 || (safe_unary_minus_func_uint8_t_u(((((*g_758) ^= (safe_sub_func_uint64_t_u_u(0x8A4953F43BA1C35DLL, l_1176))) > (safe_div_func_int32_t_s_s((((safe_rshift_func_int16_t_s_s(l_1193[3], 10)) ^ (247UL > (p_40 | 0UL))) && l_1206), g_470))) & 0xFB5E3452L)))) && l_1193[0])), 0x17L)));
            l_1223 &= (l_1193[3] | (((safe_lshift_func_int16_t_s_s((l_1221 = (safe_mul_func_int8_t_s_s((p_40 && ((((*p_38) & (!((((252UL == 0xF2L) <= ((safe_div_func_uint32_t_u_u((safe_sub_func_uint8_t_u_u((safe_mul_func_int16_t_s_s(l_1218[3][6], (l_1195 ^= ((g_800.f5 , ((safe_add_func_int32_t_s_s(1L, (-1L))) , (*g_935))) == (void*)0)))), g_551.f5)), p_40)) , 0x6B03L)) ^ p_39) | p_40))) , &g_851) == (void*)0)), 0xC9L))), 11)) == p_40) != p_39));
        }
        else
        { /* block id: 416 */
            l_1225 = l_1224;
        }
    }
    for (g_631.f4 = 3; (g_631.f4 != 3); g_631.f4 = safe_add_func_int32_t_s_s(g_631.f4, 7))
    { /* block id: 422 */
        (*g_196) = (void*)0;
    }
    return &g_370;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_85 g_102 g_90 g_92 g_105 g_166 g_139 g_165 g_163 g_196 g_199 g_189 g_197 g_154 g_306 g_333 g_348 g_331 g_364 g_370 g_391 g_1036.f0
 * writes: g_85 g_90 g_92 g_3 g_105 g_139 g_154 g_163 g_165 g_166 g_189 g_306 g_331 g_333 g_364 g_391 g_370 g_197 g_348
 */
static uint8_t * func_41(int64_t  p_42)
{ /* block id: 7 */
    uint8_t l_64 = 255UL;
    int16_t l_418 = (-1L);
    int32_t l_455 = 0xEA93C5B7L;
    int32_t l_457 = (-1L);
    int32_t l_463 = 0x9B4E29D5L;
    int32_t l_464 = 0x14E76237L;
    int32_t l_465 = 0x1ED3E354L;
    int32_t l_468[5][9] = {{0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L},{0L,0L,0L,0L,0L,0L,0L,0L,0L},{0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L},{0L,0L,0L,0L,0L,0L,0L,0L,0L},{0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L,0xFE9FFAABL,0xEE787F67L}};
    int8_t l_506[2][10][10] = {{{0xD3L,0x87L,0x18L,0x97L,0xB9L,0xDBL,1L,0xDBL,0xB9L,0x97L},{0xD3L,0xDBL,0xD3L,0xD7L,9L,1L,0x97L,9L,0x18L,0L},{1L,0x97L,9L,0x18L,0L,0L,0x18L,9L,0x97L,1L},{0x73L,0xADL,0xD3L,0x87L,0x18L,0x97L,0xB9L,0xDBL,1L,0xDBL},{1L,0xD3L,0x18L,0xADL,0x18L,0xD3L,1L,0L,0x99L,1L},{0x18L,0xB9L,9L,9L,0L,9L,0x87L,0x87L,9L,0L},{0x99L,0xB9L,0xB9L,0x99L,9L,0x18L,1L,1L,1L,0x97L},{9L,0xD3L,1L,1L,0xB9L,9L,0xB9L,1L,1L,9L},{0xD7L,0x99L,0x97L,0L,0xB9L,0x73L,1L,9L,0xDBL,0xDBL},{0x99L,1L,0x73L,9L,9L,0x73L,1L,0x99L,0L,1L}},{{0xD7L,0x97L,0xADL,0x99L,0x18L,9L,0x87L,1L,0x87L,9L},{0xD3L,0x18L,0xADL,0x18L,0xD3L,1L,0L,0x99L,1L,0x73L},{0L,0xB9L,0x73L,1L,9L,0xDBL,0xDBL,9L,1L,0x73L},{1L,1L,0x97L,0x73L,0xD3L,9L,9L,0xADL,1L,9L},{0xADL,0x87L,9L,1L,0x18L,1L,9L,0x87L,0xADL,1L},{0xB9L,1L,1L,0xD3L,9L,0xD7L,0xDBL,0x18L,0x18L,0xDBL},{0x87L,0xB9L,0xD3L,0xD3L,0xB9L,0x87L,0L,0xD7L,0xADL,9L},{9L,0x18L,1L,1L,1L,0x97L,0x87L,0x97L,1L,1L},{9L,0x97L,9L,0x73L,0xDBL,0x87L,1L,9L,1L,0xD7L},{0x87L,1L,9L,1L,0xD7L,0xD7L,1L,9L,1L,0x87L}}};
    int32_t l_529 = (-8L);
    int8_t l_537 = (-1L);
    int32_t l_538 = 0L;
    uint16_t *l_584[2];
    uint16_t ***l_589 = &g_428[0];
    uint16_t ****l_588 = &l_589;
    uint16_t *****l_587[7] = {&l_588,&l_588,&l_588,&l_588,&l_588,&l_588,&l_588};
    struct S0 **l_659 = &g_550;
    uint16_t l_665 = 0x1E80L;
    uint32_t l_879 = 0x16C6898FL;
    uint64_t *l_901 = &g_633;
    struct S0 * const l_949 = &g_950;
    struct S0 * const *l_948 = &l_949;
    int64_t l_966 = 1L;
    uint64_t l_967 = 1UL;
    int8_t l_997 = 2L;
    int64_t ** const l_1086[6] = {&g_758,(void*)0,&g_758,&g_758,(void*)0,&g_758};
    int32_t *l_1153 = &l_468[0][0];
    int i, j, k;
    for (i = 0; i < 2; i++)
        l_584[i] = &g_85;
    for (p_42 = 0; (p_42 <= 4); p_42 += 1)
    { /* block id: 10 */
        int8_t l_368[2][3][6] = {{{3L,0xADL,(-10L),0xADL,3L,3L},{0xCBL,0xADL,0xADL,0xCBL,0x31L,0xCBL},{0xCBL,0x31L,0xCBL,0xADL,0xADL,0xCBL}},{{3L,3L,0xADL,(-10L),0xADL,3L},{0xADL,0x31L,(-10L),(-10L),0x31L,0xADL},{3L,0xADL,(-10L),0xADL,3L,3L}}};
        int32_t *l_369 = &g_370;
        volatile uint8_t ***l_392 = &g_348;
        int32_t l_460 = 1L;
        int32_t l_462 = (-1L);
        int32_t l_467[1][5][10] = {{{0xAF023F1CL,0x70A93C67L,0xAF023F1CL,0xF7C70312L,0x70A93C67L,0x06F0F367L,0x06F0F367L,0x70A93C67L,0xF7C70312L,0xAF023F1CL},{(-8L),(-8L),1L,0x70A93C67L,7L,1L,7L,0x70A93C67L,1L,(-8L)},{7L,1L,4L,0xF7C70312L,(-1L),(-1L),0xF7C70312L,4L,1L,0xF7C70312L},{4L,0xAF023F1CL,1L,(-1L),0xAF023F1CL,(-1L),1L,0xAF023F1CL,4L,4L},{0xF7C70312L,0x06F0F367L,(-8L),0xAF023F1CL,0xAF023F1CL,(-8L),0x06F0F367L,0xF7C70312L,(-8L),0xF7C70312L}}};
        int32_t l_539[4] = {0x8412F39FL,0x8412F39FL,0x8412F39FL,0x8412F39FL};
        int32_t l_557 = 0x485CF8D3L;
        uint16_t * const l_578 = (void*)0;
        int32_t **l_592 = &l_369;
        uint16_t ****l_637[10][10] = {{&l_589,&l_589,(void*)0,&l_589,&l_589,(void*)0,&l_589,&l_589,&l_589,&l_589},{(void*)0,&l_589,(void*)0,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,(void*)0,&l_589,&l_589,&l_589,&l_589,&l_589,(void*)0,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,(void*)0,&l_589,(void*)0,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,(void*)0,&l_589,&l_589,&l_589,&l_589,(void*)0,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,(void*)0,&l_589,&l_589},{&l_589,&l_589,(void*)0,&l_589,&l_589,(void*)0,&l_589,&l_589,(void*)0,&l_589},{(void*)0,(void*)0,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589,&l_589}};
        uint64_t *l_702 = &g_92;
        int64_t *l_757 = (void*)0;
        uint32_t l_894 = 0xD96A6CC8L;
        uint32_t l_999 = 0x063B099AL;
        int32_t l_1068 = 0x5BFFE50DL;
        uint64_t l_1130[7][7] = {{0UL,0UL,0x5DC36C424B7D28D5LL,1UL,0xD48EB6A6A6FAB20CLL,0x5DC36C424B7D28D5LL,0xD48EB6A6A6FAB20CLL},{0xF7785728919649CFLL,5UL,5UL,0xF7785728919649CFLL,0xA2DDB2B8BD29BFE0LL,18446744073709551615UL,0xF7785728919649CFLL},{0xFF5DA270ED660E3FLL,0xD48EB6A6A6FAB20CLL,4UL,4UL,0xD48EB6A6A6FAB20CLL,0xFF5DA270ED660E3FLL,18446744073709551615UL},{0xDDE5336731EF1497LL,0xF7785728919649CFLL,1UL,18446744073709551612UL,18446744073709551612UL,1UL,0xF7785728919649CFLL},{0xD48EB6A6A6FAB20CLL,18446744073709551615UL,0xFF5DA270ED660E3FLL,0xD48EB6A6A6FAB20CLL,4UL,4UL,0xD48EB6A6A6FAB20CLL},{18446744073709551615UL,0xF7785728919649CFLL,18446744073709551615UL,0xA2DDB2B8BD29BFE0LL,0xF7785728919649CFLL,5UL,5UL},{1UL,0xD48EB6A6A6FAB20CLL,0x5DC36C424B7D28D5LL,0xD48EB6A6A6FAB20CLL,1UL,0x5DC36C424B7D28D5LL,0UL}};
        uint8_t *l_1143 = &g_90;
        int i, j, k;
        (*g_196) = func_43(func_47(func_53(((safe_div_func_uint32_t_u_u(((safe_mul_func_uint16_t_u_u(((~((0xEE50L >= (safe_mod_func_uint16_t_u_u(0UL, 2L))) | (l_64 , ((0xD407L > (safe_lshift_func_uint8_t_u_s((+0xE649E9ABE1F69F93LL), 0))) || (l_64 >= g_3[6][0][4]))))) > (safe_lshift_func_int8_t_s_u((safe_lshift_func_uint8_t_u_u(((l_64 , (-5L)) , 0xBCL), g_3[5][4][2])), g_3[5][4][2]))), p_42)) < g_3[0][1][1]), g_3[7][2][2])) | 3L)), p_42, l_368[1][1][5], l_64, l_369), (*g_196), p_42);
        (*l_392) = &g_349[3];
        (*l_369) = ((p_42 , &g_197) == (void*)0);
        for (g_331 = 0; (g_331 <= 4); g_331 += 1)
        { /* block id: 116 */
            int8_t l_401 = 3L;
            const uint8_t *l_406 = &l_64;
            const uint8_t **l_405[3][7] = {{&l_406,&l_406,&l_406,&l_406,&l_406,&l_406,&l_406},{&l_406,&l_406,&l_406,&l_406,&l_406,&l_406,&l_406},{&l_406,&l_406,&l_406,&l_406,&l_406,&l_406,&l_406}};
            const uint8_t ***l_404 = &l_405[2][5];
            const uint16_t *l_422 = &g_85;
            const uint16_t **l_421[3];
            uint16_t *l_426 = (void*)0;
            uint16_t **l_425 = &l_426;
            int32_t l_456 = 0x24639125L;
            int32_t l_459 = 1L;
            int32_t l_461 = 0xA8B88654L;
            int32_t l_466[1];
            int32_t l_540 = 0x256AF576L;
            int16_t l_544 = 2L;
            uint16_t ****l_648[7][6] = {{(void*)0,&l_589,&l_589,(void*)0,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{(void*)0,&l_589,&l_589,(void*)0,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{&l_589,&l_589,&l_589,&l_589,&l_589,&l_589},{(void*)0,&l_589,&l_589,(void*)0,&l_589,&l_589}};
            int32_t l_688 = (-4L);
            int16_t *l_693 = &g_453;
            int16_t *l_694 = &g_469;
            int8_t *l_703 = (void*)0;
            uint64_t l_721 = 0x4FDB66E82E559FD5LL;
            uint8_t *l_776[10] = {&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3,&g_631.f3};
            uint32_t l_797 = 0x4CAB9716L;
            uint16_t *** const *l_934 = &l_589;
            uint16_t *** const **l_933[8];
            int32_t l_965 = 0x6E18BC9DL;
            struct S0 *l_1035[5][5] = {{(void*)0,&g_1037,(void*)0,&g_1037,(void*)0},{&g_1036,&g_1036,&g_1036,&g_1036,&g_1036},{(void*)0,&g_1037,(void*)0,&g_1037,(void*)0},{&g_1036,&g_1036,&g_1036,&g_1036,&g_1036},{(void*)0,&g_1037,(void*)0,&g_1037,(void*)0}};
            uint64_t l_1059 = 0x1C376364160BC732LL;
            uint32_t *l_1069[3][6] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
            int32_t *l_1070 = &l_461;
            uint8_t *l_1148[3][6][9] = {{{&g_551.f9,&g_1037.f3,&g_1036.f9,&g_1036.f9,&g_950.f3,&g_1037.f3,&g_1037.f3,&g_950.f3,&g_1036.f9},{&g_950.f9,&g_551.f3,&g_950.f9,(void*)0,&g_1036.f9,&g_950.f3,&g_631.f9,&g_1038.f3,&g_1038.f9},{&g_1037.f3,&g_950.f9,&l_64,&g_551.f9,(void*)0,&g_1038.f3,&l_64,&g_950.f3,&g_631.f3},{&g_1036.f9,&g_1037.f9,&g_189,(void*)0,(void*)0,&g_1037.f9,&g_90,&g_551.f3,&g_551.f3},{(void*)0,&g_1036.f3,(void*)0,&g_1036.f9,(void*)0,&g_1036.f3,(void*)0,&g_1037.f9,&g_1037.f3},{&g_551.f3,(void*)0,&g_1038.f3,&g_1038.f9,&g_950.f9,&g_1036.f9,&g_950.f3,(void*)0,&g_1037.f9}},{{(void*)0,&g_631.f9,&g_1036.f3,&g_631.f3,(void*)0,&g_950.f3,&l_64,&g_1037.f9,&l_64},{&g_1038.f3,(void*)0,&g_189,&g_551.f3,&g_189,&l_64,&g_189,&g_551.f3,&g_189},{&l_64,&l_64,&g_631.f3,&g_1037.f3,&g_1036.f9,&g_631.f9,(void*)0,&g_950.f3,&g_1037.f3},{&g_1038.f9,&g_1036.f9,&l_64,&g_1038.f9,(void*)0,&g_631.f9,&g_90,(void*)0,&g_1037.f9},{&l_64,&g_950.f3,&l_64,&l_64,(void*)0,&g_1036.f9,(void*)0,&g_1037.f3,(void*)0},{&g_1038.f9,&g_189,&g_1038.f9,&g_1038.f9,&g_189,&g_1038.f9,&g_551.f3,&g_1037.f3,&g_90}},{{&g_631.f3,(void*)0,&g_950.f9,&g_1036.f3,&l_64,&g_1036.f3,&l_64,(void*)0,&g_551.f9},{&g_1036.f9,&g_950.f3,(void*)0,&g_1037.f9,&g_551.f3,&g_950.f3,&g_551.f3,&g_631.f9,&g_1037.f9},{&g_1037.f3,(void*)0,&g_950.f3,(void*)0,&g_551.f9,&g_551.f9,(void*)0,&g_950.f3,(void*)0},{(void*)0,&g_1036.f9,&g_189,&g_90,&g_1038.f9,&g_1036.f9,&g_90,&g_1037.f9,&g_1038.f3},{&l_64,&g_1036.f9,&l_64,&g_551.f9,(void*)0,&g_950.f3,&g_1037.f9,(void*)0,&g_1036.f9},{&g_1037.f9,&g_1036.f9,&g_551.f3,&g_1037.f9,&g_950.f3,&g_189,&g_1038.f3,&g_1038.f3,&g_189}}};
            int i, j, k;
            for (i = 0; i < 3; i++)
                l_421[i] = &l_422;
            for (i = 0; i < 1; i++)
                l_466[i] = (-1L);
            for (i = 0; i < 8; i++)
                l_933[i] = &l_934;
        }
    }
    (*g_197) = p_42;
    (*g_196) = func_43(g_1036.f0, &l_468[0][0], (safe_unary_minus_func_int8_t_s(((void*)0 != &g_550))));
    l_1153 = (*g_196);
    return &g_189;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t * func_43(int16_t  p_44, int32_t * p_45, uint32_t  p_46)
{ /* block id: 109 */
    return p_45;
}


/* ------------------------------------------ */
/* 
 * reads : g_370 g_3 g_199 g_189 g_391 g_163
 * writes: g_391 g_370
 */
static int16_t  func_47(uint8_t * p_48, uint8_t  p_49, uint64_t  p_50, int8_t  p_51, int32_t * p_52)
{ /* block id: 104 */
    int32_t *l_371 = &g_3[5][4][2];
    int32_t *l_372 = (void*)0;
    int32_t *l_373 = (void*)0;
    int32_t *l_374 = (void*)0;
    int32_t *l_375 = &g_370;
    int32_t *l_376[3];
    uint8_t l_377[10] = {5UL,5UL,0x20L,5UL,5UL,0x20L,5UL,5UL,0x20L,5UL};
    int i;
    for (i = 0; i < 3; i++)
        l_376[i] = &g_3[5][4][2];
    l_377[1]++;
    g_391 &= (safe_mul_func_uint16_t_u_u((safe_rshift_func_uint8_t_u_s((0xA5L > ((((((((+((safe_rshift_func_int8_t_s_u(((*p_52) >= 0L), (safe_rshift_func_uint8_t_u_u((*l_371), 4)))) , p_49)) , &p_50) != (((void*)0 == &g_364) , &p_50)) & g_199[0][6][1]) > g_189) > (*l_371)) >= 4294967290UL) > (*l_371))), 0)), g_199[0][6][1]));
    (*l_375) ^= 0x3BE1CA86L;
    return g_163;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_85 g_102 g_90 g_92 g_105 g_166 g_139 g_165 g_163 g_196 g_199 g_189 g_197 g_154 g_306 g_333 g_348 g_331 g_364 g_370
 * writes: g_85 g_90 g_92 g_3 g_105 g_139 g_154 g_163 g_165 g_166 g_189 g_306 g_331 g_333 g_364 g_370
 */
static uint8_t * func_53(uint16_t  p_54)
{ /* block id: 11 */
    int32_t *l_78 = &g_3[5][4][2];
    int32_t *l_80 = &g_3[6][2][4];
    int32_t **l_79 = &l_80;
    int16_t *l_83 = (void*)0;
    int16_t *l_84 = (void*)0;
    uint64_t *l_91 = &g_92;
    uint8_t *l_93 = (void*)0;
    int32_t l_109 = 0x65E51F8FL;
    uint32_t l_260 = 0x6CFFB03AL;
    int8_t l_275 = (-2L);
    int32_t l_276[5];
    int i;
    for (i = 0; i < 5; i++)
        l_276[i] = 1L;
    if ((safe_add_func_uint32_t_u_u((((*l_91) = ((safe_mod_func_uint64_t_u_u((l_78 == ((*l_79) = l_78)), (((g_85 = (safe_mul_func_uint8_t_u_u(0x9FL, 0xD1L))) == (safe_div_func_uint32_t_u_u(g_3[1][1][4], 4294967295UL))) , (safe_mul_func_uint8_t_u_u((g_90 = g_85), (l_83 != l_84)))))) ^ 0x7399A04901E3F2B5LL)) != (-6L)), p_54)))
    { /* block id: 16 */
        return l_93;
    }
    else
    { /* block id: 18 */
        int16_t *l_104 = &g_105;
        uint8_t *l_106[3][10][8] = {{{(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{(void*)0,&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,(void*)0},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90}},{{&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90,(void*)0},{&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90},{(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,(void*)0},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90}},{{(void*)0,&g_90,&g_90,&g_90,&g_90,(void*)0,&g_90,&g_90},{&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,(void*)0,&g_90,&g_90,&g_90,&g_90,&g_90,(void*)0},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{&g_90,&g_90,(void*)0,&g_90,&g_90,(void*)0,&g_90,&g_90},{&g_90,&g_90,&g_90,&g_90,&g_90,(void*)0,&g_90,(void*)0},{&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90,&g_90},{(void*)0,&g_90,&g_90,(void*)0,&g_90,&g_90,(void*)0,&g_90}}};
        int32_t l_127 = 0x769B2524L;
        uint32_t l_132 = 0UL;
        uint64_t *l_177 = &g_92;
        int16_t l_233 = 0x7740L;
        int32_t l_272 = 1L;
        int32_t l_274 = (-1L);
        int32_t l_280 = (-10L);
        int32_t l_281 = (-8L);
        int i, j, k;
        if ((safe_sub_func_uint8_t_u_u(((safe_lshift_func_uint8_t_u_s((!((((safe_unary_minus_func_uint32_t_u((g_102[1] == l_104))) < (l_106[0][9][3] == l_106[2][3][3])) & (safe_div_func_uint32_t_u_u((((((l_109 , p_54) || ((safe_mul_func_int16_t_s_s(((safe_unary_minus_func_uint8_t_u((safe_sub_func_uint8_t_u_u((safe_unary_minus_func_uint64_t_u((safe_unary_minus_func_int32_t_s((safe_sub_func_int32_t_s_s(0x986BD2DAL, (safe_div_func_uint64_t_u_u((safe_div_func_uint32_t_u_u(((safe_mul_func_int16_t_s_s((((safe_add_func_uint16_t_u_u((p_54 , p_54), p_54)) <= (**l_79)) , l_127), g_85)) > g_85), g_90)), (-5L))))))))), 4UL)))) & g_92), p_54)) , 5UL)) & p_54) , g_3[5][4][2]) && l_127), (-7L)))) != g_105)), 3)) , 0xBAL), p_54)))
        { /* block id: 19 */
            for (g_92 = (-19); (g_92 == 10); g_92 = safe_add_func_uint32_t_u_u(g_92, 1))
            { /* block id: 22 */
                return l_93;
            }
        }
        else
        { /* block id: 25 */
            int32_t l_151[1];
            const int16_t *l_195 = &g_105;
            int64_t *l_259 = &g_163;
            int32_t l_267[7][7] = {{0x1D34AEDAL,(-6L),0x22830CF9L,0x9E1138FAL,0L,(-5L),0x406AF2D1L},{0L,0x406AF2D1L,0xA1C84778L,0xA1C84778L,0x406AF2D1L,0L,0x1D34AEDAL},{3L,0xA1C84778L,0x22830CF9L,0x1D34AEDAL,0L,0L,0L},{0x9E1138FAL,0L,0x19914BD5L,0L,0x9E1138FAL,(-5L),3L},{1L,0xA1C84778L,0L,(-6L),0x9E1138FAL,3L,0x9E1138FAL},{0x590A6FF8L,0x406AF2D1L,0x406AF2D1L,0x590A6FF8L,0L,(-6L),1L},{1L,(-6L),0L,0x590A6FF8L,0x406AF2D1L,0x406AF2D1L,0x590A6FF8L}};
            int i, j;
            for (i = 0; i < 1; i++)
                l_151[i] = 0xBF6F6D5BL;
            (**l_79) = p_54;
            (*l_79) = (*l_79);
            for (g_90 = 8; (g_90 >= 45); ++g_90)
            { /* block id: 30 */
                uint32_t l_190 = 0UL;
                int32_t l_261 = 0x1D3E571FL;
                int32_t l_269 = (-5L);
                int32_t l_273[8][10][3] = {{{0L,(-1L),0xD7BAA098L},{0L,0L,0x44A0E0B1L},{0x2D8EADADL,0xC9AB741BL,0x2D8EADADL},{0x9F82947EL,(-1L),0x8EA8642BL},{0xEB15AC9EL,0xC9AB741BL,0x51AC87C8L},{1L,0L,(-8L)},{(-1L),0x84C9E741L,0x2D8EADADL},{1L,0xD060EDE6L,0xA23FF211L},{0xEB15AC9EL,0x45FFFB89L,4L},{0x9F82947EL,0L,0xA23FF211L}},{{0x2D8EADADL,0xB82698C1L,0x2D8EADADL},{2L,(-1L),(-8L)},{0xEB15AC9EL,0xB82698C1L,0x51AC87C8L},{0xC2E19C6BL,0L,0x8EA8642BL},{(-1L),0x45FFFB89L,0x2D8EADADL},{0xC2E19C6BL,0xD060EDE6L,0x44A0E0B1L},{0xEB15AC9EL,0x84C9E741L,4L},{2L,0L,0x44A0E0B1L},{0x2D8EADADL,0xC9AB741BL,0x2D8EADADL},{0x9F82947EL,(-1L),0x8EA8642BL}},{{0xEB15AC9EL,0xC9AB741BL,0x51AC87C8L},{1L,0L,(-8L)},{(-1L),0x84C9E741L,0x2D8EADADL},{1L,0xD060EDE6L,0xA23FF211L},{0xEB15AC9EL,0x45FFFB89L,4L},{0x9F82947EL,0L,0xA23FF211L},{0x2D8EADADL,0xB82698C1L,0x2D8EADADL},{2L,(-1L),(-8L)},{0xEB15AC9EL,0xB82698C1L,0x51AC87C8L},{0xC2E19C6BL,0L,0x8EA8642BL}},{{(-1L),0x45FFFB89L,0x2D8EADADL},{0xC2E19C6BL,0xD060EDE6L,0x44A0E0B1L},{0xEB15AC9EL,0x84C9E741L,4L},{2L,0L,0x44A0E0B1L},{0x2D8EADADL,0xC9AB741BL,0x2D8EADADL},{0x9F82947EL,(-1L),0x8EA8642BL},{0xEB15AC9EL,0xC9AB741BL,0x51AC87C8L},{1L,0L,(-8L)},{(-1L),0x84C9E741L,0x2D8EADADL},{1L,0xD060EDE6L,0xA23FF211L}},{{0xEB15AC9EL,0x45FFFB89L,4L},{0x9F82947EL,0L,0xA23FF211L},{0x2D8EADADL,0xB82698C1L,0x2D8EADADL},{2L,(-1L),(-8L)},{0xEB15AC9EL,0xB82698C1L,0x51AC87C8L},{0xC2E19C6BL,0L,0x8EA8642BL},{(-1L),0x45FFFB89L,0x2D8EADADL},{0xC2E19C6BL,0xD060EDE6L,0x44A0E0B1L},{0xEB15AC9EL,0x84C9E741L,4L},{2L,0L,0x44A0E0B1L}},{{0x2D8EADADL,0xC9AB741BL,0x2D8EADADL},{0x9F82947EL,(-1L),0x8EA8642BL},{0xEB15AC9EL,0xC9AB741BL,0x51AC87C8L},{1L,0L,(-8L)},{(-1L),0x84C9E741L,0x2D8EADADL},{1L,0xD060EDE6L,0xA23FF211L},{0xEB15AC9EL,0x45FFFB89L,4L},{0x9F82947EL,0L,0xA23FF211L},{0x2D8EADADL,0xB82698C1L,0x2D8EADADL},{2L,(-1L),(-8L)}},{{0xEB15AC9EL,0xB82698C1L,0x51AC87C8L},{0xC2E19C6BL,0L,0x8EA8642BL},{(-1L),0x45FFFB89L,0x2D8EADADL},{0xC2E19C6BL,0xD060EDE6L,0x44A0E0B1L},{0xEB15AC9EL,0x84C9E741L,(-7L)},{(-5L),0xC2E19C6BL,(-1L)},{2L,0x941C1BC3L,2L},{0x78DB606FL,0x44A0E0B1L,(-1L)},{0L,0x941C1BC3L,0xA7B99C51L},{(-2L),0xC2E19C6BL,0xC11601A9L}},{{4L,0xF01F0A48L,2L},{(-2L),0xA23FF211L,0x2A9956A4L},{0L,1L,(-7L)},{0x78DB606FL,0xC2E19C6BL,0x2A9956A4L},{2L,0x41C4F514L,2L},{(-5L),0x44A0E0B1L,0xC11601A9L},{0L,0x41C4F514L,0xA7B99C51L},{0x07A6BF1CL,0xC2E19C6BL,(-1L)},{4L,1L,2L},{0x07A6BF1CL,0xA23FF211L,(-1L)}}};
                int16_t l_279 = (-3L);
                int i, j, k;
                (*l_79) = (*l_79);
                if (l_132)
                    continue;
                for (g_85 = 0; (g_85 > 18); g_85 = safe_add_func_int32_t_s_s(g_85, 8))
                { /* block id: 35 */
                    uint32_t l_157 = 1UL;
                    uint32_t *l_167 = (void*)0;
                    uint32_t *l_168 = &l_157;
                    int8_t *l_176 = &g_154;
                    int32_t l_268 = (-2L);
                    int32_t l_270 = (-9L);
                    int32_t l_271 = (-10L);
                    int32_t l_277 = (-1L);
                    int32_t l_278[10][7][3] = {{{0x99422305L,0x6A80E99DL,0x5EF6E4D6L},{(-10L),0x78C3C85AL,(-10L)},{(-7L),(-1L),(-1L)},{(-1L),0x6C24658DL,0x8E2C0D5EL},{0L,0x63957BBCL,1L},{(-6L),0x6C24658DL,1L},{0L,(-1L),0x99422305L}},{{0x78C3C85AL,0x78C3C85AL,0x6C24658DL},{1L,0x6A80E99DL,0x2CBEF5C3L},{(-1L),0xEC25883EL,0x9A664986L},{0x2CBEF5C3L,0xB16275ACL,0L},{0L,(-1L),0x9A664986L},{0L,0L,0x2CBEF5C3L},{0x6C24658DL,0x3D3C10A6L,0x6C24658DL}},{{0x471631DFL,0xFA97DFDEL,0x99422305L},{0L,0x2EE27637L,1L},{4L,0xCD6AE3D4L,1L},{1L,1L,0x8E2C0D5EL},{4L,4L,(-1L)},{0L,(-10L),(-10L)},{0x471631DFL,(-1L),0x5EF6E4D6L}},{{0x6C24658DL,1L,0x024F5588L},{0L,4L,9L},{0L,0xE5AFDE05L,0x78C3C85AL},{0x2CBEF5C3L,4L,0x8A0955A1L},{(-1L),1L,0L},{1L,(-1L),(-7L)},{0x78C3C85AL,(-10L),(-6L)}},{{0L,4L,0xD8EACDA7L},{(-6L),1L,(-1L)},{0L,0xCD6AE3D4L,0xD8EACDA7L},{(-1L),0x2EE27637L,(-6L)},{(-7L),0xFA97DFDEL,(-7L)},{(-10L),0x3D3C10A6L,0L},{0x99422305L,0L,0x8A0955A1L}},{{0x3D3C10A6L,(-1L),0x78C3C85AL},{0x8E82138AL,0xB16275ACL,9L},{0x3D3C10A6L,0xEC25883EL,0x024F5588L},{0x99422305L,0x6A80E99DL,0x5EF6E4D6L},{(-10L),0x78C3C85AL,(-10L)},{(-7L),(-1L),(-1L)},{(-1L),0x6C24658DL,0x8E2C0D5EL}},{{0L,0x63957BBCL,1L},{(-6L),0x6C24658DL,1L},{0L,(-1L),0x99422305L},{0x78C3C85AL,0x78C3C85AL,0x6C24658DL},{1L,0x6A80E99DL,0x2CBEF5C3L},{(-1L),0xEC25883EL,0x9A664986L},{0x2CBEF5C3L,(-5L),0x8E82138AL}},{{0xC0FE8FB8L,1L,0x3D3C10A6L},{9L,0x63957BBCL,0x99422305L},{(-10L),1L,(-10L)},{1L,0xB16275ACL,(-7L)},{0x6C24658DL,0xE5AFDE05L,(-1L)},{0x8A0955A1L,(-1L),0L},{(-10L),(-1L),(-6L)}},{{0x8A0955A1L,0xC22DC4E4L,0L},{0x6C24658DL,0x78C3C85AL,0x78C3C85AL},{1L,5L,1L},{(-10L),(-10L),(-1L)},{9L,2L,0x2CBEF5C3L},{0xC0FE8FB8L,0x9A664986L,0L},{0x99422305L,2L,0L}},{{1L,(-10L),0x6C24658DL},{0L,5L,0x471631DFL},{0L,0x78C3C85AL,0L},{0x8E82138AL,0xC22DC4E4L,4L},{0L,(-1L),1L},{0x088E2FD6L,(-1L),4L},{0x8E2C0D5EL,0xE5AFDE05L,0L}}};
                    uint8_t l_282 = 1UL;
                    int i, j, k;
                    for (l_132 = 0; (l_132 >= 12); l_132 = safe_add_func_int64_t_s_s(l_132, 9))
                    { /* block id: 38 */
                        uint16_t l_150 = 0x7F6BL;
                        int32_t l_152 = 0x0240E7FBL;
                        int8_t *l_153 = &g_154;
                        int64_t *l_162 = &g_163;
                        int64_t *l_164 = &g_165;
                        g_166 |= (safe_mul_func_int8_t_s_s(((g_139 = ((*l_104) = 0xB3D2L)) && ((safe_div_func_int64_t_s_s((0xCA579871L <= (safe_mod_func_uint64_t_u_u((p_54 | ((safe_div_func_uint64_t_u_u((safe_sub_func_uint8_t_u_u((safe_div_func_uint8_t_u_u((l_150 , l_151[0]), 3UL)), (((*l_153) = l_152) < ((safe_mod_func_int8_t_s_s((((*l_164) = ((*l_162) = (((l_157 , (safe_mul_func_int16_t_s_s(((safe_mod_func_int16_t_s_s((l_132 & 255UL), 0x51E9L)) || l_152), 0L))) , p_54) , p_54))) >= p_54), l_127)) <= g_3[1][3][1])))), 9L)) != l_151[0])), 5L))), l_157)) > p_54)), g_3[0][4][3]));
                    }
                    if (((((((*l_168) &= 0x833F8FB6L) ^ ((safe_unary_minus_func_uint64_t_u(g_92)) == g_139)) || (safe_div_func_int32_t_s_s((g_189 = ((**l_79) = ((safe_mul_func_int8_t_s_s(p_54, ((safe_lshift_func_int8_t_s_u(g_166, 1)) , ((*l_176) = g_92)))) && ((((void*)0 != l_177) > (safe_mod_func_int16_t_s_s((safe_sub_func_int64_t_s_s(((++(*l_177)) | (safe_div_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_s((!(0x1F5AF2B0L > l_151[0])), 12)), (-7L)))), g_85)), 0xFB42L))) ^ 0x24F2L)))), g_165))) , g_163) || g_90))
                    { /* block id: 51 */
                        uint64_t l_198 = 3UL;
                        uint16_t *l_234 = &g_139;
                        int32_t l_235 = 0x990D2993L;
                        int32_t *l_262 = &l_235;
                        int32_t *l_263 = &g_3[2][4][0];
                        int32_t *l_264 = &l_109;
                        int32_t *l_265 = &l_235;
                        int32_t *l_266[3];
                        int i;
                        for (i = 0; i < 3; i++)
                            l_266[i] = &g_3[5][4][2];
                        (**g_196) ^= (((l_132 <= (l_190 , (((*l_168) = 0UL) == (safe_add_func_int64_t_s_s(((safe_mod_func_uint64_t_u_u(((void*)0 != l_195), (((g_105 <= ((void*)0 != g_196)) , ((g_166 > p_54) <= l_198)) , 18446744073709551609UL))) != g_199[0][6][1]), 0x501070E863B5C28CLL))))) <= 0xF793L) == g_189);
                        l_235 = (safe_unary_minus_func_int64_t_s((safe_div_func_int32_t_s_s(0L, ((**l_79) = (safe_rshift_func_uint8_t_u_s(((((safe_sub_func_int32_t_s_s((safe_mod_func_int64_t_s_s(g_3[5][4][2], (safe_div_func_int8_t_s_s((safe_rshift_func_int8_t_s_u((g_92 , (((*l_234) &= ((safe_add_func_int64_t_s_s((((safe_unary_minus_func_int8_t_s((safe_sub_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u((((((safe_add_func_uint32_t_u_u(p_54, (((void*)0 == &g_197) > ((safe_div_func_uint32_t_u_u(((safe_lshift_func_uint8_t_u_s(((safe_rshift_func_int16_t_s_s((0xE1184130L <= (~65535UL)), (g_105 ^= (safe_lshift_func_int8_t_s_s((safe_lshift_func_int8_t_s_u(((l_91 == (void*)0) , p_54), g_199[0][4][1])), g_163))))) < l_127), 6)) || p_54), 1UL)) , g_85)))) , g_165) , 0L) == p_54) , g_3[5][4][2]), p_54)), l_233)))) != l_233) <= 1L), g_189)) , g_3[5][4][2])) && (-4L))), g_154)), p_54)))), l_190)) <= l_127) || (*g_197)) >= p_54), 0)))))));
                        l_261 |= ((safe_rshift_func_int16_t_s_s(((safe_lshift_func_uint16_t_u_s((safe_mul_func_int8_t_s_s((safe_div_func_int16_t_s_s(g_85, l_235)), (p_54 ^ ((**l_79) = (safe_div_func_int8_t_s_s(((((safe_lshift_func_int8_t_s_u((((~(safe_rshift_func_uint8_t_u_u(g_154, 3))) == (safe_sub_func_int64_t_s_s(p_54, (safe_sub_func_uint64_t_u_u((g_92 ^ (safe_sub_func_int16_t_s_s(((*l_104) = ((safe_mul_func_int8_t_s_s(g_90, (l_259 != l_91))) != g_163)), p_54))), p_54))))) != p_54), g_139)) ^ l_260) && p_54) , l_151[0]), l_190)))))), 10)) | p_54), 8)) , l_233);
                        l_282--;
                    }
                    else
                    { /* block id: 62 */
                        if (l_151[0])
                            break;
                        if (p_54)
                            break;
                        (*g_197) &= 1L;
                    }
                    for (g_139 = 0; (g_139 <= 2); g_139 += 1)
                    { /* block id: 69 */
                        uint8_t **l_303[4] = {&l_93,&l_93,&l_93,&l_93};
                        uint16_t *l_304 = (void*)0;
                        uint16_t *l_305 = &g_306;
                        int16_t *l_330[9][2][9] = {{{&l_233,(void*)0,(void*)0,&l_233,&l_233,&l_233,&l_233,&l_233,(void*)0},{&l_233,&l_233,&l_233,&l_233,&l_279,&l_233,&l_233,&l_233,&l_233}},{{(void*)0,&l_233,&l_233,&l_233,&l_233,&l_233,(void*)0,(void*)0,&l_233},{&l_233,&l_233,&l_233,&l_233,&l_233,&l_279,&l_279,&l_233,&l_233}},{{(void*)0,&l_233,(void*)0,&l_279,&l_233,&l_233,&l_279,(void*)0,&l_233},{&l_233,(void*)0,&l_279,&l_233,&l_233,&l_279,(void*)0,&l_233,(void*)0}},{{&l_233,&l_233,&l_279,&l_279,&l_233,&l_233,&l_233,&l_233,&l_233},{&l_233,(void*)0,(void*)0,&l_233,&l_233,&l_233,&l_233,&l_233,(void*)0}},{{&l_233,&l_233,&l_233,&l_233,&l_279,&l_233,&l_233,&l_233,&l_233},{(void*)0,&l_233,&l_233,&l_233,&l_233,&l_233,(void*)0,(void*)0,&l_233}},{{&l_233,&l_233,&l_233,&l_233,&l_233,&l_279,&l_279,&l_233,&l_233},{(void*)0,&l_233,(void*)0,&l_279,&l_233,&l_233,&l_279,(void*)0,&l_233}},{{&l_233,(void*)0,&l_279,&l_233,&l_233,&l_279,(void*)0,&l_233,(void*)0},{&l_233,&l_233,&l_279,&l_279,&l_233,(void*)0,&l_233,(void*)0,&l_279}},{{(void*)0,&l_233,&l_233,(void*)0,&l_279,&l_279,&l_279,(void*)0,&l_233},{&l_279,&l_279,&l_233,&l_279,&l_233,&l_279,&l_233,&l_279,&l_279}},{{&l_233,(void*)0,&l_279,&l_279,&l_279,(void*)0,&l_233,&l_233,(void*)0},{&l_279,(void*)0,&l_233,(void*)0,&l_279,&l_233,&l_233,&l_279,(void*)0}}};
                        int32_t *l_332[2][8][1] = {{{&l_274},{&l_281},{(void*)0},{&l_281},{&l_274},{&l_281},{(void*)0},{&l_281}},{{&l_274},{&l_281},{(void*)0},{&l_281},{&l_274},{&l_281},{(void*)0},{&l_281}}};
                        uint16_t **l_336 = &l_304;
                        uint8_t ***l_347 = &l_303[2];
                        const int32_t l_358 = 0xE150EA9AL;
                        int i, j, k;
                        l_267[(g_139 + 2)][(g_139 + 2)] = (l_273[g_139][g_139][g_139] & ((((safe_div_func_int16_t_s_s(l_273[(g_139 + 5)][(g_139 + 7)][g_139], (safe_rshift_func_uint8_t_u_s((safe_div_func_int8_t_s_s((l_278[(g_139 + 6)][(g_139 + 4)][g_139] < (safe_sub_func_int16_t_s_s((safe_rshift_func_uint16_t_u_s(l_278[6][3][0], (safe_mod_func_int64_t_s_s(((((safe_sub_func_uint16_t_u_u((safe_rshift_func_int16_t_s_s(p_54, ((*l_104) = (((safe_mod_func_uint64_t_u_u(g_3[7][3][3], g_92)) ^ (g_139 < (((((*l_305) = ((l_106[0][9][3] = &g_90) != &g_189)) > g_189) >= g_139) >= l_157))) > g_85)))), g_199[0][4][1])) >= 0x3BEBE60D3682E754LL) ^ p_54) <= p_54), 18446744073709551615UL)))), g_163))), p_54)), 5)))) != l_267[3][1]) , l_273[g_139][g_139][g_139]) <= 5L));
                        g_333 ^= ((safe_lshift_func_uint8_t_u_s(p_54, 0)) == (+(safe_mod_func_int16_t_s_s(((*l_104) &= (p_54 && g_199[0][4][0])), (((safe_lshift_func_uint8_t_u_u((l_273[6][7][1] = ((((safe_sub_func_uint16_t_u_u(((g_331 = (((l_190 ^ ((*l_78) ^ (((safe_rshift_func_int8_t_s_u((safe_div_func_int8_t_s_s((safe_mul_func_int16_t_s_s(p_54, ((((*l_177) = (~((((p_54 == ((safe_mul_func_uint16_t_u_u(((*l_78) & (((safe_rshift_func_uint8_t_u_u((((+((*l_305)++)) > g_189) , p_54), 1)) & 0x933DCA61D593650CLL) > g_163)), 65535UL)) <= g_199[0][0][1])) <= l_273[(g_139 + 5)][(g_139 + 7)][g_139]) & 0xCC61FBE0L) > (*g_197)))) & p_54) >= p_54))), l_267[(g_139 + 2)][(g_139 + 2)])), 4)) <= l_282) != g_85))) , p_54) > 0x34A12725L)) | g_163), g_165)) , g_154) >= l_267[3][3]) && 0L)), p_54)) , p_54) || l_273[(g_139 + 5)][(g_139 + 7)][g_139])))));
                        l_280 = (((safe_div_func_int8_t_s_s((g_166 && (((*l_336) = &g_306) == (((((**g_196) = ((safe_div_func_int8_t_s_s((safe_mod_func_int8_t_s_s(((((safe_rshift_func_int8_t_s_s((safe_mul_func_uint16_t_u_u(l_267[3][5], (p_54 | (((*l_347) = &l_93) != g_348)))), 4)) , &g_105) == &l_233) , (safe_add_func_int64_t_s_s((((*l_305) = (safe_sub_func_uint16_t_u_u(0x466FL, p_54))) != 0L), g_331))), l_273[5][4][1])), 0xA9L)) && g_189)) ^ p_54) , l_358) , (void*)0))), p_54)) < p_54) , 0x23FC32BAL);
                    }
                }
            }
        }
        (*l_80) = l_280;
    }
    for (g_85 = 2; (g_85 <= 8); g_85 += 1)
    { /* block id: 93 */
        uint64_t l_361 = 0x5A303774D24582E6LL;
        uint8_t *l_367 = &g_189;
        if ((*l_78))
            break;
        for (g_139 = 0; (g_139 <= 8); g_139 += 1)
        { /* block id: 97 */
            int32_t *l_359 = &g_3[5][4][2];
            int32_t *l_360[2];
            uint64_t * const  volatile **l_366 = &g_364;
            int i;
            for (i = 0; i < 2; i++)
                l_360[i] = &l_276[1];
            ++l_361;
            (*l_366) = g_364;
            return l_367;
        }
    }
    return &g_189;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 6; k++)
            {
                transparent_crc(g_3[i][j][k], "g_3[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_14.f0, "g_14.f0", print_hash_value);
    transparent_crc(g_14.f1, "g_14.f1", print_hash_value);
    transparent_crc(g_14.f2, "g_14.f2", print_hash_value);
    transparent_crc(g_14.f3, "g_14.f3", print_hash_value);
    transparent_crc(g_14.f4, "g_14.f4", print_hash_value);
    transparent_crc(g_14.f5, "g_14.f5", print_hash_value);
    transparent_crc(g_14.f6, "g_14.f6", print_hash_value);
    transparent_crc(g_14.f7, "g_14.f7", print_hash_value);
    transparent_crc(g_14.f8, "g_14.f8", print_hash_value);
    transparent_crc(g_14.f9, "g_14.f9", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_35[i][j], "g_35[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_85, "g_85", print_hash_value);
    transparent_crc(g_90, "g_90", print_hash_value);
    transparent_crc(g_92, "g_92", print_hash_value);
    transparent_crc(g_103, "g_103", print_hash_value);
    transparent_crc(g_105, "g_105", print_hash_value);
    transparent_crc(g_139, "g_139", print_hash_value);
    transparent_crc(g_154, "g_154", print_hash_value);
    transparent_crc(g_163, "g_163", print_hash_value);
    transparent_crc(g_165, "g_165", print_hash_value);
    transparent_crc(g_166, "g_166", print_hash_value);
    transparent_crc(g_189, "g_189", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 9; j++)
        {
            for (k = 0; k < 6; k++)
            {
                transparent_crc(g_199[i][j][k], "g_199[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_306, "g_306", print_hash_value);
    transparent_crc(g_331, "g_331", print_hash_value);
    transparent_crc(g_333, "g_333", print_hash_value);
    transparent_crc(g_350, "g_350", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_351[i][j][k], "g_351[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 4; j++)
        {
            transparent_crc(g_352[i][j], "g_352[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_353, "g_353", print_hash_value);
    transparent_crc(g_370, "g_370", print_hash_value);
    transparent_crc(g_391, "g_391", print_hash_value);
    transparent_crc(g_453, "g_453", print_hash_value);
    transparent_crc(g_469, "g_469", print_hash_value);
    transparent_crc(g_470, "g_470", print_hash_value);
    transparent_crc(g_551.f0, "g_551.f0", print_hash_value);
    transparent_crc(g_551.f1, "g_551.f1", print_hash_value);
    transparent_crc(g_551.f2, "g_551.f2", print_hash_value);
    transparent_crc(g_551.f3, "g_551.f3", print_hash_value);
    transparent_crc(g_551.f4, "g_551.f4", print_hash_value);
    transparent_crc(g_551.f5, "g_551.f5", print_hash_value);
    transparent_crc(g_551.f6, "g_551.f6", print_hash_value);
    transparent_crc(g_551.f7, "g_551.f7", print_hash_value);
    transparent_crc(g_551.f8, "g_551.f8", print_hash_value);
    transparent_crc(g_551.f9, "g_551.f9", print_hash_value);
    transparent_crc(g_631.f0, "g_631.f0", print_hash_value);
    transparent_crc(g_631.f1, "g_631.f1", print_hash_value);
    transparent_crc(g_631.f2, "g_631.f2", print_hash_value);
    transparent_crc(g_631.f3, "g_631.f3", print_hash_value);
    transparent_crc(g_631.f4, "g_631.f4", print_hash_value);
    transparent_crc(g_631.f5, "g_631.f5", print_hash_value);
    transparent_crc(g_631.f6, "g_631.f6", print_hash_value);
    transparent_crc(g_631.f7, "g_631.f7", print_hash_value);
    transparent_crc(g_631.f8, "g_631.f8", print_hash_value);
    transparent_crc(g_631.f9, "g_631.f9", print_hash_value);
    transparent_crc(g_633, "g_633", print_hash_value);
    transparent_crc(g_701, "g_701", print_hash_value);
    transparent_crc(g_768, "g_768", print_hash_value);
    transparent_crc(g_793, "g_793", print_hash_value);
    transparent_crc(g_800.f0, "g_800.f0", print_hash_value);
    transparent_crc(g_800.f1, "g_800.f1", print_hash_value);
    transparent_crc(g_800.f2, "g_800.f2", print_hash_value);
    transparent_crc(g_800.f3, "g_800.f3", print_hash_value);
    transparent_crc(g_800.f4, "g_800.f4", print_hash_value);
    transparent_crc(g_800.f5, "g_800.f5", print_hash_value);
    transparent_crc(g_800.f6, "g_800.f6", print_hash_value);
    transparent_crc(g_800.f7, "g_800.f7", print_hash_value);
    transparent_crc(g_800.f8, "g_800.f8", print_hash_value);
    transparent_crc(g_800.f9, "g_800.f9", print_hash_value);
    transparent_crc(g_851, "g_851", print_hash_value);
    transparent_crc(g_853, "g_853", print_hash_value);
    transparent_crc(g_923, "g_923", print_hash_value);
    transparent_crc(g_930, "g_930", print_hash_value);
    transparent_crc(g_950.f0, "g_950.f0", print_hash_value);
    transparent_crc(g_950.f1, "g_950.f1", print_hash_value);
    transparent_crc(g_950.f2, "g_950.f2", print_hash_value);
    transparent_crc(g_950.f3, "g_950.f3", print_hash_value);
    transparent_crc(g_950.f4, "g_950.f4", print_hash_value);
    transparent_crc(g_950.f5, "g_950.f5", print_hash_value);
    transparent_crc(g_950.f6, "g_950.f6", print_hash_value);
    transparent_crc(g_950.f7, "g_950.f7", print_hash_value);
    transparent_crc(g_950.f8, "g_950.f8", print_hash_value);
    transparent_crc(g_950.f9, "g_950.f9", print_hash_value);
    transparent_crc(g_1036.f0, "g_1036.f0", print_hash_value);
    transparent_crc(g_1036.f1, "g_1036.f1", print_hash_value);
    transparent_crc(g_1036.f2, "g_1036.f2", print_hash_value);
    transparent_crc(g_1036.f3, "g_1036.f3", print_hash_value);
    transparent_crc(g_1036.f4, "g_1036.f4", print_hash_value);
    transparent_crc(g_1036.f5, "g_1036.f5", print_hash_value);
    transparent_crc(g_1036.f6, "g_1036.f6", print_hash_value);
    transparent_crc(g_1036.f7, "g_1036.f7", print_hash_value);
    transparent_crc(g_1036.f8, "g_1036.f8", print_hash_value);
    transparent_crc(g_1036.f9, "g_1036.f9", print_hash_value);
    transparent_crc(g_1037.f0, "g_1037.f0", print_hash_value);
    transparent_crc(g_1037.f1, "g_1037.f1", print_hash_value);
    transparent_crc(g_1037.f2, "g_1037.f2", print_hash_value);
    transparent_crc(g_1037.f3, "g_1037.f3", print_hash_value);
    transparent_crc(g_1037.f4, "g_1037.f4", print_hash_value);
    transparent_crc(g_1037.f5, "g_1037.f5", print_hash_value);
    transparent_crc(g_1037.f6, "g_1037.f6", print_hash_value);
    transparent_crc(g_1037.f7, "g_1037.f7", print_hash_value);
    transparent_crc(g_1037.f8, "g_1037.f8", print_hash_value);
    transparent_crc(g_1037.f9, "g_1037.f9", print_hash_value);
    transparent_crc(g_1038.f0, "g_1038.f0", print_hash_value);
    transparent_crc(g_1038.f1, "g_1038.f1", print_hash_value);
    transparent_crc(g_1038.f2, "g_1038.f2", print_hash_value);
    transparent_crc(g_1038.f3, "g_1038.f3", print_hash_value);
    transparent_crc(g_1038.f4, "g_1038.f4", print_hash_value);
    transparent_crc(g_1038.f5, "g_1038.f5", print_hash_value);
    transparent_crc(g_1038.f6, "g_1038.f6", print_hash_value);
    transparent_crc(g_1038.f7, "g_1038.f7", print_hash_value);
    transparent_crc(g_1038.f8, "g_1038.f8", print_hash_value);
    transparent_crc(g_1038.f9, "g_1038.f9", print_hash_value);
    transparent_crc(g_1137, "g_1137", print_hash_value);
    transparent_crc(g_1150, "g_1150", print_hash_value);
    transparent_crc(g_1151, "g_1151", print_hash_value);
    transparent_crc(g_1242.f0, "g_1242.f0", print_hash_value);
    transparent_crc(g_1242.f1, "g_1242.f1", print_hash_value);
    transparent_crc(g_1242.f2, "g_1242.f2", print_hash_value);
    transparent_crc(g_1242.f3, "g_1242.f3", print_hash_value);
    transparent_crc(g_1242.f4, "g_1242.f4", print_hash_value);
    transparent_crc(g_1242.f5, "g_1242.f5", print_hash_value);
    transparent_crc(g_1242.f6, "g_1242.f6", print_hash_value);
    transparent_crc(g_1242.f7, "g_1242.f7", print_hash_value);
    transparent_crc(g_1242.f8, "g_1242.f8", print_hash_value);
    transparent_crc(g_1242.f9, "g_1242.f9", print_hash_value);
    transparent_crc(g_1244.f0, "g_1244.f0", print_hash_value);
    transparent_crc(g_1244.f1, "g_1244.f1", print_hash_value);
    transparent_crc(g_1244.f2, "g_1244.f2", print_hash_value);
    transparent_crc(g_1244.f3, "g_1244.f3", print_hash_value);
    transparent_crc(g_1244.f4, "g_1244.f4", print_hash_value);
    transparent_crc(g_1244.f5, "g_1244.f5", print_hash_value);
    transparent_crc(g_1244.f6, "g_1244.f6", print_hash_value);
    transparent_crc(g_1244.f7, "g_1244.f7", print_hash_value);
    transparent_crc(g_1244.f8, "g_1244.f8", print_hash_value);
    transparent_crc(g_1244.f9, "g_1244.f9", print_hash_value);
    transparent_crc(g_1493, "g_1493", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 4; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(g_1583[i][j][k].f0, "g_1583[i][j][k].f0", print_hash_value);
                transparent_crc(g_1583[i][j][k].f1, "g_1583[i][j][k].f1", print_hash_value);
                transparent_crc(g_1583[i][j][k].f2, "g_1583[i][j][k].f2", print_hash_value);
                transparent_crc(g_1583[i][j][k].f3, "g_1583[i][j][k].f3", print_hash_value);
                transparent_crc(g_1583[i][j][k].f4, "g_1583[i][j][k].f4", print_hash_value);
                transparent_crc(g_1583[i][j][k].f5, "g_1583[i][j][k].f5", print_hash_value);
                transparent_crc(g_1583[i][j][k].f6, "g_1583[i][j][k].f6", print_hash_value);
                transparent_crc(g_1583[i][j][k].f7, "g_1583[i][j][k].f7", print_hash_value);
                transparent_crc(g_1583[i][j][k].f8, "g_1583[i][j][k].f8", print_hash_value);
                transparent_crc(g_1583[i][j][k].f9, "g_1583[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 2; k++)
            {
                transparent_crc(g_1584[i][j][k].f0, "g_1584[i][j][k].f0", print_hash_value);
                transparent_crc(g_1584[i][j][k].f1, "g_1584[i][j][k].f1", print_hash_value);
                transparent_crc(g_1584[i][j][k].f2, "g_1584[i][j][k].f2", print_hash_value);
                transparent_crc(g_1584[i][j][k].f3, "g_1584[i][j][k].f3", print_hash_value);
                transparent_crc(g_1584[i][j][k].f4, "g_1584[i][j][k].f4", print_hash_value);
                transparent_crc(g_1584[i][j][k].f5, "g_1584[i][j][k].f5", print_hash_value);
                transparent_crc(g_1584[i][j][k].f6, "g_1584[i][j][k].f6", print_hash_value);
                transparent_crc(g_1584[i][j][k].f7, "g_1584[i][j][k].f7", print_hash_value);
                transparent_crc(g_1584[i][j][k].f8, "g_1584[i][j][k].f8", print_hash_value);
                transparent_crc(g_1584[i][j][k].f9, "g_1584[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1607, "g_1607", print_hash_value);
    transparent_crc(g_1608.f0, "g_1608.f0", print_hash_value);
    transparent_crc(g_1608.f1, "g_1608.f1", print_hash_value);
    transparent_crc(g_1608.f2, "g_1608.f2", print_hash_value);
    transparent_crc(g_1608.f3, "g_1608.f3", print_hash_value);
    transparent_crc(g_1608.f4, "g_1608.f4", print_hash_value);
    transparent_crc(g_1608.f5, "g_1608.f5", print_hash_value);
    transparent_crc(g_1608.f6, "g_1608.f6", print_hash_value);
    transparent_crc(g_1608.f7, "g_1608.f7", print_hash_value);
    transparent_crc(g_1608.f8, "g_1608.f8", print_hash_value);
    transparent_crc(g_1608.f9, "g_1608.f9", print_hash_value);
    transparent_crc(g_1609.f0, "g_1609.f0", print_hash_value);
    transparent_crc(g_1609.f1, "g_1609.f1", print_hash_value);
    transparent_crc(g_1609.f2, "g_1609.f2", print_hash_value);
    transparent_crc(g_1609.f3, "g_1609.f3", print_hash_value);
    transparent_crc(g_1609.f4, "g_1609.f4", print_hash_value);
    transparent_crc(g_1609.f5, "g_1609.f5", print_hash_value);
    transparent_crc(g_1609.f6, "g_1609.f6", print_hash_value);
    transparent_crc(g_1609.f7, "g_1609.f7", print_hash_value);
    transparent_crc(g_1609.f8, "g_1609.f8", print_hash_value);
    transparent_crc(g_1609.f9, "g_1609.f9", print_hash_value);
    transparent_crc(g_1613.f0, "g_1613.f0", print_hash_value);
    transparent_crc(g_1613.f1, "g_1613.f1", print_hash_value);
    transparent_crc(g_1613.f2, "g_1613.f2", print_hash_value);
    transparent_crc(g_1613.f3, "g_1613.f3", print_hash_value);
    transparent_crc(g_1613.f4, "g_1613.f4", print_hash_value);
    transparent_crc(g_1613.f5, "g_1613.f5", print_hash_value);
    transparent_crc(g_1613.f6, "g_1613.f6", print_hash_value);
    transparent_crc(g_1613.f7, "g_1613.f7", print_hash_value);
    transparent_crc(g_1613.f8, "g_1613.f8", print_hash_value);
    transparent_crc(g_1613.f9, "g_1613.f9", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_1660[i][j][k].f0, "g_1660[i][j][k].f0", print_hash_value);
                transparent_crc(g_1660[i][j][k].f1, "g_1660[i][j][k].f1", print_hash_value);
                transparent_crc(g_1660[i][j][k].f2, "g_1660[i][j][k].f2", print_hash_value);
                transparent_crc(g_1660[i][j][k].f3, "g_1660[i][j][k].f3", print_hash_value);
                transparent_crc(g_1660[i][j][k].f4, "g_1660[i][j][k].f4", print_hash_value);
                transparent_crc(g_1660[i][j][k].f5, "g_1660[i][j][k].f5", print_hash_value);
                transparent_crc(g_1660[i][j][k].f6, "g_1660[i][j][k].f6", print_hash_value);
                transparent_crc(g_1660[i][j][k].f7, "g_1660[i][j][k].f7", print_hash_value);
                transparent_crc(g_1660[i][j][k].f8, "g_1660[i][j][k].f8", print_hash_value);
                transparent_crc(g_1660[i][j][k].f9, "g_1660[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 10; j++)
        {
            for (k = 0; k < 10; k++)
            {
                transparent_crc(g_1684[i][j][k].f0, "g_1684[i][j][k].f0", print_hash_value);
                transparent_crc(g_1684[i][j][k].f1, "g_1684[i][j][k].f1", print_hash_value);
                transparent_crc(g_1684[i][j][k].f2, "g_1684[i][j][k].f2", print_hash_value);
                transparent_crc(g_1684[i][j][k].f3, "g_1684[i][j][k].f3", print_hash_value);
                transparent_crc(g_1684[i][j][k].f4, "g_1684[i][j][k].f4", print_hash_value);
                transparent_crc(g_1684[i][j][k].f5, "g_1684[i][j][k].f5", print_hash_value);
                transparent_crc(g_1684[i][j][k].f6, "g_1684[i][j][k].f6", print_hash_value);
                transparent_crc(g_1684[i][j][k].f7, "g_1684[i][j][k].f7", print_hash_value);
                transparent_crc(g_1684[i][j][k].f8, "g_1684[i][j][k].f8", print_hash_value);
                transparent_crc(g_1684[i][j][k].f9, "g_1684[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1754.f0, "g_1754.f0", print_hash_value);
    transparent_crc(g_1754.f1, "g_1754.f1", print_hash_value);
    transparent_crc(g_1754.f2, "g_1754.f2", print_hash_value);
    transparent_crc(g_1754.f3, "g_1754.f3", print_hash_value);
    transparent_crc(g_1754.f4, "g_1754.f4", print_hash_value);
    transparent_crc(g_1754.f5, "g_1754.f5", print_hash_value);
    transparent_crc(g_1754.f6, "g_1754.f6", print_hash_value);
    transparent_crc(g_1754.f7, "g_1754.f7", print_hash_value);
    transparent_crc(g_1754.f8, "g_1754.f8", print_hash_value);
    transparent_crc(g_1754.f9, "g_1754.f9", print_hash_value);
    transparent_crc(g_1792, "g_1792", print_hash_value);
    transparent_crc(g_1874.f0, "g_1874.f0", print_hash_value);
    transparent_crc(g_1874.f1, "g_1874.f1", print_hash_value);
    transparent_crc(g_1874.f2, "g_1874.f2", print_hash_value);
    transparent_crc(g_1874.f3, "g_1874.f3", print_hash_value);
    transparent_crc(g_1874.f4, "g_1874.f4", print_hash_value);
    transparent_crc(g_1874.f5, "g_1874.f5", print_hash_value);
    transparent_crc(g_1874.f6, "g_1874.f6", print_hash_value);
    transparent_crc(g_1874.f7, "g_1874.f7", print_hash_value);
    transparent_crc(g_1874.f8, "g_1874.f8", print_hash_value);
    transparent_crc(g_1874.f9, "g_1874.f9", print_hash_value);
    transparent_crc(g_1953.f0, "g_1953.f0", print_hash_value);
    transparent_crc(g_1953.f1, "g_1953.f1", print_hash_value);
    transparent_crc(g_1953.f2, "g_1953.f2", print_hash_value);
    transparent_crc(g_1953.f3, "g_1953.f3", print_hash_value);
    transparent_crc(g_1953.f4, "g_1953.f4", print_hash_value);
    transparent_crc(g_1953.f5, "g_1953.f5", print_hash_value);
    transparent_crc(g_1953.f6, "g_1953.f6", print_hash_value);
    transparent_crc(g_1953.f7, "g_1953.f7", print_hash_value);
    transparent_crc(g_1953.f8, "g_1953.f8", print_hash_value);
    transparent_crc(g_1953.f9, "g_1953.f9", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        transparent_crc(g_1954[i].f0, "g_1954[i].f0", print_hash_value);
        transparent_crc(g_1954[i].f1, "g_1954[i].f1", print_hash_value);
        transparent_crc(g_1954[i].f2, "g_1954[i].f2", print_hash_value);
        transparent_crc(g_1954[i].f3, "g_1954[i].f3", print_hash_value);
        transparent_crc(g_1954[i].f4, "g_1954[i].f4", print_hash_value);
        transparent_crc(g_1954[i].f5, "g_1954[i].f5", print_hash_value);
        transparent_crc(g_1954[i].f6, "g_1954[i].f6", print_hash_value);
        transparent_crc(g_1954[i].f7, "g_1954[i].f7", print_hash_value);
        transparent_crc(g_1954[i].f8, "g_1954[i].f8", print_hash_value);
        transparent_crc(g_1954[i].f9, "g_1954[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1974, "g_1974", print_hash_value);
    transparent_crc(g_2035.f0, "g_2035.f0", print_hash_value);
    transparent_crc(g_2035.f1, "g_2035.f1", print_hash_value);
    transparent_crc(g_2035.f2, "g_2035.f2", print_hash_value);
    transparent_crc(g_2035.f3, "g_2035.f3", print_hash_value);
    transparent_crc(g_2035.f4, "g_2035.f4", print_hash_value);
    transparent_crc(g_2035.f5, "g_2035.f5", print_hash_value);
    transparent_crc(g_2035.f6, "g_2035.f6", print_hash_value);
    transparent_crc(g_2035.f7, "g_2035.f7", print_hash_value);
    transparent_crc(g_2035.f8, "g_2035.f8", print_hash_value);
    transparent_crc(g_2035.f9, "g_2035.f9", print_hash_value);
    transparent_crc(g_2085, "g_2085", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        transparent_crc(g_2170[i], "g_2170[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2215, "g_2215", print_hash_value);
    transparent_crc(g_2220.f0, "g_2220.f0", print_hash_value);
    transparent_crc(g_2220.f1, "g_2220.f1", print_hash_value);
    transparent_crc(g_2220.f2, "g_2220.f2", print_hash_value);
    transparent_crc(g_2220.f3, "g_2220.f3", print_hash_value);
    transparent_crc(g_2220.f4, "g_2220.f4", print_hash_value);
    transparent_crc(g_2220.f5, "g_2220.f5", print_hash_value);
    transparent_crc(g_2220.f6, "g_2220.f6", print_hash_value);
    transparent_crc(g_2220.f7, "g_2220.f7", print_hash_value);
    transparent_crc(g_2220.f8, "g_2220.f8", print_hash_value);
    transparent_crc(g_2220.f9, "g_2220.f9", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_2253[i].f0, "g_2253[i].f0", print_hash_value);
        transparent_crc(g_2253[i].f1, "g_2253[i].f1", print_hash_value);
        transparent_crc(g_2253[i].f2, "g_2253[i].f2", print_hash_value);
        transparent_crc(g_2253[i].f3, "g_2253[i].f3", print_hash_value);
        transparent_crc(g_2253[i].f4, "g_2253[i].f4", print_hash_value);
        transparent_crc(g_2253[i].f5, "g_2253[i].f5", print_hash_value);
        transparent_crc(g_2253[i].f6, "g_2253[i].f6", print_hash_value);
        transparent_crc(g_2253[i].f7, "g_2253[i].f7", print_hash_value);
        transparent_crc(g_2253[i].f8, "g_2253[i].f8", print_hash_value);
        transparent_crc(g_2253[i].f9, "g_2253[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2344, "g_2344", print_hash_value);
    transparent_crc(g_2400.f0, "g_2400.f0", print_hash_value);
    transparent_crc(g_2400.f1, "g_2400.f1", print_hash_value);
    transparent_crc(g_2400.f2, "g_2400.f2", print_hash_value);
    transparent_crc(g_2400.f3, "g_2400.f3", print_hash_value);
    transparent_crc(g_2400.f4, "g_2400.f4", print_hash_value);
    transparent_crc(g_2400.f5, "g_2400.f5", print_hash_value);
    transparent_crc(g_2400.f6, "g_2400.f6", print_hash_value);
    transparent_crc(g_2400.f7, "g_2400.f7", print_hash_value);
    transparent_crc(g_2400.f8, "g_2400.f8", print_hash_value);
    transparent_crc(g_2400.f9, "g_2400.f9", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 3; k++)
            {
                transparent_crc(g_2404[i][j][k], "g_2404[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 525
   depth: 1, occurrence: 14
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 0
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 0
breakdown:
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 0
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 0
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 0

XXX max expression depth: 45
breakdown:
   depth: 1, occurrence: 136
   depth: 2, occurrence: 27
   depth: 3, occurrence: 3
   depth: 4, occurrence: 1
   depth: 5, occurrence: 2
   depth: 16, occurrence: 2
   depth: 17, occurrence: 2
   depth: 19, occurrence: 1
   depth: 20, occurrence: 1
   depth: 22, occurrence: 2
   depth: 23, occurrence: 1
   depth: 24, occurrence: 2
   depth: 25, occurrence: 2
   depth: 26, occurrence: 2
   depth: 27, occurrence: 1
   depth: 28, occurrence: 3
   depth: 29, occurrence: 2
   depth: 31, occurrence: 1
   depth: 36, occurrence: 1
   depth: 39, occurrence: 2
   depth: 41, occurrence: 1
   depth: 45, occurrence: 1

XXX total number of pointers: 488

XXX times a variable address is taken: 1220
XXX times a pointer is dereferenced on RHS: 185
breakdown:
   depth: 1, occurrence: 152
   depth: 2, occurrence: 26
   depth: 3, occurrence: 1
   depth: 4, occurrence: 4
   depth: 5, occurrence: 2
XXX times a pointer is dereferenced on LHS: 293
breakdown:
   depth: 1, occurrence: 257
   depth: 2, occurrence: 33
   depth: 3, occurrence: 2
   depth: 4, occurrence: 1
XXX times a pointer is compared with null: 51
XXX times a pointer is compared with address of another variable: 9
XXX times a pointer is compared with another pointer: 20
XXX times a pointer is qualified to be dereferenced: 8565

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 904
   level: 2, occurrence: 304
   level: 3, occurrence: 70
   level: 4, occurrence: 26
   level: 5, occurrence: 10
XXX number of pointers point to pointers: 179
XXX number of pointers point to scalars: 292
XXX number of pointers point to structs: 17
XXX percent of pointers has null in alias set: 32.8
XXX average alias set size: 1.45

XXX times a non-volatile is read: 1773
XXX times a non-volatile is write: 887
XXX times a volatile is read: 40
XXX    times read thru a pointer: 17
XXX times a volatile is write: 12
XXX    times written thru a pointer: 6
XXX times a volatile is available for access: 3.09e+03
XXX percentage of non-volatile access: 98.1

XXX forward jumps: 0
XXX backward jumps: 3

XXX stmts: 127
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 38
   depth: 1, occurrence: 24
   depth: 2, occurrence: 21
   depth: 3, occurrence: 20
   depth: 4, occurrence: 8
   depth: 5, occurrence: 16

XXX percentage a fresh-made variable is used: 14.7
XXX percentage an existing variable is used: 85.3
********************* end of statistics **********************/

