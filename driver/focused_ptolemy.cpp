/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   -o driver/focused_ptolemy.cpp
 * Seed:      1482039159
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
struct S0 {
   volatile signed f0 : 26;
   volatile signed f1 : 9;
   unsigned f2 : 8;
   volatile signed f3 : 19;
   unsigned f4 : 24;
   volatile int64_t  f5;
   const uint32_t  f6;
   volatile unsigned f7 : 27;
   volatile unsigned f8 : 30;
};

struct S1 {
   const volatile signed f0 : 13;
   uint32_t  f1;
   signed f2 : 31;
   uint8_t  f3;
};

#pragma pack(push)
#pragma pack(1)
struct S2 {
   volatile signed f0 : 16;
   signed f1 : 25;
   signed f2 : 17;
   volatile unsigned f3 : 29;
   volatile unsigned f4 : 22;
   int16_t  f5;
   unsigned f6 : 28;
   signed f7 : 16;
   unsigned f8 : 16;
   signed f9 : 2;
};
#pragma pack(pop)

/* --- GLOBAL VARIABLES --- */
static int32_t g_12[10] = {0xA922A198L,0x17A9413EL,0xA922A198L,0xA922A198L,0x17A9413EL,0xA922A198L,0xA922A198L,0x17A9413EL,0xA922A198L,0xA922A198L};
static int64_t g_29 = 0x0A94FE874D4A788ALL;
static int16_t g_43 = 0xCAC2L;
static int32_t g_57[4] = {0x3E652FC6L,0x3E652FC6L,0x3E652FC6L,0x3E652FC6L};
static uint64_t g_59 = 18446744073709551615UL;
static int8_t g_70[5][9][5] = {{{0x62L,0x62L,(-1L),0x7DL,0L},{(-1L),0xE3L,0x61L,0x82L,(-1L)},{(-3L),0x82L,0x62L,0x30L,9L},{0x30L,0xE3L,0xF9L,0xF9L,0xE3L},{(-1L),0x62L,0xE0L,0xF9L,0xEFL},{(-4L),0xEFL,5L,0x30L,0x82L},{0x7DL,0x61L,0xF9L,5L,(-1L)},{0x7DL,0xE0L,(-1L),0xE0L,0x7DL},{0xEFL,0x61L,(-1L),0xF9L,(-3L)}},{{9L,(-1L),0xF9L,0x62L,(-8L)},{(-8L),0x7DL,(-1L),0x61L,(-3L)},{(-1L),0x62L,0x62L,(-1L),0x7DL},{(-3L),0x62L,(-1L),0L,(-1L)},{0x61L,0x7DL,(-3L),(-4L),5L},{(-1L),(-1L),0x30L,0L,0L},{(-1L),0x61L,(-1L),(-1L),0x82L},{(-1L),0xE0L,(-4L),0x61L,0xF9L},{(-1L),0x30L,0x7DL,0x62L,0xEFL}},{{0x61L,0L,(-4L),0xF9L,(-4L)},{(-3L),(-3L),(-1L),0xE0L,(-4L)},{(-1L),0x82L,0x30L,5L,0xEFL},{(-8L),5L,(-3L),9L,0xF9L},{9L,0x82L,(-1L),(-1L),0x82L},{0xEFL,(-3L),0x62L,(-1L),0L},{0x7DL,0L,(-1L),9L,5L},{0xE0L,0x30L,0xF9L,5L,(-1L)},{0x7DL,0xE0L,(-1L),0xE0L,0x7DL}},{{0xEFL,0x61L,(-1L),0xF9L,(-3L)},{9L,(-1L),0xF9L,0x62L,(-8L)},{(-8L),0x7DL,(-1L),0x61L,(-3L)},{(-1L),0x62L,0x62L,(-1L),0x7DL},{(-3L),0x62L,(-1L),0L,(-1L)},{0x61L,0x7DL,(-3L),(-4L),5L},{(-1L),(-1L),0x30L,0L,0L},{(-1L),0x61L,(-1L),(-1L),0x82L},{(-1L),0xE0L,(-4L),0x61L,0xF9L}},{{(-1L),0x30L,0x7DL,0x62L,0xEFL},{0x61L,0L,(-4L),0xF9L,(-4L)},{(-3L),(-3L),(-1L),0xE0L,(-4L)},{(-1L),0x82L,0x30L,5L,0xEFL},{(-8L),5L,(-3L),9L,0xF9L},{9L,0x82L,(-1L),(-1L),0x82L},{0xEFL,(-3L),0x62L,(-1L),0L},{0x7DL,0L,(-1L),9L,5L},{0xE0L,0x30L,0xF9L,(-1L),(-1L)}}};
static uint32_t g_74 = 4294967295UL;
static uint32_t g_75 = 0x9292B137L;
static int64_t g_80 = 0xF80AFD421DEF15EDLL;
static int32_t g_96 = 0L;
static volatile struct S1 g_106 = {46,0xA28A71BBL,4405,0x8DL};/* VOLATILE GLOBAL g_106 */
static uint8_t g_111 = 255UL;
static uint32_t g_130 = 1UL;
static volatile struct S0 g_137[6] = {{-3697,2,10,544,2114,1L,1UL,9892,21623},{-3697,2,10,544,2114,1L,1UL,9892,21623},{-3697,2,10,544,2114,1L,1UL,9892,21623},{-3697,2,10,544,2114,1L,1UL,9892,21623},{-3697,2,10,544,2114,1L,1UL,9892,21623},{-3697,2,10,544,2114,1L,1UL,9892,21623}};
static int64_t g_146 = 3L;
static int32_t *g_148[4][2] = {{&g_12[5],&g_12[0]},{&g_12[5],&g_12[0]},{&g_12[5],&g_12[0]},{&g_12[5],&g_12[0]}};
static int32_t ** volatile g_147 = &g_148[2][0];/* VOLATILE GLOBAL g_147 */
static struct S2 g_150 = {0,2885,93,21848,1215,-1L,1450,-108,141,-0};/* VOLATILE GLOBAL g_150 */
static struct S2 * volatile g_151 = &g_150;/* VOLATILE GLOBAL g_151 */
static volatile struct S1 g_155 = {49,1UL,-34631,0x9CL};/* VOLATILE GLOBAL g_155 */
static volatile struct S1 g_169[3][7][1] = {{{{9,7UL,-2900,0UL}},{{12,0x968B3883L,42774,9UL}},{{-87,18446744073709551608UL,-10607,255UL}},{{12,0x968B3883L,42774,9UL}},{{9,7UL,-2900,0UL}},{{9,7UL,-2900,0UL}},{{12,0x968B3883L,42774,9UL}}},{{{-87,18446744073709551608UL,-10607,255UL}},{{12,0x968B3883L,42774,9UL}},{{9,7UL,-2900,0UL}},{{9,7UL,-2900,0UL}},{{12,0x968B3883L,42774,9UL}},{{-87,18446744073709551608UL,-10607,255UL}},{{12,0x968B3883L,42774,9UL}}},{{{9,7UL,-2900,0UL}},{{9,7UL,-2900,0UL}},{{12,0x968B3883L,42774,9UL}},{{-87,18446744073709551608UL,-10607,255UL}},{{12,0x968B3883L,42774,9UL}},{{9,7UL,-2900,0UL}},{{9,7UL,-2900,0UL}}}};
static int32_t ** const  volatile g_183 = (void*)0;/* VOLATILE GLOBAL g_183 */
static volatile struct S0 g_198 = {-866,19,1,-410,2513,-1L,18446744073709551607UL,2263,6063};/* VOLATILE GLOBAL g_198 */
static uint64_t g_202 = 0x48D706CD7918DDF3LL;
static uint32_t g_209 = 1UL;
static int32_t g_227 = 0L;
static int32_t g_251 = 0L;
static uint16_t g_272 = 65535UL;
static int8_t g_289 = 1L;
static uint8_t *g_299 = (void*)0;
static struct S0 g_327 = {-7130,-0,7,-120,3415,0x458279E18D16A7A6LL,0xAF580ACEL,3619,18648};/* VOLATILE GLOBAL g_327 */
static struct S0 * volatile g_326[4] = {&g_327,&g_327,&g_327,&g_327};
static struct S2 g_342 = {-89,-2838,-279,19617,1086,0x78CBL,15714,59,24,-0};/* VOLATILE GLOBAL g_342 */
static volatile struct S2 g_371 = {-82,-4608,346,14170,809,0L,12673,-238,112,0};/* VOLATILE GLOBAL g_371 */
static volatile struct S2 *g_370 = &g_371;
static volatile struct S2 * volatile *g_369 = &g_370;
static volatile struct S0 *g_430 = &g_137[4];
static volatile struct S0 **g_429[4][10] = {{&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430},{&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430},{&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430},{&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430,&g_430}};
static volatile struct S0 ***g_428 = &g_429[1][0];
static const volatile struct S0 g_441 = {6933,-12,9,-193,1531,0x814FE11B2083721ALL,0xF4C93F32L,1472,3622};/* VOLATILE GLOBAL g_441 */
static uint32_t g_490 = 1UL;
static const int32_t *g_502 = &g_96;
static const int32_t **g_501 = &g_502;
static struct S0 g_534 = {7266,-18,5,-101,896,-3L,0xE835F335L,5896,6472};/* VOLATILE GLOBAL g_534 */
static struct S0 g_537[9] = {{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267},{-3055,-21,5,-610,3416,1L,0x82D49297L,5872,21026},{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267},{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267},{-3055,-21,5,-610,3416,1L,0x82D49297L,5872,21026},{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267},{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267},{-3055,-21,5,-610,3416,1L,0x82D49297L,5872,21026},{-1690,-21,0,-302,1440,1L,0x1D4E5813L,916,23267}};
static struct S0 *g_536[1] = {&g_537[6]};
static struct S0 **g_535[9] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
static int16_t *g_545[10][1][2] = {{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}},{{&g_150.f5,&g_150.f5}}};
static int16_t **g_544[9] = {&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1],&g_545[8][0][1]};
static int16_t ***g_543 = &g_544[5];
static volatile struct S2 g_565 = {25,-3220,-122,16656,694,6L,4166,97,44,-1};/* VOLATILE GLOBAL g_565 */
static volatile struct S2 g_566 = {28,-323,-168,19214,952,-1L,13503,251,84,0};/* VOLATILE GLOBAL g_566 */
static volatile struct S0 g_580 = {5166,-7,2,669,2987,0x1932492F2D42228DLL,6UL,10198,13295};/* VOLATILE GLOBAL g_580 */
static volatile struct S0 g_589 = {6169,19,8,612,1264,6L,0xF754E084L,5756,28389};/* VOLATILE GLOBAL g_589 */
static int8_t * const g_592 = &g_289;
static int8_t * const * volatile g_591 = &g_592;/* VOLATILE GLOBAL g_591 */
static struct S2 *g_635[8] = {&g_342,&g_342,&g_342,&g_342,&g_342,&g_342,&g_342,&g_342};
static struct S2 ** volatile g_634 = &g_635[1];/* VOLATILE GLOBAL g_634 */
static int16_t *g_651 = (void*)0;
static volatile struct S2 g_658 = {38,3672,-41,22313,1779,-1L,11445,-101,76,1};/* VOLATILE GLOBAL g_658 */
static volatile struct S1 g_662 = {-6,8UL,-31587,0UL};/* VOLATILE GLOBAL g_662 */
static struct S2 g_675 = {-130,1708,-48,5174,1968,0x893AL,15594,-3,222,1};/* VOLATILE GLOBAL g_675 */
static volatile uint32_t g_692 = 0x3D147730L;/* VOLATILE GLOBAL g_692 */
static struct S1 g_701 = {-5,9UL,41174,0x64L};/* VOLATILE GLOBAL g_701 */
static struct S2 g_702 = {-214,-1924,31,315,156,1L,3069,-65,81,0};/* VOLATILE GLOBAL g_702 */
static struct S2 g_714[1] = {{215,5349,247,17514,1412,-5L,14609,-235,98,0}};
static struct S0 ** volatile g_753 = &g_536[0];/* VOLATILE GLOBAL g_753 */
static volatile uint16_t g_812 = 0xC472L;/* VOLATILE GLOBAL g_812 */
static volatile uint16_t g_813 = 0x7C0DL;/* VOLATILE GLOBAL g_813 */
static volatile uint16_t g_814 = 0xD1CFL;/* VOLATILE GLOBAL g_814 */
static volatile uint16_t g_815 = 65531UL;/* VOLATILE GLOBAL g_815 */
static volatile uint16_t *g_811[6][7] = {{&g_813,(void*)0,&g_815,&g_815,(void*)0,&g_813,(void*)0},{&g_814,&g_813,&g_813,&g_814,(void*)0,&g_814,&g_813},{&g_812,&g_812,&g_813,&g_815,&g_813,&g_812,&g_812},{&g_812,&g_813,&g_815,&g_813,&g_812,&g_812,&g_813},{&g_814,(void*)0,&g_814,&g_813,&g_813,&g_814,(void*)0},{&g_813,(void*)0,&g_815,&g_815,(void*)0,&g_813,(void*)0}};
static volatile uint16_t * volatile *g_810 = &g_811[0][6];
static struct S0 ***g_821 = &g_535[4];
static struct S0 ****g_820 = &g_821;
static struct S0 ***** volatile g_819 = &g_820;/* VOLATILE GLOBAL g_819 */
static volatile struct S2 g_823 = {-222,286,300,1673,1155,-1L,4187,-142,113,1};/* VOLATILE GLOBAL g_823 */
static int8_t ***g_827 = (void*)0;
static int8_t **** const  volatile g_826 = &g_827;/* VOLATILE GLOBAL g_826 */
static int8_t ****g_829 = &g_827;
static int8_t **** volatile * volatile g_828[7] = {&g_829,&g_829,&g_829,&g_829,&g_829,&g_829,&g_829};
static int8_t **** volatile * volatile g_830[5] = {&g_829,&g_829,&g_829,&g_829,&g_829};
static int8_t **** volatile * volatile g_832 = &g_829;/* VOLATILE GLOBAL g_832 */
static struct S2 g_836 = {61,-4621,-148,15167,701,0x5A8EL,2584,109,125,1};/* VOLATILE GLOBAL g_836 */
static struct S2 g_866[6] = {{67,-4220,-142,12001,432,0x672AL,4510,-246,44,0},{8,1667,-313,16040,1643,1L,5367,238,196,-1},{67,-4220,-142,12001,432,0x672AL,4510,-246,44,0},{67,-4220,-142,12001,432,0x672AL,4510,-246,44,0},{8,1667,-313,16040,1643,1L,5367,238,196,-1},{67,-4220,-142,12001,432,0x672AL,4510,-246,44,0}};
static volatile int64_t g_904 = 0L;/* VOLATILE GLOBAL g_904 */
static volatile struct S2 g_923 = {-241,-3211,-18,18539,1220,1L,13560,-230,167,-1};/* VOLATILE GLOBAL g_923 */
static struct S0 g_928[7] = {{4893,0,0,-662,1018,6L,0x796C6068L,6629,25575},{-5135,-11,6,272,773,0xCA4A4289BC064746LL,0xAF06DB58L,167,13333},{4893,0,0,-662,1018,6L,0x796C6068L,6629,25575},{4893,0,0,-662,1018,6L,0x796C6068L,6629,25575},{-5135,-11,6,272,773,0xCA4A4289BC064746LL,0xAF06DB58L,167,13333},{4893,0,0,-662,1018,6L,0x796C6068L,6629,25575},{4893,0,0,-662,1018,6L,0x796C6068L,6629,25575}};
static struct S2 g_954 = {248,3672,10,15785,1399,-10L,14567,3,228,-1};/* VOLATILE GLOBAL g_954 */
static volatile struct S0 g_976 = {-166,-8,8,-328,1651,-1L,0xD3842819L,5446,18921};/* VOLATILE GLOBAL g_976 */
static struct S1 g_993 = {-39,0xA9D59D1AL,7303,5UL};/* VOLATILE GLOBAL g_993 */
static uint16_t g_1002 = 0x54D6L;
static int32_t **g_1007 = &g_148[2][0];
static int32_t **g_1009 = &g_148[3][0];
static int32_t *** volatile g_1008 = &g_1009;/* VOLATILE GLOBAL g_1008 */
static volatile struct S1 *g_1017[9] = {&g_662,&g_662,&g_662,&g_662,&g_662,&g_662,&g_662,&g_662,&g_662};
static volatile struct S1 ** const  volatile g_1016[2] = {&g_1017[3],&g_1017[3]};
static volatile struct S1 g_1026 = {-13,0UL,-6195,6UL};/* VOLATILE GLOBAL g_1026 */
static uint16_t *g_1039 = &g_272;
static uint16_t **g_1038 = &g_1039;
static struct S2 g_1040 = {-196,536,-2,17374,1876,1L,6310,219,45,-0};/* VOLATILE GLOBAL g_1040 */
static int32_t g_1077 = 0xB5AE74F7L;
static int32_t g_1080 = 0xB55188A7L;
static volatile struct S1 g_1083 = {63,0x54D368B0L,1429,0xBEL};/* VOLATILE GLOBAL g_1083 */
static volatile struct S2 g_1084 = {-57,-4628,135,14774,207,0x367DL,15346,247,35,-1};/* VOLATILE GLOBAL g_1084 */
static struct S2 g_1085 = {211,-2889,105,22553,1120,1L,10537,107,143,1};/* VOLATILE GLOBAL g_1085 */
static int32_t ** volatile g_1138 = &g_148[0][1];/* VOLATILE GLOBAL g_1138 */
static struct S1 g_1147 = {40,0UL,42154,0xD4L};/* VOLATILE GLOBAL g_1147 */
static volatile struct S0 g_1169 = {3180,16,9,-311,3339,0L,0UL,10445,6426};/* VOLATILE GLOBAL g_1169 */
static volatile struct S2 g_1182 = {197,4763,-70,720,425,-1L,4211,-161,18,-1};/* VOLATILE GLOBAL g_1182 */
static uint32_t g_1198 = 0UL;
static struct S0 g_1221 = {581,-0,8,679,3700,0x46A4CEB05FE4F10BLL,1UL,10981,25728};/* VOLATILE GLOBAL g_1221 */
static struct S1 g_1228 = {-78,0xAA8508D0L,-11749,252UL};/* VOLATILE GLOBAL g_1228 */
static volatile struct S2 g_1243 = {26,2047,226,15314,1169,1L,8080,-204,34,-0};/* VOLATILE GLOBAL g_1243 */
static struct S2 g_1244 = {203,-3258,-300,3197,719,0x0403L,5347,-173,58,-1};/* VOLATILE GLOBAL g_1244 */
static const uint8_t g_1251 = 4UL;
static volatile struct S2 g_1313[3][2] = {{{-148,-4527,-329,22844,2025,-2L,89,232,80,1},{-148,-4527,-329,22844,2025,-2L,89,232,80,1}},{{-148,-4527,-329,22844,2025,-2L,89,232,80,1},{-148,-4527,-329,22844,2025,-2L,89,232,80,1}},{{-148,-4527,-329,22844,2025,-2L,89,232,80,1},{-148,-4527,-329,22844,2025,-2L,89,232,80,1}}};
static volatile struct S2 g_1341 = {-131,-1135,-235,6808,1829,0x6D10L,12806,175,27,-0};/* VOLATILE GLOBAL g_1341 */
static int16_t *g_1353 = &g_43;
static int16_t ** const g_1352[1] = {&g_1353};
static int16_t ** const *g_1351[10][7][2] = {{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],(void*)0},{(void*)0,&g_1352[0]}},{{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{&g_1352[0],&g_1352[0]},{(void*)0,&g_1352[0]}}};
static int16_t g_1369 = 0xB8B7L;
static volatile struct S0 g_1373 = {-3974,10,0,-365,3419,2L,1UL,8695,6850};/* VOLATILE GLOBAL g_1373 */
static volatile struct S2 g_1388 = {-102,-5141,101,11255,1676,0x8BF7L,5397,-233,88,0};/* VOLATILE GLOBAL g_1388 */
static volatile struct S2 g_1389 = {-233,1139,-124,395,1945,1L,15993,131,185,-0};/* VOLATILE GLOBAL g_1389 */
static volatile struct S1 g_1398 = {88,1UL,-32136,1UL};/* VOLATILE GLOBAL g_1398 */
static volatile struct S2 g_1399 = {-81,1229,-338,505,1662,0x4031L,8062,-92,131,0};/* VOLATILE GLOBAL g_1399 */
static struct S1 g_1408[2][6] = {{{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL}},{{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL},{54,0xF21A10BBL,45156,1UL}}};
static const int16_t *g_1445 = &g_866[2].f5;
static const int16_t **g_1444 = &g_1445;
static const int16_t *** const g_1443 = &g_1444;
static const int16_t *** const *g_1442 = &g_1443;
static const int8_t g_1463 = 0xEEL;
static volatile uint8_t *g_1471 = &g_662.f3;
static volatile uint8_t **g_1470 = &g_1471;
static volatile uint8_t ** volatile * volatile g_1469 = &g_1470;/* VOLATILE GLOBAL g_1469 */
static struct S2 g_1477 = {-144,-3600,76,2828,1059,8L,15817,-57,127,1};/* VOLATILE GLOBAL g_1477 */
static const volatile struct S2 g_1485[7][3][1] = {{{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}}},{{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}}},{{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}}},{{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}}},{{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}}},{{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}}},{{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}},{{-128,-2275,-332,22728,977,0xC712L,12608,-4,43,-1}},{{-21,-1529,-77,5870,904,0L,4945,-73,96,-0}}}};
static volatile uint8_t g_1556 = 1UL;/* VOLATILE GLOBAL g_1556 */
static const int8_t **g_1573 = (void*)0;
static volatile struct S0 g_1601 = {-2374,16,10,670,2383,-1L,0x78C83DE0L,3551,5486};/* VOLATILE GLOBAL g_1601 */
static int64_t g_1626 = 0xAF9C65D5EBA0F3DALL;
static int16_t g_1653 = 0x9A80L;
static struct S2 g_1696 = {-255,-1465,-235,6182,940,-2L,5175,-234,40,-1};/* VOLATILE GLOBAL g_1696 */
static int32_t g_1768 = 0x4D0BE603L;
static volatile struct S1 g_1775 = {44,0xADA0428FL,17676,0UL};/* VOLATILE GLOBAL g_1775 */
static const int64_t ** volatile g_1777 = (void*)0;/* VOLATILE GLOBAL g_1777 */
static const int64_t ** volatile * volatile g_1778 = &g_1777;/* VOLATILE GLOBAL g_1778 */
static int64_t *g_1789 = &g_146;
static int64_t *g_1790 = &g_80;
static uint8_t g_1827[1] = {2UL};
static volatile struct S2 g_1836 = {-91,4880,301,18509,1147,-10L,3864,-132,117,0};/* VOLATILE GLOBAL g_1836 */
static struct S1 g_1839 = {-51,5UL,22910,9UL};/* VOLATILE GLOBAL g_1839 */
static struct S0 *****g_1861[5][5] = {{&g_820,&g_820,&g_820,&g_820,&g_820},{&g_820,&g_820,&g_820,&g_820,&g_820},{(void*)0,(void*)0,&g_820,&g_820,&g_820},{(void*)0,&g_820,&g_820,&g_820,&g_820},{&g_820,&g_820,&g_820,(void*)0,&g_820}};
static volatile struct S2 g_1864[9] = {{132,3387,-311,8627,637,0x092DL,11221,-162,107,-1},{138,1640,-133,10560,1435,-9L,9922,58,121,-0},{132,3387,-311,8627,637,0x092DL,11221,-162,107,-1},{138,1640,-133,10560,1435,-9L,9922,58,121,-0},{132,3387,-311,8627,637,0x092DL,11221,-162,107,-1},{138,1640,-133,10560,1435,-9L,9922,58,121,-0},{132,3387,-311,8627,637,0x092DL,11221,-162,107,-1},{138,1640,-133,10560,1435,-9L,9922,58,121,-0},{132,3387,-311,8627,637,0x092DL,11221,-162,107,-1}};
static int32_t * volatile g_1878[6] = {&g_227,&g_227,&g_227,&g_227,&g_227,&g_227};
static uint8_t * volatile * volatile g_1893[10][1][6] = {{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}},{{&g_299,&g_299,&g_299,&g_299,&g_299,&g_299}}};
static uint8_t * volatile * volatile * volatile g_1892 = &g_1893[8][0][5];/* VOLATILE GLOBAL g_1892 */
static uint8_t * volatile * volatile * volatile *g_1891 = &g_1892;
static uint8_t * const *g_1896[5][3][4] = {{{&g_299,&g_299,(void*)0,&g_299},{&g_299,&g_299,&g_299,(void*)0},{&g_299,(void*)0,(void*)0,&g_299}},{{&g_299,(void*)0,&g_299,(void*)0},{(void*)0,&g_299,&g_299,&g_299},{&g_299,&g_299,(void*)0,&g_299}},{{&g_299,&g_299,&g_299,(void*)0},{&g_299,(void*)0,(void*)0,&g_299},{&g_299,(void*)0,&g_299,(void*)0}},{{(void*)0,&g_299,&g_299,&g_299},{&g_299,&g_299,(void*)0,&g_299},{&g_299,&g_299,&g_299,(void*)0}},{{&g_299,(void*)0,(void*)0,&g_299},{&g_299,(void*)0,&g_299,(void*)0},{(void*)0,&g_299,&g_299,&g_299}}};
static uint8_t * const **g_1895 = &g_1896[2][2][3];
static uint8_t * const ***g_1894 = &g_1895;
static struct S2 g_1944[7][8] = {{{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1}},{{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{159,-767,140,2338,1000,0xE55AL,12974,28,247,1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{-207,2320,-328,327,324,1L,11523,-221,6,0},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{159,-767,140,2338,1000,0xE55AL,12974,28,247,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-207,2320,-328,327,324,1L,11523,-221,6,0}},{{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1}},{{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1}},{{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-207,2320,-328,327,324,1L,11523,-221,6,0},{-207,2320,-328,327,324,1L,11523,-221,6,0},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1},{-79,-3577,222,13131,353,-9L,9871,153,179,0},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{-79,-3577,222,13131,353,-9L,9871,153,179,0},{67,147,284,6272,1558,0x4EB0L,2662,-183,178,-1}},{{-207,2320,-328,327,324,1L,11523,-221,6,0},{-79,-3577,222,13131,353,-9L,9871,153,179,0},{-207,2320,-328,327,324,1L,11523,-221,6,0},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{-64,-415,247,11930,155,0x03D7L,15597,-222,128,0},{-207,2320,-328,327,324,1L,11523,-221,6,0}},{{-79,-3577,222,13131,353,-9L,9871,153,179,0},{-79,-3577,222,13131,353,-9L,9871,153,179,0},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{159,-767,140,2338,1000,0xE55AL,12974,28,247,1},{178,1413,117,18946,84,0xF8F4L,6057,131,128,1},{-156,-5591,-298,2487,677,0xDBE1L,15244,-211,238,1},{-79,-3577,222,13131,353,-9L,9871,153,179,0}}};
static struct S1 g_1946[4][4][8] = {{{{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL},{31,0UL,-8786,0UL},{-67,18446744073709551615UL,40869,0x32L},{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL}},{{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL}},{{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL}},{{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L}}},{{{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L}},{{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL},{31,0UL,-8786,0UL},{-67,18446744073709551615UL,40869,0x32L},{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL}},{{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL}},{{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL}}},{{{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L}},{{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L}},{{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL},{31,0UL,-8786,0UL},{-67,18446744073709551615UL,40869,0x32L},{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL}},{{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL}}},{{{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL}},{{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L},{31,0UL,-8786,0UL},{67,0x7D51F7B9L,36484,0x88L},{-47,0UL,29922,255UL},{-47,0UL,29922,255UL},{67,0x7D51F7B9L,36484,0x88L}},{{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L},{-54,2UL,-16835,8UL},{-67,18446744073709551615UL,40869,0x32L},{-54,2UL,-16835,8UL},{67,0x7D51F7B9L,36484,0x88L},{67,0x7D51F7B9L,36484,0x88L}},{{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL},{31,0UL,-8786,0UL},{-67,18446744073709551615UL,40869,0x32L},{67,0x7D51F7B9L,36484,0x88L},{-67,18446744073709551615UL,40869,0x32L},{31,0UL,-8786,0UL}}}};
static struct S1 *g_1945 = &g_1946[2][2][7];
static struct S2 g_1966 = {-212,-5195,-293,17659,40,0L,12097,32,90,0};/* VOLATILE GLOBAL g_1966 */
static volatile struct S0 g_1980 = {5640,1,4,360,2493,-7L,0x84E9B2A8L,10329,31907};/* VOLATILE GLOBAL g_1980 */
static struct S1 g_2033[3] = {{53,0UL,-22447,0xEAL},{53,0UL,-22447,0xEAL},{53,0UL,-22447,0xEAL}};
static const struct S2 g_2089 = {-172,-5491,-287,1977,1197,0x3469L,1977,-169,10,-1};/* VOLATILE GLOBAL g_2089 */
static const struct S2 g_2090 = {-222,4633,209,22487,360,0xBA97L,2681,13,34,-1};/* VOLATILE GLOBAL g_2090 */


/* --- FORWARD DECLARATIONS --- */
static uint8_t  func_1(void);
static struct S2  func_2(uint32_t  p_3, uint8_t  p_4);
static const struct S2  func_7(int8_t  p_8, int32_t  p_9, int8_t  p_10, int8_t  p_11);
static int32_t  func_13(int16_t  p_14, int64_t  p_15, uint32_t  p_16, int32_t  p_17);
static int16_t  func_18(uint8_t  p_19, uint64_t  p_20, int16_t  p_21);
static uint64_t  func_30(uint16_t  p_31, int64_t * p_32, uint32_t  p_33, uint16_t  p_34);
static uint16_t  func_35(int16_t  p_36, uint32_t  p_37, uint32_t  p_38, int64_t * p_39, int16_t  p_40);
static struct S2  func_50(int32_t  p_51, int16_t * p_52);
static int16_t * func_76(int64_t * p_77, uint8_t  p_78);
static uint16_t  func_87(const uint32_t  p_88, uint32_t * p_89, int8_t * p_90, uint32_t * p_91, int32_t  p_92);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_12 g_29 g_59 g_75 g_1696 g_1080 g_1039 g_272 g_1085 g_543 g_544 g_545 g_369 g_370 g_1009 g_148 g_501 g_342.f7 g_96 g_1147.f1 g_1789 g_146 g_1790 g_1980 g_1626 g_209 g_327.f4 g_1445 g_866.f5 g_1147.f3 g_227 g_1469 g_1470 g_1471 g_662.f3 g_2033 g_591 g_592 g_502 g_1038 g_70 g_147 g_1007 g_2089 g_2090 g_1827 g_634 g_635 g_490 g_151 g_150 g_1944.f1
 * writes: g_29 g_43 g_59 g_70 g_74 g_75 g_1080 g_371 g_502 g_1147.f1 g_146 g_80 g_1626 g_96 g_209 g_1147.f3 g_227 g_150.f5 g_148 g_12 g_289 g_272 g_635 g_490 g_1944.f1
 */
static uint8_t  func_1(void)
{ /* block id: 0 */
    const uint8_t l_24 = 2UL;
    int16_t l_27 = 0x26DEL;
    int64_t *l_28 = &g_29;
    int32_t l_41 = 0x2C643D43L;
    int16_t *l_42 = &g_43;
    int64_t l_44[6][3][9] = {{{9L,9L,0xD8AAF453288EE1EFLL,0x797B69E0D94485E0LL,0xCCD29D3EAFCA19ABLL,0xF83BF0B62E56CDAALL,9L,0L,0x3BE618B2576953C5LL},{0xB704DCF746B3257BLL,0xAFE497D6A58390A3LL,(-9L),0x320AF47DFB07D6E1LL,3L,(-1L),(-1L),3L,0x320AF47DFB07D6E1LL},{0x2EEDF21916DC91E8LL,0x6F8616691CFE0C2DLL,0x775DAE11CD4EE3B9LL,0xD8AAF453288EE1EFLL,0x7147D86C3CE99C24LL,5L,9L,0x3BE618B2576953C5LL,6L}},{{0x30C1ABDDA6A1E05BLL,(-1L),0xC80454F8DAE6E92ELL,6L,0x2215ACA64A9B53ABLL,0x320AF47DFB07D6E1LL,0L,8L,0xAFE497D6A58390A3LL},{5L,0L,0x6A420A61B3E233DFLL,0xD8AAF453288EE1EFLL,0xD8AAF453288EE1EFLL,0x6A420A61B3E233DFLL,0L,5L,0x775DAE11CD4EE3B9LL},{0x5718A84D2376568CLL,0xCA56B74084DAEA48LL,0x8686B464BBCDFA81LL,(-1L),(-10L),0xAFE497D6A58390A3LL,0xC80454F8DAE6E92ELL,3L,0x9D6B80F4B430F0C8LL}},{{0L,0xCCD29D3EAFCA19ABLL,0x3BE618B2576953C5LL,0x6A420A61B3E233DFLL,0x775DAE11CD4EE3B9LL,9L,1L,9L,0x775DAE11CD4EE3B9LL},{1L,0L,0L,1L,0xB704DCF746B3257BLL,0x2215ACA64A9B53ABLL,8L,0x5718A84D2376568CLL,0xAFE497D6A58390A3LL},{0x6A420A61B3E233DFLL,0x3BE618B2576953C5LL,0xCCD29D3EAFCA19ABLL,0L,0x6F8616691CFE0C2DLL,0xCB4886636311489DLL,0x7147D86C3CE99C24LL,1L,6L}},{{(-1L),0x8686B464BBCDFA81LL,0xCA56B74084DAEA48LL,0x5718A84D2376568CLL,0xB704DCF746B3257BLL,0x5718A84D2376568CLL,0xCA56B74084DAEA48LL,0x8686B464BBCDFA81LL,(-1L)},{0xD8AAF453288EE1EFLL,0x6A420A61B3E233DFLL,0L,5L,0x775DAE11CD4EE3B9LL,0xF83BF0B62E56CDAALL,0x6F8616691CFE0C2DLL,(-1L),0x2EEDF21916DC91E8LL},{6L,0xC80454F8DAE6E92ELL,(-1L),0x30C1ABDDA6A1E05BLL,(-10L),(-2L),1L,1L,(-2L)}},{{0xD8AAF453288EE1EFLL,0x775DAE11CD4EE3B9LL,0x6F8616691CFE0C2DLL,0x775DAE11CD4EE3B9LL,0xD8AAF453288EE1EFLL,0x7147D86C3CE99C24LL,5L,9L,0x3BE618B2576953C5LL},{(-1L),0x320AF47DFB07D6E1LL,0xBE3E2CA52C43DA4ALL,0L,0x2215ACA64A9B53ABLL,(-9L),0xAFE497D6A58390A3LL,0x30C1ABDDA6A1E05BLL,(-9L)},{0x6A420A61B3E233DFLL,9L,0xCB4886636311489DLL,0xF83BF0B62E56CDAALL,0x7147D86C3CE99C24LL,0x7147D86C3CE99C24LL,0xF83BF0B62E56CDAALL,0xCB4886636311489DLL,9L}},{{1L,(-9L),0xB704DCF746B3257BLL,(-9L),0x9D6B80F4B430F0C8LL,(-2L),0x8686B464BBCDFA81LL,0x320AF47DFB07D6E1LL,8L},{0L,1L,0x7147D86C3CE99C24LL,0x6F8616691CFE0C2DLL,5L,0xF83BF0B62E56CDAALL,(-4L),0x2EEDF21916DC91E8LL,(-4L)},{0x5718A84D2376568CLL,(-9L),3L,3L,(-9L),0x5718A84D2376568CLL,0xBE3E2CA52C43DA4ALL,6L,(-10L)}}};
    int32_t l_2040 = 0x3046699CL;
    int32_t l_2041 = 3L;
    int32_t *l_2109[9][7][4] = {{{(void*)0,&g_96,(void*)0,(void*)0},{&g_96,&g_96,&g_1080,&g_96},{&g_96,(void*)0,(void*)0,&g_96},{(void*)0,&g_96,(void*)0,(void*)0},{&g_96,&g_96,&g_1080,&g_96},{&g_96,(void*)0,(void*)0,&g_96},{(void*)0,&g_96,(void*)0,(void*)0}},{{&g_96,&g_96,&g_1080,&g_96},{&g_96,(void*)0,(void*)0,&g_96},{(void*)0,&g_96,(void*)0,(void*)0},{&g_96,&g_96,&g_1080,&g_96},{&g_96,(void*)0,(void*)0,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0}},{{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0}},{{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080}},{{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0}},{{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0}},{{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080}},{{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0}},{{(void*)0,&g_1080,&g_1080,(void*)0},{&g_1080,(void*)0,&g_1080,&g_1080},{(void*)0,(void*)0,&g_96,(void*)0},{(void*)0,&g_1080,&g_96,&g_1080},{&g_96,&g_1080,&g_96,&g_96},{&g_1080,&g_1080,(void*)0,&g_1080},{&g_1080,&g_96,&g_96,&g_1080}}};
    int32_t l_2110 = (-10L);
    volatile struct S2 * volatile l_2113 = &g_658;/* VOLATILE GLOBAL l_2113 */
    int i, j, k;
    g_1944[4][4].f1 ^= (l_2110 = (func_2((((((safe_mod_func_int8_t_s_s((func_7(g_12[0], (l_2040 = func_13(func_18((safe_add_func_int64_t_s_s(0x6CA0CEC51938D10FLL, ((*l_28) &= ((((g_12[0] , l_24) ^ g_12[0]) | (safe_add_func_uint8_t_u_u(l_27, 3UL))) ^ l_24)))), func_30(func_35(((*l_42) = l_41), g_12[0], l_27, l_28, l_44[1][2][4]), &g_1626, l_44[1][2][4], (*g_1039)), l_27), l_44[1][2][4], g_342.f7, (**g_1009))), l_41, l_2041) , 1L), l_41)) == l_2041) | l_24) ^ g_1827[0]) & l_44[5][1][7]), l_24) , 0x747682D1L));
    (*g_501) = (void*)0;
    (*g_501) = (*g_1007);
    for (g_272 = 0; (g_272 <= 60); ++g_272)
    { /* block id: 998 */
        uint32_t l_2114 = 6UL;
        l_2113 = (*g_369);
        l_2114++;
    }
    return (*g_1471);
}


/* ------------------------------------------ */
/* 
 * reads : g_634 g_635 g_490 g_151 g_150
 * writes: g_635 g_490
 */
static struct S2  func_2(uint32_t  p_3, uint8_t  p_4)
{ /* block id: 983 */
    struct S2 **l_2091 = &g_635[7];
    int32_t l_2096 = (-1L);
    int32_t l_2102[4][3] = {{0x83A99FBDL,(-2L),0x83A99FBDL},{0L,(-1L),0L},{0x83A99FBDL,(-2L),0x83A99FBDL},{0L,(-1L),0L}};
    int i, j;
    (*l_2091) = (*g_634);
    for (g_490 = 28; (g_490 < 8); g_490 = safe_sub_func_uint32_t_u_u(g_490, 1))
    { /* block id: 987 */
        int8_t l_2094 = 0x97L;
        int32_t *l_2095 = (void*)0;
        int32_t *l_2097 = (void*)0;
        int32_t *l_2098 = &l_2096;
        int32_t *l_2099 = &g_1080;
        int32_t *l_2100 = &g_96;
        int32_t *l_2101[1][1];
        uint32_t l_2103 = 1UL;
        uint64_t l_2106 = 3UL;
        int i, j;
        for (i = 0; i < 1; i++)
        {
            for (j = 0; j < 1; j++)
                l_2101[i][j] = (void*)0;
        }
        ++l_2103;
        --l_2106;
    }
    return (*g_151);
}


/* ------------------------------------------ */
/* 
 * reads : g_1007 g_148 g_1469 g_1470 g_1471 g_662.f3 g_592 g_1038 g_1039 g_272 g_1789 g_1696 g_370 g_501 g_2089 g_2090
 * writes: g_96 g_12 g_289 g_148 g_272 g_635 g_146 g_371 g_502
 */
static const struct S2  func_7(int8_t  p_8, int32_t  p_9, int8_t  p_10, int8_t  p_11)
{ /* block id: 967 */
    const uint16_t l_2060 = 0xE83BL;
    uint16_t l_2061 = 0xC77FL;
    int32_t l_2084[4] = {0xE7A5B985L,0xE7A5B985L,0xE7A5B985L,0xE7A5B985L};
    int32_t l_2085 = (-3L);
    uint32_t l_2086[2][4][6] = {{{18446744073709551609UL,0xF6C93ECDL,1UL,0xF6C93ECDL,18446744073709551609UL,1UL},{0xF6C93ECDL,18446744073709551609UL,1UL,1UL,1UL,1UL},{1UL,1UL,1UL,18446744073709551609UL,0xF6C93ECDL,1UL},{18446744073709551609UL,0xF6C93ECDL,1UL,0xF6C93ECDL,18446744073709551609UL,1UL}},{{0xF6C93ECDL,18446744073709551609UL,1UL,1UL,1UL,1UL},{1UL,1UL,1UL,18446744073709551609UL,0xF6C93ECDL,1UL},{18446744073709551609UL,0xF6C93ECDL,1UL,0xF6C93ECDL,18446744073709551609UL,1UL},{0xF6C93ECDL,18446744073709551609UL,1UL,1UL,1UL,1UL}}};
    int i, j, k;
    (**g_1007) = p_10;
    if ((!(((safe_unary_minus_func_uint16_t_u(p_11)) & (safe_mul_func_int16_t_s_s((safe_add_func_int8_t_s_s(((*g_592) = ((0xADFEA026L >= 7L) | (safe_mul_func_uint8_t_u_u((safe_lshift_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u((p_10 , (***g_1469)), (safe_sub_func_uint32_t_u_u((+0x318FL), (+p_9))))), (safe_lshift_func_int8_t_s_s(((p_9 <= (l_2060 > 0xE3E6L)) == p_10), 7)))), 255UL)))), p_9)), l_2061))) != l_2061)))
    { /* block id: 970 */
        int32_t *l_2062[7][7][5] = {{{&g_1077,&g_1077,(void*)0,&g_1080,&g_12[0]},{&g_1080,(void*)0,&g_1077,&g_12[0],(void*)0},{&g_1077,&g_1080,(void*)0,&g_12[7],&g_12[0]},{&g_1077,(void*)0,&g_1080,(void*)0,&g_1077},{&g_96,&g_1077,(void*)0,&g_227,&g_1077},{&g_1077,(void*)0,(void*)0,&g_1077,&g_12[0]},{&g_1077,&g_1080,&g_1077,&g_1077,&g_227}},{{&g_1080,&g_1077,&g_227,&g_1077,&g_1077},{&g_1077,&g_1080,&g_96,&g_1077,&g_96},{&g_12[0],&g_1080,&g_1080,&g_1077,(void*)0},{(void*)0,&g_12[7],&g_12[0],&g_227,&g_1077},{(void*)0,&g_12[9],&g_227,(void*)0,&g_12[0]},{&g_1077,&g_12[7],(void*)0,&g_12[7],&g_1077},{&g_1080,&g_1080,(void*)0,&g_12[0],&g_12[0]}},{{&g_1077,&g_1080,(void*)0,&g_1080,&g_12[0]},{(void*)0,&g_1077,&g_1080,&g_1080,&g_12[0]},{&g_96,&g_1080,&g_96,&g_227,&g_1077},{&g_12[0],(void*)0,&g_1077,&g_12[0],&g_12[0]},{&g_227,&g_1077,&g_1077,&g_1080,&g_1077},{&g_1080,(void*)0,&g_1077,&g_1077,(void*)0},{&g_12[0],&g_1080,&g_96,&g_12[7],&g_96}},{{&g_1077,(void*)0,&g_1080,(void*)0,&g_1077},{(void*)0,&g_1077,(void*)0,&g_227,(void*)0},{&g_12[9],&g_1077,&g_1080,(void*)0,&g_1077},{&g_96,&g_1080,&g_1077,(void*)0,&g_96},{&g_1077,(void*)0,&g_227,&g_1077,&g_12[9]},{(void*)0,&g_1080,&g_12[0],(void*)0,&g_12[0]},{&g_1080,&g_1080,&g_1080,(void*)0,&g_12[0]}},{{&g_227,&g_227,&g_227,&g_227,&g_96},{&g_12[0],&g_1080,&g_227,&g_12[0],&g_1077},{(void*)0,&g_227,&g_227,&g_227,(void*)0},{&g_1077,&g_1080,&g_1080,(void*)0,&g_1080},{(void*)0,&g_1080,(void*)0,&g_1080,&g_227},{&g_12[0],(void*)0,&g_1080,&g_1080,&g_1080},{&g_1080,&g_1080,&g_1080,&g_227,(void*)0}},{{&g_1080,&g_1077,(void*)0,&g_227,&g_1077},{&g_96,(void*)0,&g_1077,&g_1080,&g_96},{&g_1077,&g_1077,(void*)0,&g_1077,&g_12[0]},{&g_12[0],&g_1080,&g_1080,&g_227,&g_12[0]},{&g_12[9],&g_12[0],&g_1080,&g_1077,&g_12[9]},{&g_227,(void*)0,(void*)0,&g_227,&g_96},{&g_12[9],&g_1080,&g_1080,&g_12[9],&g_1077}},{{&g_12[0],&g_1080,&g_227,(void*)0,(void*)0},{&g_1077,&g_12[9],&g_227,(void*)0,&g_12[9]},{&g_96,&g_1080,&g_227,(void*)0,&g_227},{&g_1080,&g_227,&g_1080,&g_12[9],&g_12[0]},{&g_1080,&g_227,&g_12[0],&g_227,&g_12[0]},{&g_12[0],&g_1077,&g_227,&g_1077,&g_1077},{(void*)0,&g_227,&g_1077,&g_227,(void*)0}}};
        int64_t l_2063 = 0xDCBA93E3F5A7A75ALL;
        struct S2 *l_2082[10] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
        struct S2 **l_2083 = &g_635[1];
        int16_t *l_2087 = &g_1085.f5;
        int i, j, k;
        (*g_1007) = l_2062[5][4][0];
        (*g_370) = (l_2063 , func_50((safe_add_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u((((*g_1789) = ((((safe_mod_func_int64_t_s_s((safe_sub_func_int32_t_s_s((safe_div_func_uint64_t_u_u((safe_rshift_func_uint8_t_u_s((65535UL ^ (l_2060 <= ((l_2061 , (safe_mod_func_uint32_t_u_u((0xFC8C377FL != p_11), 0x3FF9C57FL))) == (l_2085 ^= (((0xBBL && ((safe_rshift_func_uint16_t_u_u((--(**g_1038)), 15)) <= (l_2084[2] = (((*l_2083) = l_2082[1]) != (void*)0)))) == 0x6FD32FAA63A172F1LL) || p_8))))), l_2086[1][0][2])), 18446744073709551615UL)), 0xC97804E3L)), l_2086[1][0][2])) , p_9) < 0UL) >= p_11)) || 0x259696208B9B0A51LL), 9)), p_10)), l_2087));
    }
    else
    { /* block id: 978 */
        int32_t *l_2088 = &l_2085;
        (*g_501) = l_2088;
        return g_2089;
    }
    return g_2090;
}


/* ------------------------------------------ */
/* 
 * reads : g_1147.f1 g_1789 g_146 g_1790 g_1980 g_1626 g_1080 g_209 g_96 g_327.f4 g_1445 g_866.f5 g_1147.f3 g_29 g_227 g_1469 g_1470 g_1471 g_662.f3 g_2033 g_591 g_592 g_543 g_544 g_545 g_1039 g_272 g_502 g_12 g_1038 g_70 g_147 g_148 g_1009
 * writes: g_1147.f1 g_146 g_80 g_1626 g_96 g_209 g_1147.f3 g_1080 g_29 g_227 g_150.f5 g_43 g_148
 */
static int32_t  func_13(int16_t  p_14, int64_t  p_15, uint32_t  p_16, int32_t  p_17)
{ /* block id: 930 */
    uint64_t l_1973[3][10] = {{18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL},{18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL},{18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL,0x963391E61C0C7855LL,0x963391E61C0C7855LL,18446744073709551610UL,18446744073709551610UL}};
    const int8_t l_1985 = 1L;
    int32_t l_1994[6][2] = {{(-6L),(-6L)},{1L,(-6L)},{(-6L),1L},{(-6L),(-6L)},{1L,(-6L)},{(-6L),1L}};
    int32_t l_2004[10] = {(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L)};
    int i, j;
    for (g_1147.f1 = 0; (g_1147.f1 <= 1); g_1147.f1 += 1)
    { /* block id: 933 */
        int32_t *l_1969 = &g_1080;
        int32_t *l_1970 = &g_96;
        int32_t *l_1971 = &g_1080;
        int32_t *l_1972[3];
        uint64_t l_1983 = 0x380970CB5578EF99LL;
        int64_t *l_1984 = &g_1626;
        uint32_t *l_1993 = &g_209;
        uint8_t l_2034 = 251UL;
        int32_t l_2036 = (-3L);
        uint32_t l_2037 = 0x12DD267AL;
        int i;
        for (i = 0; i < 3; i++)
            l_1972[i] = &g_1077;
        ++l_1973[0][9];
        p_17 = (((*l_1993) = (safe_div_func_uint32_t_u_u((safe_lshift_func_uint16_t_u_u(((((*g_1790) = ((*g_1789) = (*g_1789))) > (g_1980 , (safe_sub_func_int64_t_s_s(((*l_1984) |= l_1983), (*l_1969))))) <= g_209), 6)), ((l_1985 | 0x0427L) & ((safe_unary_minus_func_int64_t_s((((*l_1970) = (safe_sub_func_int16_t_s_s(((safe_rshift_func_uint16_t_u_u((((safe_rshift_func_int8_t_s_u(0xC9L, 4)) ^ (((p_14 , (*l_1970)) , 4294967294UL) == g_327.f4)) >= 0xDE21L), (*l_1969))) >= p_16), l_1973[1][7]))) , l_1973[0][0]))) | (*l_1971)))))) != p_17);
        if (l_1994[0][0])
            break;
        (*l_1970) = (safe_lshift_func_int8_t_s_u(0x27L, (safe_add_func_int16_t_s_s((((safe_lshift_func_uint16_t_u_s((safe_mul_func_uint16_t_u_u(1UL, 1UL)), 13)) > p_17) >= p_14), (*g_1445)))));
        for (g_1147.f3 = 1; (g_1147.f3 <= 5); g_1147.f3 += 1)
        { /* block id: 945 */
            int32_t l_2003 = (-1L);
            int32_t l_2005[5][1] = {{0L},{0x256A9EF7L},{0L},{0x256A9EF7L},{0L}};
            uint64_t l_2006 = 0xE360DE5741311E2DLL;
            int i, j;
            ++l_2006;
            (*l_1971) = ((*l_1970) ^= ((void*)0 == &g_866[(g_1147.f1 + 4)]));
            for (g_29 = 0; (g_29 <= 1); g_29 += 1)
            { /* block id: 951 */
                uint32_t l_2009 = 4294967295UL;
                if (l_2009)
                    break;
                for (g_227 = 4; (g_227 >= 0); g_227 -= 1)
                { /* block id: 955 */
                    int8_t *l_2032[1];
                    int64_t l_2035 = 1L;
                    int i;
                    for (i = 0; i < 1; i++)
                        l_2032[i] = &g_289;
                    l_2036 |= (+(safe_div_func_int32_t_s_s((((*l_1971) > ((safe_mod_func_int8_t_s_s((safe_mul_func_int8_t_s_s((safe_mul_func_int16_t_s_s((((safe_sub_func_uint64_t_u_u(((***g_1469) || (((((!65535UL) == (((((*l_1993) = p_16) < (safe_rshift_func_uint8_t_u_u((safe_mod_func_int16_t_s_s(((***g_543) = (((safe_sub_func_uint16_t_u_u(p_14, 0L)) < (safe_lshift_func_uint16_t_u_s((l_2032[0] == (g_2033[2] , (*g_591))), 14))) ^ 18446744073709551615UL)), 9L)), 3))) != 0x23L) > (*g_1039))) , 0x9421A0E5L) & (*g_502)) || (*l_1970))), 0x2888A0E7B2E1D86ELL)) , (*l_1971)) | l_2034), (**g_1038))), l_2035)), 0x9AL)) , 65526UL)) || 2UL), g_70[1][6][3])));
                    (*g_1009) = (*g_147);
                }
            }
            l_2037++;
        }
    }
    return l_1973[0][9];
}


/* ------------------------------------------ */
/* 
 * reads : g_1009 g_148 g_501
 * writes: g_502
 */
static int16_t  func_18(uint8_t  p_19, uint64_t  p_20, int16_t  p_21)
{ /* block id: 926 */
    uint8_t **** const *l_1968 = (void*)0;
    l_1968 = l_1968;
    (*g_501) = (*g_1009);
    return p_20;
}


/* ------------------------------------------ */
/* 
 * reads : g_1080 g_1085 g_543 g_544 g_545 g_1696 g_369 g_370
 * writes: g_1080 g_371
 */
static uint64_t  func_30(uint16_t  p_31, int64_t * p_32, uint32_t  p_33, uint16_t  p_34)
{ /* block id: 790 */
    uint32_t l_1709 = 0x7A33DC09L;
    uint16_t l_1714[1];
    struct S2 *l_1725 = &g_1085;
    int32_t l_1730 = 0xA898E8ACL;
    uint64_t l_1737 = 0x0293F0F051BDE3FBLL;
    int32_t l_1754 = 0x3A0E05E0L;
    int32_t l_1759 = 0x8381EDE4L;
    int32_t l_1762 = 0x6FE3FF1DL;
    int32_t l_1763 = 7L;
    int32_t l_1764 = 4L;
    int32_t l_1765 = 2L;
    int32_t l_1766[1][10];
    const struct S1 **l_1793 = (void*)0;
    struct S1 *l_1795 = &g_993;
    struct S1 **l_1794 = &l_1795;
    struct S0 *****l_1860 = &g_820;
    int16_t ***l_1869[9] = {&g_544[4],&g_544[4],&g_544[4],&g_544[4],&g_544[4],&g_544[4],&g_544[4],&g_544[4],&g_544[4]};
    uint32_t l_1927 = 1UL;
    int i, j;
    for (i = 0; i < 1; i++)
        l_1714[i] = 0x5602L;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 10; j++)
            l_1766[i][j] = 0x35D28670L;
    }
    for (g_1080 = 0; (g_1080 < 9); g_1080 = safe_add_func_int8_t_s_s(g_1080, 7))
    { /* block id: 793 */
        int16_t **l_1710[3];
        int32_t l_1711[4][6][7] = {{{0x5C6AA4B2L,(-10L),0L,0x73737CE2L,4L,0L,4L},{6L,(-1L),(-1L),6L,0x91F9AC19L,0L,0xA37B6947L},{0x607A2BF2L,0xD49D4B8DL,0xE95FBF01L,0x4FB0D70CL,0x5C6AA4B2L,(-3L),(-7L)},{4L,0x5C6AA4B2L,0L,1L,0xD49D4B8DL,0x81F44558L,0xA37B6947L},{1L,0x91F9AC19L,0x7E178E3FL,0L,(-1L),0x7E178E3FL,4L},{0x53F91738L,4L,0x3D0EB203L,7L,(-10L),0x53F91738L,(-3L)}},{{0x07443308L,0x5C6AA4B2L,(-5L),6L,0x63DE3400L,(-2L),0L},{0x096DD5E3L,(-1L),0x20F70AF1L,(-1L),0xE95FBF01L,(-7L),1L},{(-1L),0L,(-1L),(-1L),0xD49D4B8DL,(-7L),0xB0F6A5B2L},{3L,(-10L),2L,1L,0xA37B6947L,(-2L),(-10L)},{0x5C6AA4B2L,(-3L),0L,0x838BF04EL,5L,0x53F91738L,0xC5A2A477L},{(-1L),1L,0x53F91738L,0x7E178E3FL,0xC5A2A477L,0x7E178E3FL,0x53F91738L}},{{0xD49D4B8DL,0xD49D4B8DL,0L,0x73737CE2L,0L,0x81F44558L,1L},{0x096DD5E3L,0x20F70AF1L,0L,0L,(-1L),(-3L),1L},{0x60BD0393L,0x0895DF4AL,0x7E178E3FL,0x20F70AF1L,0L,0L,5L},{0x5C6AA4B2L,0xC5A2A477L,1L,4L,0xC5A2A477L,0L,0x0895DF4AL},{1L,0xB0F6A5B2L,0x20F70AF1L,6L,5L,0x60BD0393L,1L},{(-3L),0xD49D4B8DL,0xB0F6A5B2L,0L,0xA37B6947L,6L,(-7L)}},{{0x49E1736DL,0L,5L,0x5C6AA4B2L,0xD49D4B8DL,8L,0x5C6AA4B2L},{6L,(-10L),0x7E178E3FL,0x5C6AA4B2L,0xE95FBF01L,(-1L),0xC5A2A477L},{0x53F91738L,0x0895DF4AL,0x4FB0D70CL,0L,0x63DE3400L,0x53F91738L,0x039ED8C2L},{0xF8811271L,0xA37B6947L,0x9FFEC240L,6L,(-10L),0xE4ABEF70L,0L},{1L,(-1L),(-1L),4L,(-1L),(-1L),1L},{(-7L),1L,7L,0x20F70AF1L,0xD49D4B8DL,6L,(-1L)}}};
        int32_t l_1774 = 0xC06438CBL;
        int64_t *l_1787 = &g_146;
        int8_t l_1870[2];
        uint32_t l_1939 = 18446744073709551615UL;
        int i, j, k;
        for (i = 0; i < 3; i++)
            l_1710[i] = &g_545[8][0][1];
        for (i = 0; i < 2; i++)
            l_1870[i] = 3L;
    }
    (**g_369) = func_50(((*l_1725) , (~l_1754)), (**g_543));
    return p_34;
}


/* ------------------------------------------ */
/* 
 * reads : g_12 g_59 g_75 g_1696 g_1080
 * writes: g_59 g_70 g_74 g_75 g_1080
 */
static uint16_t  func_35(int16_t  p_36, uint32_t  p_37, uint32_t  p_38, int64_t * p_39, int16_t  p_40)
{ /* block id: 3 */
    int16_t *l_47 = &g_43;
    uint64_t *l_58[7] = {&g_59,&g_59,&g_59,&g_59,&g_59,&g_59,(void*)0};
    int32_t l_60 = 0x203F87D5L;
    int8_t *l_69 = &g_70[3][5][4];
    uint32_t *l_73 = &g_74;
    int32_t l_1697[4][5] = {{9L,0x0D70C4D7L,0L,0L,0x0D70C4D7L},{9L,0x0D70C4D7L,0L,0L,0x0D70C4D7L},{9L,0x0D70C4D7L,0L,0L,0x0D70C4D7L},{9L,0x0D70C4D7L,0L,0L,0x0D70C4D7L}};
    int32_t *l_1700 = (void*)0;
    int32_t *l_1701 = &g_1080;
    uint32_t l_1702 = 0x4824891DL;
    int i, j;
    l_1697[1][2] ^= (safe_mul_func_uint16_t_u_u((((((((void*)0 == l_47) && ((safe_add_func_int16_t_s_s(g_12[1], (func_50(((g_75 ^= (p_38 , (safe_add_func_uint64_t_u_u((safe_add_func_int64_t_s_s(g_12[0], (g_59++))), (safe_rshift_func_int16_t_s_s(7L, (safe_add_func_int8_t_s_s(((*l_69) = (safe_rshift_func_int8_t_s_s(1L, 2))), ((safe_div_func_uint32_t_u_u(((*l_73) = l_60), l_60)) | g_12[8]))))))))) , p_36), l_47) , p_36))) ^ (-1L))) , 0x93A1C632L) != 1UL) != l_60) | p_40), 6UL));
    (*l_1701) |= (safe_sub_func_uint8_t_u_u(247UL, 255UL));
    return l_1702;
}


/* ------------------------------------------ */
/* 
 * reads : g_1696
 * writes:
 */
static struct S2  func_50(int32_t  p_51, int16_t * p_52)
{ /* block id: 8 */
    int64_t *l_79 = &g_80;
    uint32_t *l_93 = &g_75;
    int32_t *l_95 = &g_96;
    int32_t l_825 = 6L;
    struct S0 * const * const l_847 = &g_536[0];
    int32_t l_870[2][7][3] = {{{0x7F121645L,0L,0L},{0xD0E484BEL,0L,0xD0E484BEL},{1L,0x7F121645L,0L},{1L,1L,0x7F121645L},{0xD0E484BEL,0x7F121645L,0x7F121645L},{0x7F121645L,0L,0L},{0xD0E484BEL,0L,0xD0E484BEL}},{{1L,0x7F121645L,0L},{1L,1L,0x7F121645L},{0xD0E484BEL,0x7F121645L,0x7F121645L},{0x7F121645L,0L,0L},{0xD0E484BEL,0L,0xD0E484BEL},{1L,0x7F121645L,0L},{1L,1L,0x7F121645L}}};
    uint64_t l_871 = 0xEA84DD748DF65387LL;
    uint8_t *l_888 = &g_701.f3;
    struct S0 ****l_891[8];
    int16_t l_898 = 0x0558L;
    uint16_t l_899 = 0x9737L;
    uint16_t l_949[9];
    int32_t l_1012 = 5L;
    struct S1 *l_1030 = (void*)0;
    int16_t l_1071 = 0L;
    int32_t * const l_1079 = &g_1080;
    int32_t * const *l_1078 = &l_1079;
    uint32_t l_1096 = 0xD8F1D14AL;
    struct S2 **l_1104 = &g_635[1];
    struct S2 ***l_1103 = &l_1104;
    uint64_t l_1146 = 18446744073709551615UL;
    uint8_t l_1154 = 0xB2L;
    int16_t l_1207 = 0x0E90L;
    int8_t *l_1231 = &g_70[3][0][1];
    int8_t **l_1230 = &l_1231;
    int8_t *** const l_1229 = &l_1230;
    struct S0 * const *l_1264 = &g_536[0];
    struct S0 * const **l_1263[4][1] = {{&l_1264},{&l_1264},{&l_1264},{&l_1264}};
    struct S0 * const ***l_1262 = &l_1263[1][0];
    int32_t ***l_1272 = &g_1007;
    int8_t l_1322 = (-8L);
    const int16_t *l_1331 = &g_702.f5;
    const int16_t **l_1330 = &l_1331;
    const int16_t ***l_1329 = &l_1330;
    const int16_t ***l_1335 = (void*)0;
    int8_t l_1409 = 0x11L;
    volatile uint8_t ** volatile * volatile l_1474[2];
    uint8_t l_1537 = 0x8AL;
    const uint32_t l_1551 = 2UL;
    int16_t *l_1557[8][2] = {{&g_1477.f5,&g_1369},{&g_1477.f5,&g_1477.f5},{&g_1369,&g_1477.f5},{&g_1477.f5,&g_1369},{&g_1477.f5,&g_1477.f5},{&g_1369,&g_1477.f5},{&g_1477.f5,&g_1369},{&g_1477.f5,&g_1477.f5}};
    int32_t l_1625 = 8L;
    uint64_t l_1644[8] = {18446744073709551610UL,0UL,18446744073709551610UL,18446744073709551610UL,0UL,18446744073709551610UL,18446744073709551610UL,0UL};
    uint8_t l_1673 = 4UL;
    const struct S0 *l_1676 = (void*)0;
    const struct S0 **l_1675 = &l_1676;
    const struct S0 ***l_1674 = &l_1675;
    int i, j, k;
    for (i = 0; i < 8; i++)
        l_891[i] = &g_821;
    for (i = 0; i < 9; i++)
        l_949[i] = 4UL;
    for (i = 0; i < 2; i++)
        l_1474[i] = (void*)0;
    return g_1696;
}


/* ------------------------------------------ */
/* 
 * reads : g_150.f0 g_202 g_150.f9 g_150.f1 g_150.f8 g_227 g_150.f5 g_198.f0 g_130 g_57 g_96 g_75 g_70 g_137.f2 g_150.f7 g_209 g_59 g_80 g_169.f3 g_289 g_198.f4 g_155.f1 g_299 g_326 g_169 g_342 g_198.f6 g_369 g_150.f2 g_327.f6 g_428 g_441 g_327.f4 g_370 g_371 g_490 g_501 g_198.f2 g_535 g_12 g_565 g_580 g_272 g_43 g_589 g_502 g_591 g_537.f4 g_537.f2 g_634 g_651 g_658 g_662 g_327.f8 g_327.f2 g_635 g_692 g_146 g_701 g_702 g_592 g_714 g_753 g_810 g_819 g_823
 * writes: g_96 g_150.f5 g_209 g_111 g_227 g_148 g_70 g_74 g_251 g_130 g_75 g_272 g_289 g_299 g_326 g_80 g_202 g_371 g_490 g_501 g_535 g_543 g_502 g_43 g_566 g_591 g_59 g_635 g_342.f5 g_536 g_701.f3 g_820
 */
static int16_t * func_76(int64_t * p_77, uint8_t  p_78)
{ /* block id: 52 */
    int32_t l_223[1];
    int32_t l_252 = 9L;
    int32_t l_270[8] = {0x0BE3177DL,0x83DEF5BEL,0x83DEF5BEL,0x0BE3177DL,0x83DEF5BEL,0x83DEF5BEL,0x0BE3177DL,0x83DEF5BEL};
    int32_t l_287 = 0x5B4344EFL;
    int64_t l_321 = 0x41D20B754D1B45FDLL;
    int32_t **l_325 = &g_148[3][1];
    uint32_t * const l_450 = &g_130;
    int8_t l_622 = 0xC8L;
    int16_t *l_636[7] = {&g_342.f5,&g_342.f5,&g_342.f5,&g_342.f5,&g_342.f5,&g_342.f5,&g_342.f5};
    uint16_t *l_728 = &g_272;
    uint16_t ** const l_727 = &l_728;
    const int32_t l_740 = 7L;
    int8_t *l_744 = &g_70[3][5][4];
    int8_t **l_743 = &l_744;
    struct S0 *l_751[7] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
    struct S0 * const l_752 = &g_537[1];
    const int32_t l_795[1][9] = {{0xE4134B6FL,2L,0xE4134B6FL,0xE4134B6FL,2L,0xE4134B6FL,0xE4134B6FL,2L,0xE4134B6FL}};
    uint64_t *l_808[9] = {&g_59,&g_59,&g_59,&g_59,&g_59,&g_59,&g_59,&g_59,&g_59};
    struct S0 ***l_818[1];
    struct S0 ****l_817 = &l_818[0];
    int32_t *l_824 = &l_270[5];
    int i, j;
    for (i = 0; i < 1; i++)
        l_223[i] = (-1L);
    for (i = 0; i < 1; i++)
        l_818[i] = &g_535[1];
lbl_747:
    for (g_96 = 0; (g_96 <= 4); g_96 += 1)
    { /* block id: 55 */
        uint8_t l_212 = 0x75L;
        int32_t l_222[6][5] = {{0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L},{0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL},{0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L},{0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL},{0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L,0x559418F5L},{0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL,0x171D70ADL}};
        uint32_t l_344[7][1][10] = {{{0xD76AEBE0L,2UL,0xC5AFE649L,0xC5AFE649L,2UL,0xD76AEBE0L,8UL,1UL,0xC5AFE649L,8UL}},{{0x4FFE9D0BL,2UL,0xB9FFFA21L,1UL,2UL,0UL,2UL,1UL,0xB9FFFA21L,2UL}},{{0x4FFE9D0BL,8UL,0xC5AFE649L,1UL,8UL,0xD76AEBE0L,2UL,0xC5AFE649L,0xC5AFE649L,0xF24DD085L}},{{0UL,0xF24DD085L,4294967291UL,4294967291UL,0xF24DD085L,0UL,0x1A07266BL,8UL,4294967291UL,0x1A07266BL}},{{0xDCE9CDAAL,0xF24DD085L,2UL,8UL,0xF24DD085L,0x4FBD8ED5L,0xF24DD085L,8UL,2UL,0xF24DD085L}},{{0xDCE9CDAAL,0x1A07266BL,4294967291UL,8UL,0x1A07266BL,0UL,0xF24DD085L,4294967291UL,4294967291UL,0xF24DD085L}},{{0UL,0xF24DD085L,4294967291UL,4294967291UL,0xF24DD085L,0UL,0x1A07266BL,8UL,4294967291UL,0x1A07266BL}}};
        int32_t l_397 = 1L;
        int16_t l_515 = (-1L);
        uint32_t l_552 = 0xFBE6D4F4L;
        const uint16_t *l_576 = &g_272;
        const uint16_t **l_575 = &l_576;
        uint32_t l_632 = 0xF455D7CBL;
        int16_t ***l_679 = &g_544[3];
        const int32_t l_693[10] = {0x6AF82DE3L,0xEB8E74B7L,0xEB5326F3L,0xEB5326F3L,0xEB8E74B7L,0x6AF82DE3L,0xEB8E74B7L,0xEB5326F3L,0xEB5326F3L,0xEB8E74B7L};
        uint32_t l_711 = 0x9313B0DEL;
        int i, j, k;
        for (g_150.f5 = 0; (g_150.f5 <= 1); g_150.f5 += 1)
        { /* block id: 58 */
            uint16_t *l_210 = (void*)0;
            int32_t l_211 = 1L;
            int32_t l_214 = 0x515C57FDL;
            uint8_t *l_221[3][9] = {{(void*)0,(void*)0,(void*)0,(void*)0,&l_212,&g_111,(void*)0,&g_111,&l_212},{(void*)0,(void*)0,(void*)0,(void*)0,&l_212,&g_111,(void*)0,&g_111,&l_212},{(void*)0,(void*)0,(void*)0,(void*)0,&l_212,&g_111,(void*)0,&g_111,&l_212}};
            int32_t *l_224 = &l_214;
            int32_t *l_225 = (void*)0;
            int32_t *l_226 = &g_227;
            int16_t l_263[6] = {0x5520L,0x5520L,0x5520L,0x5520L,0x5520L,0x5520L};
            int32_t l_375 = 9L;
            int32_t l_377 = 0xEEAA3B25L;
            int32_t l_380 = 0L;
            int32_t l_382 = (-1L);
            int32_t l_390 = 1L;
            int32_t l_395 = (-1L);
            int32_t l_399 = 1L;
            int32_t l_401 = 0x3796D657L;
            int32_t l_402 = 8L;
            int32_t l_404 = 0x4AA961E9L;
            int32_t l_406 = (-1L);
            int32_t l_407 = 1L;
            int32_t l_408 = 0xF656C0A4L;
            int32_t l_409 = 0xAE60F48CL;
            int32_t l_410 = 4L;
            int32_t l_411 = (-1L);
            int32_t l_412 = 0x062E3FC9L;
            int32_t l_413 = 0x6269C28DL;
            int32_t l_414 = (-1L);
            int32_t l_415 = 0xF0EB4EEBL;
            int i, j;
            (*l_226) |= ((*l_224) = (safe_add_func_uint64_t_u_u(((g_150.f0 == ((((g_209 = p_78) & (g_202 , (l_211 = 0xE33EL))) <= ((l_212 , p_78) ^ ((l_222[4][3] ^= ((~(l_214 & (g_111 = (safe_mod_func_int8_t_s_s(((safe_sub_func_int16_t_s_s((safe_sub_func_int64_t_s_s((l_214 || (-8L)), 0xE5680E47E4D3A49CLL)), p_78)) ^ l_212), l_212))))) && g_150.f9)) && g_150.f1))) >= 65535UL)) , l_223[0]), g_150.f8)));
            if (((*l_224) = p_78))
            { /* block id: 66 */
                int32_t l_290 = 0L;
                struct S2 ** const l_368 = (void*)0;
                int32_t l_374 = 0xD2AD8E04L;
                int32_t l_376 = (-1L);
                int32_t l_379 = 0L;
                int32_t l_383 = 0x00AA3002L;
                int32_t l_385 = 0xF161AC99L;
                int32_t l_387 = 0x75EB326AL;
                int32_t l_389 = 0L;
                int32_t l_391[10] = {(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L),(-10L)};
                uint32_t l_416[5];
                int i, j;
                for (i = 0; i < 5; i++)
                    l_416[i] = 0UL;
                if (p_78)
                    break;
                g_148[(g_150.f5 + 2)][g_150.f5] = &l_222[4][3];
                for (l_211 = 0; (l_211 <= 4); l_211 += 1)
                { /* block id: 71 */
                    int64_t l_246 = (-5L);
                    uint32_t *l_247 = (void*)0;
                    uint32_t *l_248[9][7][4] = {{{&g_74,&g_74,&g_74,&g_209},{&g_209,&g_75,&g_209,&g_74},{&g_209,(void*)0,&g_74,&g_75},{&g_74,&g_74,&g_74,&g_209},{&g_74,&g_74,&g_74,&g_75},{&g_74,(void*)0,(void*)0,&g_74},{&g_74,&g_209,&g_75,&g_209}},{{&g_74,&g_75,&g_74,&g_74},{(void*)0,&g_75,&g_74,&g_74},{&g_74,&g_75,&g_209,&g_209},{&g_75,&g_209,&g_209,&g_74},{&g_75,(void*)0,&g_209,&g_75},{&g_74,&g_74,&g_74,&g_209},{&g_75,&g_74,&g_74,&g_75}},{{&g_74,(void*)0,&g_75,&g_74},{&g_74,&g_75,&g_75,&g_209},{&g_74,&g_74,&g_74,&g_75},{&g_75,&g_75,&g_74,(void*)0},{&g_74,(void*)0,&g_209,&g_209},{&g_75,&g_75,&g_209,&g_74},{&g_75,(void*)0,&g_209,&g_209}},{{&g_74,&g_74,&g_74,&g_209},{(void*)0,&g_74,&g_74,&g_209},{&g_74,(void*)0,&g_75,&g_74},{&g_74,&g_74,&g_74,&g_209},{&g_75,&g_74,&g_209,&g_74},{&g_209,&g_74,&g_74,&g_209},{(void*)0,&g_209,&g_75,&g_209}},{{&g_74,&g_74,&g_75,&g_75},{&g_74,&g_74,&g_75,&g_74},{(void*)0,&g_75,&g_74,&g_209},{&g_209,&g_75,&g_209,&g_74},{&g_75,&g_74,&g_74,&g_75},{&g_74,&g_74,&g_209,&g_209},{(void*)0,&g_209,&g_209,&g_209}},{{&g_74,&g_74,(void*)0,&g_209},{(void*)0,&g_209,&g_209,&g_209},{&g_74,&g_74,&g_75,&g_75},{&g_74,&g_74,&g_209,&g_74},{(void*)0,&g_75,(void*)0,&g_209},{&g_209,&g_75,&g_209,&g_74},{&g_75,&g_74,&g_74,&g_75}},{{&g_74,&g_74,&g_74,&g_209},{&g_75,&g_209,&g_209,&g_209},{&g_209,&g_74,(void*)0,&g_74},{(void*)0,&g_74,&g_209,&g_209},{&g_74,&g_74,&g_75,(void*)0},{&g_74,&g_74,&g_209,&g_74},{(void*)0,(void*)0,(void*)0,&g_209}},{{&g_74,(void*)0,&g_209,&g_74},{(void*)0,&g_74,&g_209,(void*)0},{&g_74,&g_74,&g_74,&g_209},{&g_75,&g_74,&g_209,&g_74},{&g_209,&g_74,&g_74,&g_209},{(void*)0,&g_209,&g_75,&g_209},{&g_74,&g_74,&g_75,&g_75}},{{&g_74,&g_74,&g_75,&g_74},{(void*)0,&g_75,&g_74,&g_209},{&g_209,&g_75,&g_209,&g_74},{&g_75,&g_74,&g_74,&g_75},{&g_74,&g_74,&g_209,&g_209},{(void*)0,&g_209,&g_209,&g_209},{&g_74,&g_74,(void*)0,&g_209}}};
                    int32_t l_249 = 0x119A207BL;
                    int8_t *l_250 = (void*)0;
                    int i, j, k;
                    (*l_226) = (g_198.f0 && (0x376F68FCL > ((safe_mul_func_int8_t_s_s((safe_rshift_func_int16_t_s_u(((void*)0 != &g_96), 1)), ((*l_224) = (l_252 |= (safe_add_func_int64_t_s_s((((g_251 = (safe_mod_func_uint32_t_u_u(((((safe_lshift_func_int8_t_s_s((safe_unary_minus_func_uint64_t_u((safe_sub_func_uint64_t_u_u((((((g_130 | (safe_unary_minus_func_uint32_t_u(((g_74 = (l_249 &= (0x7AL < (g_70[l_211][g_96][(g_150.f5 + 2)] = ((0xE776L > (safe_mod_func_int32_t_s_s(0x49C42C81L, (((l_246 > 1L) > g_57[1]) && 250UL)))) || 0x90A7L))))) , 4294967291UL)))) , l_246) < 0x8296L) , 1L) ^ 8UL), l_222[2][1])))), l_246)) > p_78) && (-3L)) < 0x7BD0654C1739F86BLL), l_246))) , l_223[0]) < p_78), 0UL)))))) , (-8L))));
                    for (g_130 = 0; (g_130 <= 2); g_130 += 1)
                    { /* block id: 81 */
                        int8_t *l_269 = &g_70[3][5][4];
                        uint16_t *l_271 = &g_272;
                        int8_t *l_288 = &g_289;
                        int i, j;
                        (*l_224) = (safe_add_func_uint16_t_u_u(((*l_271) = ((((safe_rshift_func_uint8_t_u_s((((--g_75) <= (safe_div_func_uint64_t_u_u((safe_mul_func_int16_t_s_s(l_223[0], (p_78 && ((((*l_226) = ((((void*)0 != l_221[(g_150.f5 + 1)][g_96]) <= ((l_252 = g_227) | ((p_78 = ((l_263[2] = 0x7AL) && (~(((+((((p_78 , (l_270[7] &= (safe_sub_func_int64_t_s_s(((((*l_269) = (!0xEF043119L)) ^ (((&g_151 != (void*)0) , 18446744073709551615UL) , 0x70L)) && g_70[l_211][g_96][(g_150.f5 + 2)]), g_137[5].f2)))) < 0x22A8BAE1L) != 0x92CD4794L) | 0x5854L)) || 0L) == l_212)))) != l_222[4][3]))) > g_150.f7)) ^ (-10L)) <= g_209)))), 0x8F672B85414E3030LL))) == 1L), 1)) != g_59) & 0x7943L) >= (*p_77))), 1L));
                        (*l_226) = (l_223[0] , ((((((safe_mul_func_uint16_t_u_u(((*l_271) = p_78), p_78)) && (safe_mul_func_int8_t_s_s((((*l_288) |= ((*l_269) = (((0x22L == ((safe_mod_func_int32_t_s_s((0x8CL | (p_78 > ((safe_div_func_int32_t_s_s(l_246, (safe_mul_func_int16_t_s_s((1L ^ (safe_div_func_int8_t_s_s((p_78 <= g_130), p_78))), p_78)))) <= 0x5DL))), l_287)) >= g_169[2][4][0].f3)) ^ 8L) & 0x22A35C0DL))) , (*l_224)), 0xA2L))) | p_78) , g_198.f4) > l_290) ^ g_75));
                    }
                    if ((((p_78 && (safe_lshift_func_int8_t_s_s(0x97L, 1))) >= ((safe_add_func_int64_t_s_s((g_150.f8 > g_57[2]), (250UL || (-1L)))) & (safe_mul_func_int16_t_s_s(g_59, p_78)))) , ((safe_mod_func_int32_t_s_s(((g_299 = &l_212) == &p_78), 0x47E15903L)) <= g_150.f0)))
                    { /* block id: 97 */
                        uint32_t *l_324 = &g_130;
                        (*l_325) = ((((safe_sub_func_int32_t_s_s((safe_mul_func_int16_t_s_s((((g_155.f1 | ((safe_mul_func_uint16_t_u_u(((p_78 >= ((((+p_78) ^ ((safe_sub_func_uint32_t_u_u(((safe_mul_func_uint8_t_u_u((((*l_324) = (p_78 & (safe_div_func_int64_t_s_s(((safe_sub_func_uint16_t_u_u((safe_sub_func_int64_t_s_s(g_150.f1, ((safe_mod_func_int16_t_s_s((-1L), ((*l_224) & (l_321 == ((safe_rshift_func_uint16_t_u_s((p_78 == 4294967294UL), p_78)) | p_78))))) , g_80))), p_78)) , 0x83C939FF2AD46AB4LL), (-1L))))) , l_222[4][1]), l_270[7])) || 255UL), l_212)) , l_249)) && (*p_77)) > 0x66FDB93B97466EF6LL)) | (*g_299)), p_78)) != (-5L))) , l_325) != (void*)0), g_70[3][5][4])), 0x22831417L)) , g_57[3]) < (-3L)) , &l_249);
                    }
                    else
                    { /* block id: 100 */
                        struct S0 * volatile *l_328 = &g_326[2];
                        (*l_328) = g_326[2];
                    }
                    if (l_212)
                        continue;
                }
                for (g_80 = 0; (g_80 <= 4); g_80 += 1)
                { /* block id: 107 */
                    int32_t *l_329[2][9] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
                    int16_t *l_339 = (void*)0;
                    uint64_t *l_345 = &g_202;
                    int i, j;
                    (*l_325) = l_329[1][0];
                    if ((g_169[2][0][0] , p_78))
                    { /* block id: 109 */
                        int16_t *l_341[8] = {&l_263[3],&g_150.f5,&l_263[3],&l_263[3],&g_150.f5,&l_263[3],&l_263[3],&g_150.f5};
                        int16_t **l_340 = &l_341[6];
                        uint16_t *l_343 = &g_272;
                        struct S0 *l_347 = &g_327;
                        struct S0 **l_346 = &l_347;
                        struct S0 ***l_348 = &l_346;
                        int32_t l_372 = 0x2A3ADF52L;
                        int i;
                        l_344[5][0][6] ^= ((((safe_unary_minus_func_int64_t_s((0UL < (safe_lshift_func_uint8_t_u_s((p_78 = (safe_mul_func_uint16_t_u_u(((*l_343) = ((((safe_mod_func_uint16_t_u_u(7UL, g_227)) , (safe_lshift_func_uint8_t_u_s(0xFFL, 6))) == (p_78 & ((l_339 == ((*l_340) = l_339)) | ((g_342 , g_202) || 1L)))) , p_78)), g_70[3][5][4]))), g_209))))) > l_287) <= 7L) >= 0x9F1FL);
                        if ((*l_226))
                            continue;
                        (*l_325) = (void*)0;
                        (*l_224) = ((((l_345 != &g_202) , &g_326[2]) == ((*l_348) = l_346)) , ((~(((safe_div_func_uint16_t_u_u(((*l_343) = 65535UL), g_198.f6)) != (safe_mod_func_uint64_t_u_u(((safe_mul_func_uint8_t_u_u(((safe_add_func_uint8_t_u_u(0x54L, 1L)) , (safe_div_func_int32_t_s_s((safe_add_func_uint64_t_u_u((safe_lshift_func_uint16_t_u_u((((((safe_mul_func_int16_t_s_s((safe_lshift_func_int16_t_s_u(g_150.f1, 9)), g_289)) , (-1L)) , l_368) == g_369) ^ 0x5DL), g_150.f2)), l_344[2][0][9])), g_327.f6))), 1L)) , (*l_226)), p_78))) && 0x7F7A9C5BL)) , l_372));
                    }
                    else
                    { /* block id: 119 */
                        int32_t l_373 = 0x84C3AECEL;
                        int32_t l_378 = 0x6043B0A0L;
                        int32_t l_381 = 0x25797B16L;
                        int32_t l_384 = 7L;
                        int32_t l_386 = 0L;
                        int32_t l_388 = 0L;
                        int32_t l_392 = 6L;
                        int32_t l_393 = 1L;
                        int32_t l_394 = 0L;
                        int32_t l_396 = (-1L);
                        int32_t l_398 = 0x4E237DDDL;
                        int32_t l_400 = 0x641E4FDEL;
                        int64_t l_403[4][3][2] = {{{(-10L),0x98841D4FA86E6F88LL},{0xB263BB481C8215D9LL,0x338CC914206564CDLL},{0x98841D4FA86E6F88LL,0x338CC914206564CDLL}},{{0xB263BB481C8215D9LL,0x98841D4FA86E6F88LL},{(-10L),0x98841D4FA86E6F88LL},{0x98841D4FA86E6F88LL,0xB263BB481C8215D9LL}},{{0xABEDDEFFCEDC222ELL,(-10L)},{0xB263BB481C8215D9LL,(-10L)},{0xABEDDEFFCEDC222ELL,0xB263BB481C8215D9LL}},{{0x98841D4FA86E6F88LL,0x98841D4FA86E6F88LL},{0x98841D4FA86E6F88LL,0xB263BB481C8215D9LL},{0xABEDDEFFCEDC222ELL,(-10L)}}};
                        int32_t l_405[8] = {0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL,0xB66EE6EFL};
                        int i, j, k;
                        l_416[3]--;
                    }
                }
            }
            else
            { /* block id: 123 */
                (*l_325) = &l_377;
            }
            for (l_401 = 4; (l_401 >= 1); l_401 -= 1)
            { /* block id: 128 */
                (*l_224) |= ((*l_226) = ((*l_226) && (&g_148[2][0] == (void*)0)));
            }
        }
        for (g_130 = 0; (g_130 <= 4); g_130 += 1)
        { /* block id: 135 */
            uint64_t *l_427 = &g_202;
            int8_t *l_435 = &g_70[0][6][4];
            int16_t *l_438 = &g_150.f5;
            int32_t l_448 = 0xAF4D58FAL;
            int32_t l_456 = 0x77E18804L;
            int32_t l_457 = (-6L);
            int32_t l_460 = 2L;
            uint8_t l_461 = 1UL;
            int32_t l_468[9];
            uint16_t l_483 = 0xE2E0L;
            uint32_t * const l_488[1] = {&l_344[5][0][6]};
            int32_t *l_546 = &l_270[5];
            int32_t *l_547 = &l_287;
            int32_t *l_548 = &l_270[7];
            int32_t *l_549 = &l_468[3];
            int32_t *l_550 = &l_457;
            int32_t *l_551[3][5] = {{&g_227,(void*)0,(void*)0,&g_227,(void*)0},{&g_227,&g_227,&l_222[3][1],&g_227,&g_227},{(void*)0,&g_227,(void*)0,(void*)0,&g_227}};
            uint32_t l_588[8] = {18446744073709551608UL,0x5A128711L,0x5A128711L,18446744073709551608UL,0x5A128711L,0x5A128711L,18446744073709551608UL,0x5A128711L};
            int64_t l_623 = 1L;
            struct S0 ***l_627[9] = {&g_535[1],&g_535[1],&g_535[1],&g_535[1],&g_535[1],&g_535[1],&g_535[1],&g_535[1],&g_535[1]};
            int i, j;
            for (i = 0; i < 9; i++)
                l_468[i] = (-8L);
            if ((safe_add_func_uint16_t_u_u((((safe_rshift_func_uint16_t_u_u((safe_add_func_uint8_t_u_u(p_78, (safe_sub_func_uint64_t_u_u(((*l_427) = (&g_43 != (void*)0)), (g_428 != (void*)0))))), 15)) < p_78) ^ (safe_add_func_int32_t_s_s((safe_sub_func_int8_t_s_s(((*l_435) = 4L), (safe_mod_func_int16_t_s_s(0xF03BL, ((*l_438) &= 0xDA6EL))))), g_198.f6))), g_96)))
            { /* block id: 139 */
                uint32_t *l_451 = &l_344[0][0][9];
                int32_t l_454 = 0x986C983CL;
                int32_t *l_455 = &l_287;
                int32_t *l_458 = &l_222[4][4];
                int32_t *l_459[5] = {&l_222[3][0],&l_222[3][0],&l_222[3][0],&l_222[3][0],&l_222[3][0]};
                int i;
                l_457 = ((l_456 = ((((safe_add_func_int32_t_s_s(((g_441 , l_344[5][0][6]) , ((safe_lshift_func_int16_t_s_s((((safe_div_func_uint16_t_u_u((safe_lshift_func_int8_t_s_u((((*l_451) &= (l_448 | (p_78 , (!(&g_130 == l_450))))) , l_448), 6)), 9UL)) != ((*l_455) = ((safe_mul_func_uint16_t_u_u((l_454 <= (*p_77)), g_198.f0)) , p_78))) , p_78), 6)) || p_78)), l_252)) == g_327.f4) > l_397) != g_150.f2)) == (-1L));
                l_461++;
                (*l_455) &= p_78;
            }
            else
            { /* block id: 146 */
                uint16_t l_464 = 0xA7F5L;
                int32_t *l_467[9][6][3] = {{{&l_287,&l_222[4][3],&l_222[4][3]},{(void*)0,&g_12[5],(void*)0},{&l_252,&l_270[3],&l_397},{&g_12[0],&l_252,&l_457},{&l_252,&l_457,(void*)0},{(void*)0,&l_270[7],&l_456}},{{&l_287,&g_12[0],(void*)0},{&g_12[0],&l_270[0],&l_287},{&g_12[0],&g_227,&g_12[0]},{(void*)0,&g_12[0],&g_12[6]},{&l_270[7],&l_287,&l_287},{&g_12[5],&g_12[0],&l_270[0]}},{{&l_222[4][3],&g_12[0],&l_457},{&l_397,&l_287,&l_287},{&l_397,&g_12[0],(void*)0},{&l_397,&g_227,&g_12[0]},{&l_457,&l_270[0],&l_397},{&g_12[0],&g_12[0],&l_456}},{{&g_12[0],&l_270[7],&l_222[4][3]},{&l_270[3],&l_457,&g_12[0]},{&g_12[0],&l_252,&g_12[0]},{&l_270[1],&l_270[3],&g_12[0]},{(void*)0,&g_12[5],&l_222[4][3]},{&g_12[0],&l_222[4][3],&l_456}},{{&g_227,(void*)0,&l_397},{&g_12[0],&l_252,&g_12[0]},{&g_12[0],&l_397,(void*)0},{&l_287,(void*)0,&l_287},{(void*)0,&g_12[6],&l_457},{&l_252,&l_287,&l_270[0]}},{{&l_252,&l_270[7],&l_287},{(void*)0,&g_12[0],&g_12[6]},{&l_287,&l_222[4][3],&g_12[0]},{&g_12[0],&l_270[7],&l_287},{&g_12[0],(void*)0,(void*)0},{&g_227,&g_12[0],&l_456}},{{&g_12[0],&g_12[0],(void*)0},{(void*)0,(void*)0,&l_457},{&l_270[1],&g_227,&l_397},{&g_12[0],(void*)0,(void*)0},{&l_270[3],&g_12[0],&l_222[4][3]},{&g_12[0],&g_12[0],&g_12[0]}},{{&g_12[0],(void*)0,&l_270[1]},{&l_457,&l_397,&g_12[5]},{(void*)0,&g_12[0],&l_397},{&l_222[4][3],&g_12[0],&l_252},{&g_12[0],&l_270[3],&g_12[0]},{&l_457,&l_456,&g_12[0]}},{{&g_12[0],&l_270[0],&l_252},{&l_287,&l_287,&l_397},{&l_270[7],(void*)0,&g_12[5]},{&l_397,(void*)0,&g_227},{&g_12[0],&g_227,&g_12[0]},{&l_287,&l_287,&l_457}}};
                uint16_t l_469[8] = {65533UL,65533UL,65533UL,65533UL,65533UL,65533UL,65533UL,65533UL};
                uint32_t l_472 = 0x703A43CAL;
                uint8_t l_516 = 0x75L;
                int32_t l_519 = 0x67CD7810L;
                struct S0 *l_533 = &g_534;
                struct S0 **l_532 = &l_533;
                int i, j, k;
                if (p_78)
                    break;
                l_464--;
                --l_469[6];
                for (g_272 = 0; (g_272 <= 4); g_272 += 1)
                { /* block id: 152 */
                    int32_t *l_475 = &g_96;
                    int32_t l_478 = 0L;
                    uint8_t * const l_506 = &g_111;
                    int8_t l_507 = 0xAEL;
                    int32_t l_508 = 0L;
                    int32_t l_513 = 0x3905CBC9L;
                    int32_t l_514 = 0xD75F2984L;
                    for (g_209 = 0; (g_209 <= 0); g_209 += 1)
                    { /* block id: 155 */
                        l_472++;
                    }
                    for (p_78 = 0; (p_78 <= 0); p_78 += 1)
                    { /* block id: 160 */
                        (*l_325) = l_475;
                    }
                    if ((~(0x757E91F9L >= (((((!((l_478 = p_78) , ((((safe_add_func_uint8_t_u_u(((safe_sub_func_int16_t_s_s((0x7315C14A9FA8AFDELL <= g_198.f4), ((l_483 && ((safe_sub_func_uint8_t_u_u((safe_add_func_int32_t_s_s((((p_78 , 18446744073709551611UL) , (l_488[0] != &l_344[2][0][9])) ^ 0xD482L), 0x4310D228L)), l_460)) > 0xB01A2EABL)) || p_78))) , 255UL), 9L)) & p_78) > (-9L)) < l_483))) , 0x16E5C498L) & l_222[4][3]) < 7L) < g_342.f6))))
                    { /* block id: 164 */
                        uint8_t l_489 = 0x0EL;
                        (**g_369) = (*g_370);
                        l_456 |= (((&g_75 == (void*)0) , &l_212) == &p_78);
                        if (l_489)
                            break;
                        g_490--;
                    }
                    else
                    { /* block id: 169 */
                        const int32_t ***l_503 = &g_501;
                        int32_t l_509 = 0x8EEF8A0EL;
                        int32_t l_510 = 1L;
                        int32_t l_511 = 8L;
                        int32_t l_512[10][9] = {{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L},{1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L,1L,0xB083A687L,0xB083A687L}};
                        int i, j;
                        l_478 &= ((safe_rshift_func_int8_t_s_u((safe_div_func_int64_t_s_s((l_483 >= (safe_mod_func_uint32_t_u_u(((g_169[2][4][0].f0 >= ((((((*p_77) |= (((g_130 , g_150.f7) , ((safe_add_func_int32_t_s_s(p_78, (((*l_503) = g_501) != (void*)0))) < 0x6EB6L)) ^ ((((safe_mul_func_int16_t_s_s((0xF6L > l_460), 0L)) , 1UL) || g_342.f5) ^ 4L))) ^ p_78) , l_506) == (void*)0) & p_78)) != g_327.f4), 0x62FE4A1DL))), p_78)), 0)) > 8UL);
                        --l_516;
                        return l_438;
                    }
                    if (l_519)
                    { /* block id: 176 */
                        struct S2 *l_520 = &g_342;
                        int32_t l_529 = (-6L);
                        struct S0 ***l_538 = &g_535[1];
                        struct S0 **l_540 = &l_533;
                        struct S0 ***l_539 = &l_540;
                        l_529 = ((l_270[7] = (l_520 == (void*)0)) == ((safe_mul_func_uint8_t_u_u((safe_add_func_int16_t_s_s((safe_add_func_int16_t_s_s((safe_mod_func_uint64_t_u_u((((l_513 = (l_222[4][3] = (p_78 != g_198.f2))) >= ((l_529 || ((safe_lshift_func_uint8_t_u_s(((*l_506) = (l_529 >= ((g_150.f7 , l_532) == ((*l_539) = ((*l_538) = g_535[1]))))), 0)) && g_12[2])) ^ p_78)) ^ p_78), l_529)), 0x61DCL)), g_342.f5)), 0x04L)) < (*p_77)));
                    }
                    else
                    { /* block id: 184 */
                        int16_t **l_542[3];
                        int16_t ***l_541 = &l_542[0];
                        int i;
                        for (i = 0; i < 3; i++)
                            l_542[i] = &l_438;
                        if (l_397)
                            break;
                        g_543 = l_541;
                    }
                }
            }
            l_552--;
            for (l_448 = 4; (l_448 >= 1); l_448 -= 1)
            { /* block id: 193 */
                uint32_t l_555[5] = {4294967287UL,4294967287UL,4294967287UL,4294967287UL,4294967287UL};
                int i;
                --l_555[4];
            }
            for (l_456 = 3; (l_456 >= 0); l_456 -= 1)
            { /* block id: 198 */
                int32_t *l_559[7] = {&g_12[0],&g_12[0],&g_12[0],&g_12[0],&g_12[0],&g_12[0],&g_12[0]};
                uint32_t l_572 = 18446744073709551615UL;
                struct S0 *l_599 = (void*)0;
                uint8_t l_626 = 0UL;
                struct S2 *l_633 = &g_150;
                uint32_t l_637 = 18446744073709551609UL;
                uint64_t l_648[7][3] = {{1UL,1UL,1UL},{0UL,0UL,0UL},{1UL,1UL,1UL},{0UL,0UL,0UL},{1UL,1UL,1UL},{0UL,0UL,0UL},{1UL,1UL,1UL}};
                int16_t *l_649 = &l_515;
                const int16_t ***l_678 = (void*)0;
                int i, j;
                for (g_80 = 0; (g_80 <= 4); g_80 += 1)
                { /* block id: 201 */
                    uint16_t l_558 = 0x248FL;
                    uint64_t l_560 = 0xE6124CD8415DA112LL;
                    int32_t *l_567 = &l_270[7];
                    int32_t l_570[3][4] = {{6L,0x77FB924AL,0x77FB924AL,6L},{0x77FB924AL,6L,0x77FB924AL,0x77FB924AL},{6L,6L,1L,6L}};
                    int i, j;
                    for (p_78 = 0; (p_78 <= 4); p_78 += 1)
                    { /* block id: 204 */
                        l_558 = l_344[0][0][3];
                        (**g_369) = (**g_369);
                        (*l_550) ^= 0xDCF92B94L;
                    }
                    for (g_74 = 0; (g_74 <= 0); g_74 += 1)
                    { /* block id: 211 */
                        (*g_501) = l_559[0];
                        l_560--;
                    }
                    for (g_43 = 0; (g_43 <= 4); g_43 += 1)
                    { /* block id: 217 */
                        int16_t l_568 = 1L;
                        int32_t l_569 = 1L;
                        int32_t l_571[4][9][5] = {{{0x8DA80021L,0L,3L,0x2D2195BEL,(-4L)},{0x5870F8C7L,0x487A4572L,(-1L),1L,(-3L)},{1L,0x9D0C2664L,0x0B3ECF1EL,(-4L),(-1L)},{0xBF9BBC24L,9L,9L,0L,0x44C4ACC5L},{0x859C03EFL,0L,0xE709DAADL,3L,0xAEED6AFEL},{0x46EA0579L,(-10L),1L,0x44C4ACC5L,0x940B071EL},{0xAEED6AFEL,1L,0L,3L,0L},{(-10L),(-1L),0x65FBB065L,0L,0x021F281AL},{0x84378FD0L,(-4L),0L,0L,(-4L)}},{{6L,(-1L),0x16ABD723L,0x62A730B8L,0x29EF9F70L},{0x0B3ECF1EL,0x859C03EFL,0xE709DAADL,(-4L),0L},{0x16ABD723L,(-10L),(-1L),0x29EF9F70L,(-1L)},{0x0B3ECF1EL,1L,0x6FC3512AL,0x0B3ECF1EL,0x308500D2L},{6L,0L,0x751547ECL,(-10L),(-10L)},{0x84378FD0L,8L,0x84378FD0L,0x308500D2L,0x0B3ECF1EL},{(-10L),9L,0x44C4ACC5L,(-1L),0x29EF9F70L},{0xAEED6AFEL,1L,(-1L),0L,(-4L)},{0x46EA0579L,0x62A730B8L,0x44C4ACC5L,0x29EF9F70L,0x62A730B8L}},{{0x859C03EFL,(-1L),0x84378FD0L,(-4L),0L},{0L,0x021F281AL,0x751547ECL,0x021F281AL,0L},{0xF38516EBL,0xAEED6AFEL,0x6FC3512AL,0L,3L},{0x940B071EL,9L,(-1L),0x940B071EL,0x44C4ACC5L},{(-4L),0x0B3ECF1EL,0xE709DAADL,0xAEED6AFEL,3L},{0x46EA0579L,0x940B071EL,0x16ABD723L,0x44C4ACC5L,0L},{3L,1L,0L,1L,0L},{0xC17336ACL,0xC17336ACL,0x65FBB065L,(-10L),0x62A730B8L},{0x84378FD0L,(-4L),0L,0L,(-4L)}},{{0x021F281AL,(-1L),1L,6L,0x29EF9F70L},{0L,(-4L),0xE709DAADL,0x859C03EFL,0x0B3ECF1EL},{0x16ABD723L,0xC17336ACL,9L,0x29EF9F70L,(-10L)},{8L,1L,1L,8L,0x308500D2L},{0x62A730B8L,0x940B071EL,0x751547ECL,0xC17336ACL,(-1L)},{0x84378FD0L,0x0B3ECF1EL,(-1L),0x308500D2L,0L},{(-1L),9L,0xFCC1C307L,0xC17336ACL,0x29EF9F70L},{1L,0xAEED6AFEL,(-1L),8L,(-4L)},{0x46EA0579L,0x021F281AL,0x29EF9F70L,0x29EF9F70L,0x021F281AL}}};
                        int i, j, k;
                        (*l_550) |= l_558;
                        g_566 = (((*l_427)--) , g_565);
                        l_559[1] = l_567;
                        l_572++;
                    }
                    for (g_289 = 0; (g_289 <= 4); g_289 += 1)
                    { /* block id: 226 */
                        const uint16_t ***l_577 = &l_575;
                        (*l_577) = l_575;
                    }
                }
                for (g_43 = 3; (g_43 >= 0); g_43 -= 1)
                { /* block id: 232 */
                    uint16_t *l_590 = &l_483;
                    struct S0 *l_598[5][5][7] = {{{&g_537[6],(void*)0,&g_537[8],&g_537[6],&g_534,(void*)0,&g_537[4]},{&g_537[6],(void*)0,&g_537[6],&g_534,&g_537[6],&g_327,&g_327},{&g_534,(void*)0,&g_534,&g_537[6],&g_534,(void*)0,&g_534},{&g_534,&g_537[6],&g_537[6],&g_327,&g_537[2],&g_327,(void*)0},{&g_534,&g_537[8],&g_327,&g_537[7],(void*)0,&g_537[2],&g_537[2]}},{{&g_534,&g_534,&g_537[7],&g_534,&g_534,&g_534,&g_327},{&g_537[6],(void*)0,&g_534,&g_327,&g_537[6],&g_534,&g_327},{&g_537[6],&g_534,(void*)0,(void*)0,(void*)0,&g_537[7],&g_534},{&g_537[6],&g_327,&g_327,&g_534,&g_537[2],&g_537[6],&g_537[6]},{&g_534,&g_537[6],&g_327,(void*)0,(void*)0,&g_537[8],&g_537[6]}},{{&g_534,&g_327,&g_327,(void*)0,&g_537[7],&g_534,&g_537[7]},{&g_534,&g_534,&g_534,&g_534,&g_327,(void*)0,&g_537[6]},{&g_327,&g_534,&g_537[6],(void*)0,(void*)0,&g_327,&g_537[4]},{&g_534,(void*)0,&g_537[2],&g_327,&g_327,&g_537[6],&g_537[6]},{&g_537[6],&g_537[6],&g_537[6],&g_534,&g_537[8],(void*)0,&g_537[7]}},{{&g_537[6],&g_534,&g_534,&g_537[7],&g_534,&g_537[4],&g_537[6]},{&g_537[4],(void*)0,&g_534,&g_537[6],&g_327,&g_327,&g_537[6]},{&g_537[6],&g_537[6],&g_537[6],&g_537[7],(void*)0,(void*)0,&g_534},{(void*)0,(void*)0,&g_537[2],&g_534,&g_327,&g_327,&g_327},{&g_537[0],(void*)0,&g_537[6],&g_537[2],&g_534,(void*)0,&g_327}},{{&g_327,&g_327,&g_534,&g_537[6],&g_537[6],&g_327,&g_537[2]},{(void*)0,&g_537[6],&g_327,&g_537[6],&g_537[0],&g_537[4],(void*)0},{(void*)0,&g_537[6],&g_327,(void*)0,&g_534,(void*)0,&g_327},{&g_327,&g_327,&g_327,(void*)0,&g_534,&g_537[6],(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,&g_327,&g_327,(void*)0}}};
                    int64_t l_600 = 0xCF5648A8A315DE52LL;
                    int i, j, k;
                    if ((l_270[l_456] = ((((l_397 &= ((*l_438) = (g_150.f5 , ((((safe_div_func_uint16_t_u_u(((*l_590) = ((g_580 , ((safe_rshift_func_int8_t_s_s((0x25668F2CL > (l_222[4][3] |= g_272)), g_43)) > ((((safe_rshift_func_int8_t_s_s(0x4DL, (!((safe_mod_func_uint16_t_u_u(((*p_77) & ((l_588[7] && (g_589 , p_78)) > 0x5436L)), p_78)) <= (*p_77))))) | (-5L)) ^ (*l_546)) != (*g_502)))) ^ 0x13L)), l_212)) == p_78) <= p_78) < 0UL)))) <= 0xCA29L) && l_287) , p_78)))
                    { /* block id: 238 */
                        int8_t * const * volatile *l_593 = &g_591;
                        uint64_t *l_624 = (void*)0;
                        uint64_t *l_625 = &g_59;
                        int64_t *l_628 = (void*)0;
                        int64_t *l_629 = (void*)0;
                        int64_t *l_630 = (void*)0;
                        int64_t *l_631 = &l_321;
                        int i;
                        (*l_593) = g_591;
                        l_632 &= ((l_222[1][4] = (safe_add_func_int8_t_s_s((((((*l_427) = (safe_mod_func_uint8_t_u_u((l_598[1][1][2] != (l_222[5][0] , l_599)), (l_600 & (safe_add_func_int32_t_s_s(p_78, g_441.f0)))))) != ((*l_631) = ((*p_77) = (p_78 || (((((safe_sub_func_int8_t_s_s((safe_lshift_func_int8_t_s_u((((((((((safe_div_func_uint16_t_u_u((((*l_625) = (safe_div_func_int64_t_s_s((safe_rshift_func_int16_t_s_s(((safe_sub_func_uint8_t_u_u((safe_lshift_func_uint8_t_u_s((safe_unary_minus_func_uint64_t_u((safe_div_func_int64_t_s_s(((safe_add_func_int8_t_s_s(((g_43 || ((p_78 , p_78) || 65532UL)) > g_57[3]), 0xBAL)) | p_78), (*p_77))))), 7)), (-8L))) > p_78), l_622)), l_623))) , l_626), g_537[6].f4)) != g_490) >= 1L) , l_270[l_456]) , l_344[5][0][6]) , p_78) <= g_537[6].f2) & 0x80L) > p_78), 3)), p_78)) != 8UL) , l_627[7]) == l_627[7]) || g_327.f4))))) | g_150.f9) > p_78), 9UL))) , (**g_501));
                        (*g_634) = l_633;
                    }
                    else
                    { /* block id: 247 */
                        (*l_548) &= 2L;
                    }
                    return l_636[1];
                }
                if (l_637)
                    break;
                for (g_342.f5 = 0; (g_342.f5 <= 7); g_342.f5 += 1)
                { /* block id: 255 */
                    int16_t *l_650[4][10][4] = {{{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43}},{{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43}},{{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43}},{{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_43,&g_43},{&g_342.f5,&g_342.f5,&g_150.f5,&g_150.f5},{&g_43,&g_342.f5,&g_150.f5,&g_43}}};
                    int32_t l_652[10][5] = {{1L,1L,1L,1L,1L},{(-1L),6L,(-1L),6L,(-1L)},{1L,1L,1L,1L,1L},{(-1L),6L,(-1L),6L,(-1L)},{1L,1L,1L,1L,1L},{(-1L),6L,(-1L),6L,(-1L)},{1L,1L,1L,1L,1L},{(-1L),6L,(-1L),6L,(-1L)},{1L,1L,1L,1L,1L},{(-1L),6L,(-1L),6L,(-1L)}};
                    uint8_t **l_661 = &g_299;
                    struct S2 *l_674 = &g_675;
                    uint16_t l_694 = 5UL;
                    int i, j, k;
                    if (((*l_549) = ((((safe_sub_func_int16_t_s_s(((g_57[l_456] > (l_588[g_342.f5] | ((0x0FBAF6CAL ^ g_580.f3) >= (safe_sub_func_uint32_t_u_u((safe_mod_func_int8_t_s_s((l_222[4][3] > ((((&l_397 != ((*l_548) , (*g_501))) , ((safe_lshift_func_int8_t_s_s(((safe_add_func_int16_t_s_s(p_78, (*l_548))) , l_632), 3)) | p_78)) , l_344[3][0][3]) && l_588[g_342.f5])), 255UL)), p_78))))) & p_78), p_78)) != g_342.f1) > (*p_77)) <= l_648[1][0])))
                    { /* block id: 257 */
                        return g_651;
                    }
                    else
                    { /* block id: 259 */
                        uint32_t l_653[1][7][1];
                        int i, j, k;
                        for (i = 0; i < 1; i++)
                        {
                            for (j = 0; j < 7; j++)
                            {
                                for (k = 0; k < 1; k++)
                                    l_653[i][j][k] = 0x1057AF59L;
                            }
                        }
                        (*l_550) = p_78;
                        ++l_653[0][2][0];
                    }
                    if ((safe_div_func_uint64_t_u_u((g_658 , (safe_add_func_int16_t_s_s(((((l_435 == l_435) == (p_78 < ((void*)0 == &g_545[4][0][0]))) > (((*l_661) = &p_78) != ((((*l_438) = ((g_662 , ((*l_427)++)) , (l_652[0][4] <= g_327.f8))) | 0UL) , &p_78))) != p_78), p_78))), g_327.f2)))
                    { /* block id: 266 */
                        (*g_501) = l_559[3];
                        if (p_78)
                            break;
                    }
                    else
                    { /* block id: 269 */
                        uint16_t l_665 = 65534UL;
                        int32_t l_668[10][7] = {{0L,0L,0x19C2DA02L,0x581717D0L,0x80CFF565L,0x5F97A25EL,0x8AFA2D44L},{0xFA279486L,0L,0x02E7F61EL,0x0F07BF3EL,1L,0xBCE2CF56L,1L},{0x9480B02FL,0L,0L,0x9480B02FL,7L,6L,0x8BF27E84L},{0x80CFF565L,0L,0x581717D0L,0xD065AA1DL,6L,0x95AE978BL,0xFA279486L},{0xFA279486L,0xE1D88D23L,0x19C2DA02L,0x8BF27E84L,0x63CC5E2BL,(-5L),0L},{0x95AE978BL,0x80CFF565L,0L,0x4CD4BADFL,0x8BF27E84L,1L,(-1L)},{0x99C0F60BL,0x581717D0L,0x8BF27E84L,0x0F07BF3EL,0x8BF27E84L,0x581717D0L,0x99C0F60BL},{0L,0x8BF27E84L,0x02E7F61EL,0x8AFA2D44L,0x63CC5E2BL,(-1L),(-1L)},{0x4CD4BADFL,0x19C2DA02L,0xBCE2CF56L,0x99C0F60BL,6L,(-1L),(-1L)},{0xE1D88D23L,7L,0x02E7F61EL,0x80CFF565L,0x19C2DA02L,0x99C0F60BL,0x581717D0L}};
                        uint16_t l_669 = 65533UL;
                        int i, j;
                        l_665--;
                        (*g_501) = (*g_501);
                        l_669++;
                    }
                    for (g_289 = 0; (g_289 <= 3); g_289 += 1)
                    { /* block id: 276 */
                        int i;
                        l_652[0][4] = ((safe_sub_func_uint64_t_u_u(g_441.f2, (g_635[g_342.f5] == l_674))) && (((safe_add_func_uint64_t_u_u((0xEA2B8882B30B56A9LL > ((l_678 = l_678) == l_679)), (safe_unary_minus_func_int8_t_s((((safe_unary_minus_func_uint32_t_u((((safe_add_func_uint64_t_u_u((safe_add_func_int32_t_s_s((0UL && (safe_rshift_func_int16_t_s_u((safe_mul_func_int16_t_s_s((+(!l_397)), ((((0L < g_692) <= (*p_77)) < g_289) , l_693[4]))), 0))), 0xDE895C66L)), g_146)) || p_78) , 0xBDBA2E1CL))) | 0x709D86889EABBBA6LL) , l_693[6]))))) , (*p_77)) && g_43));
                        if (l_552)
                            continue;
                        --l_694;
                    }
                }
                for (l_321 = 4; (l_321 >= 1); l_321 -= 1)
                { /* block id: 285 */
                    int8_t l_709 = (-3L);
                    int32_t l_710 = 0xA6A1EB3FL;
                    (*l_550) |= (safe_add_func_uint32_t_u_u(((**g_501) == (safe_div_func_uint8_t_u_u(((g_701 , ((g_702 , ((safe_rshift_func_uint8_t_u_s(((safe_add_func_int64_t_s_s(g_702.f1, g_150.f0)) && (g_169[2][4][0] , (((safe_lshift_func_int8_t_s_u(((void*)0 != &g_147), (0x9F2B81AEF765F8A7LL != (*p_77)))) , p_78) != (-1L)))), 5)) != p_78)) == (-10L))) && (*g_592)), (*g_592)))), 0x75CF7156L));
                    for (l_622 = 0; (l_622 <= 0); l_622 += 1)
                    { /* block id: 289 */
                        if (p_78)
                            break;
                        ++l_711;
                        (*g_370) = g_714[0];
                    }
                }
            }
        }
    }
lbl_822:
    if ((safe_mod_func_int64_t_s_s(g_57[0], (*p_77))))
    { /* block id: 298 */
        int32_t *l_717 = &g_227;
        (*l_717) = (l_270[3] &= ((void*)0 == &l_622));
        if (g_701.f2)
            goto lbl_822;
    }
    else
    { /* block id: 301 */
        uint16_t *l_726[5] = {&g_272,&g_272,&g_272,&g_272,&g_272};
        uint16_t **l_725 = &l_726[0];
        int32_t l_786 = 1L;
        const int32_t l_809 = (-1L);
        uint32_t *l_816 = &g_75;
        int i;
        for (g_80 = (-4); (g_80 >= 22); g_80 = safe_add_func_uint64_t_u_u(g_80, 1))
        { /* block id: 304 */
            uint8_t *l_724 = &g_111;
            int32_t l_729 = (-1L);
            uint64_t *l_732[1];
            int32_t l_733 = (-3L);
            struct S2 *l_762 = &g_150;
            uint16_t * const *l_771 = &l_726[0];
            uint16_t * const **l_770[5];
            int i;
            for (i = 0; i < 1; i++)
                l_732[i] = &g_202;
            for (i = 0; i < 5; i++)
                l_770[i] = &l_771;
            if ((safe_mul_func_int8_t_s_s(((l_733 ^= (((((safe_lshift_func_uint8_t_u_u(((*l_724) = p_78), (g_342.f2 > p_78))) , l_725) != l_727) & l_729) , (safe_lshift_func_uint16_t_u_s(((*l_728) = p_78), 10)))) || ((safe_lshift_func_uint8_t_u_u((safe_add_func_uint32_t_u_u((0L != (safe_sub_func_uint16_t_u_u((g_441.f4 , l_740), 65528UL))), p_78)), 0)) > l_729)), l_729)))
            { /* block id: 308 */
                return l_726[0];
            }
            else
            { /* block id: 310 */
                int8_t *l_742 = &l_622;
                int8_t **l_741 = &l_742;
                const int32_t l_774[9][10][2] = {{{(-9L),(-3L)},{0x08C3E09EL,1L},{0L,0x98153ABBL},{0x7BD1A30BL,0x00BF0732L},{4L,1L},{0x98153ABBL,1L},{4L,0x00BF0732L},{0x7BD1A30BL,0x98153ABBL},{0L,1L},{0x08C3E09EL,(-3L)}},{{(-9L),4L},{0x67BDBA38L,0x67BDBA38L},{(-2L),0x7BD1A30BL},{0x6851D42BL,0xDBA84814L},{0xF4DCF1C8L,0xF449ED7EL},{1L,0xF4DCF1C8L},{1L,0x5C4028E2L},{1L,0xF4DCF1C8L},{1L,0xF449ED7EL},{0xF4DCF1C8L,0xDBA84814L}},{{0x6851D42BL,0x7BD1A30BL},{(-2L),0x67BDBA38L},{0x67BDBA38L,4L},{(-9L),(-3L)},{0x08C3E09EL,1L},{0L,0x98153ABBL},{0x7BD1A30BL,0x00BF0732L},{4L,1L},{0x98153ABBL,1L},{4L,0x00BF0732L}},{{0x7BD1A30BL,0x98153ABBL},{0L,1L},{0x08C3E09EL,(-3L)},{(-9L),4L},{0x67BDBA38L,0x67BDBA38L},{(-2L),0x7BD1A30BL},{0x6851D42BL,0xDBA84814L},{0xF4DCF1C8L,0xF449ED7EL},{1L,0xF4DCF1C8L},{1L,0x5C4028E2L}},{{1L,0xF4DCF1C8L},{1L,0xF449ED7EL},{0xF4DCF1C8L,0xDBA84814L},{0x6851D42BL,0x7BD1A30BL},{(-2L),0x67BDBA38L},{0x67BDBA38L,4L},{(-9L),(-3L)},{0x08C3E09EL,1L},{0L,0x98153ABBL},{0x7BD1A30BL,0x00BF0732L}},{{4L,1L},{0x98153ABBL,1L},{4L,0x00BF0732L},{0x7BD1A30BL,0x98153ABBL},{0L,1L},{0x08C3E09EL,(-3L)},{(-9L),4L},{0x67BDBA38L,0x67BDBA38L},{(-2L),0x7BD1A30BL},{0x6851D42BL,0xDBA84814L}},{{0xF4DCF1C8L,0xF449ED7EL},{1L,0xF4DCF1C8L},{1L,0x5C4028E2L},{1L,0xF4DCF1C8L},{1L,0xF449ED7EL},{0xF4DCF1C8L,0xDBA84814L},{0x6851D42BL,0x7BD1A30BL},{(-2L),0x67BDBA38L},{0x67BDBA38L,4L},{1L,0x5C4028E2L}},{{0x67BDBA38L,(-2L)},{1L,0xDBA84814L},{4L,0x08C3E09EL},{0x259EE56AL,(-3L)},{0xDBA84814L,(-3L)},{0x259EE56AL,0x08C3E09EL},{4L,0xDBA84814L},{1L,(-2L)},{0x67BDBA38L,0x5C4028E2L},{1L,0x259EE56AL}},{{(-1L),(-1L)},{0x98153ABBL,4L},{0xF449ED7EL,1L},{0L,0xF4DCF1C8L},{0xD9A09DC0L,0L},{(-2L),1L},{(-2L),0L},{0xD9A09DC0L,0xF4DCF1C8L},{0L,1L},{0xF449ED7EL,4L}}};
                int32_t l_775 = 0xA2B939CFL;
                int i, j, k;
                l_743 = l_741;
                if ((*g_502))
                { /* block id: 312 */
                    for (l_321 = (-15); (l_321 == 27); ++l_321)
                    { /* block id: 315 */
                        if (l_729)
                            break;
                        if (g_702.f8)
                            goto lbl_747;
                    }
                    for (g_251 = 0; (g_251 != (-7)); g_251 = safe_sub_func_uint16_t_u_u(g_251, 1))
                    { /* block id: 321 */
                        struct S0 *l_750 = &g_537[0];
                        l_751[2] = l_750;
                        (*g_753) = l_752;
                        if (p_78)
                            continue;
                    }
                    for (g_701.f3 = 0; (g_701.f3 <= 6); g_701.f3 += 1)
                    { /* block id: 328 */
                        if (p_78)
                            break;
                    }
                }
                else
                { /* block id: 331 */
                    int32_t l_772[5];
                    const uint8_t l_773 = 0UL;
                    int32_t *l_776 = &l_252;
                    int i;
                    for (i = 0; i < 5; i++)
                        l_772[i] = (-1L);
                    (*l_776) |= ((safe_lshift_func_int16_t_s_u((p_78 > (safe_lshift_func_int16_t_s_s((safe_sub_func_uint8_t_u_u((l_775 = ((safe_lshift_func_uint8_t_u_u((((l_762 == (*g_369)) <= (+(-1L))) , ((safe_add_func_int64_t_s_s((*p_77), (safe_sub_func_int8_t_s_s((safe_div_func_int32_t_s_s(((void*)0 == l_770[3]), l_772[4])), (l_773 != l_774[5][4][0]))))) <= (-1L))), 5)) || 0x6ED3L)), 255UL)), 9))), p_78)) ^ g_371.f7);
                    (*l_776) = (+(*l_776));
                    (*g_501) = (*g_501);
                    for (g_43 = 5; (g_43 >= (-10)); --g_43)
                    { /* block id: 338 */
                        return l_728;
                    }
                }
                if (p_78)
                    break;
            }
            for (g_342.f5 = 0; (g_342.f5 >= 18); g_342.f5 = safe_add_func_uint64_t_u_u(g_342.f5, 4))
            { /* block id: 346 */
                struct S2 *l_782 = &g_342;
                struct S2 **l_783 = &l_782;
                (*l_783) = l_782;
                if (p_78)
                    break;
                return l_636[1];
            }
        }
        (*g_819) = ((((((safe_mul_func_int8_t_s_s(p_78, (l_786 = p_78))) >= (safe_div_func_uint64_t_u_u(((safe_sub_func_uint8_t_u_u(p_78, (safe_div_func_int64_t_s_s((((-3L) >= ((*l_816) ^= (((safe_add_func_int16_t_s_s((l_795[0][3] && ((++(*l_450)) , ((safe_div_func_uint64_t_u_u(((safe_lshift_func_uint8_t_u_s((safe_mul_func_uint8_t_u_u((((**g_591) > ((((safe_sub_func_int32_t_s_s((0x27F7EA81D353E49CLL == ((void*)0 != l_808[2])), (-1L))) & 0L) < (*g_592)) != p_78)) != p_78), l_809)), (*g_592))) == p_78), g_714[0].f6)) || (**g_591)))), 0x01F7L)) , (void*)0) != g_810))) | 65535UL), 0xF889BFA28EE5991ELL)))) > p_78), g_327.f2))) || p_78) == 0x93L) , (**g_369)) , l_817);
    }
    (*l_824) ^= ((g_823 , &g_820) != &l_817);
    return l_636[1];
}


/* ------------------------------------------ */
/* 
 * reads : g_80 g_12 g_106 g_75 g_59 g_111 g_70 g_74 g_130 g_137 g_147 g_150 g_151 g_155 g_169 g_146 g_57 g_96 g_198 g_43 g_202
 * writes: g_80 g_70 g_75 g_96 g_43 g_130 g_111 g_146 g_148 g_150 g_202
 */
static uint16_t  func_87(const uint32_t  p_88, uint32_t * p_89, int8_t * p_90, uint32_t * p_91, int32_t  p_92)
{ /* block id: 10 */
    int32_t l_107 = 1L;
    int64_t l_109 = 0xD590955184556A32LL;
    int32_t l_128 = (-1L);
    int32_t l_129 = 0x35459D1AL;
    int8_t l_154[7][9] = {{0L,0x13L,8L,0x13L,0L,0x13L,8L,0x13L,0L},{0L,0x86L,(-1L),0x87L,0x87L,(-1L),0x86L,0L,0L},{6L,0x13L,6L,0xBAL,6L,0x13L,6L,0xBAL,6L},{0L,0x87L,0x86L,0x86L,0x87L,0L,(-1L),(-1L),0L},{0L,0xBAL,8L,0xBAL,0L,0xBAL,8L,0xBAL,0L},{0x87L,0x86L,0x86L,0x87L,0L,(-1L),(-1L),0L,0x87L},{6L,0xBAL,6L,0x13L,6L,0xBAL,6L,0x13L,6L}};
    uint32_t *l_156 = (void*)0;
    struct S2 *l_177 = &g_150;
    int32_t l_200[2];
    int32_t **l_205 = &g_148[2][0];
    int32_t *l_206 = &l_129;
    int i, j;
    for (i = 0; i < 2; i++)
        l_200[i] = 0xCF3154E4L;
    for (g_80 = 0; (g_80 != (-4)); g_80 = safe_sub_func_uint16_t_u_u(g_80, 4))
    { /* block id: 13 */
        uint8_t *l_110[2];
        int32_t l_112 = (-7L);
        int32_t *l_113[1];
        struct S2 *l_166 = &g_150;
        struct S2 **l_165 = &l_166;
        int16_t *l_176 = (void*)0;
        int16_t *l_178 = (void*)0;
        int16_t *l_179 = &g_43;
        int64_t l_201 = 5L;
        int i;
        for (i = 0; i < 2; i++)
            l_110[i] = &g_111;
        for (i = 0; i < 1; i++)
            l_113[i] = &g_96;
        if ((g_96 = ((safe_sub_func_int16_t_s_s((((g_70[3][5][4] = g_12[0]) >= ((safe_div_func_int8_t_s_s(((void*)0 != &g_80), (safe_unary_minus_func_uint64_t_u(((g_106 , 0x18E4L) > l_107))))) , (l_112 = (((*p_89) = ((0x2202L & ((1L & (!((*p_91) != g_106.f0))) , g_106.f2)) < l_109)) <= 0x0FBD7C4EL)))) || 1UL), g_59)) & p_88)))
        { /* block id: 18 */
            int16_t *l_116 = &g_43;
            int32_t l_117 = 0xABA0674BL;
            p_92 = (safe_mod_func_uint64_t_u_u((((*l_116) = g_111) || (l_117 == ((((&l_109 != ((safe_sub_func_int8_t_s_s((safe_mul_func_uint8_t_u_u((safe_mod_func_int16_t_s_s(((((void*)0 != &g_75) == ((*p_90) && 255UL)) || ((safe_mul_func_int16_t_s_s(l_109, (safe_div_func_int16_t_s_s(((void*)0 == &g_59), g_111)))) == l_107)), p_88)), g_80)), l_117)) , &g_80)) , 4294967295UL) && g_74) ^ p_92))), l_117));
            g_130++;
        }
        else
        { /* block id: 22 */
            int16_t l_138 = 0x8383L;
            int32_t *l_145 = &l_128;
            int32_t **l_149 = &l_145;
            (*g_147) = ((safe_mul_func_int8_t_s_s((safe_mul_func_uint8_t_u_u((g_111 = (g_137[5] , l_138)), ((g_146 = (safe_mul_func_int8_t_s_s((((safe_lshift_func_uint8_t_u_s(0UL, 7)) > (((0x72512C82L | (p_92 = 3L)) | 0xBBB4AFCFL) , g_130)) <= (((void*)0 == l_145) < g_70[3][5][4])), (*p_90)))) != l_128))), 255UL)) , &l_112);
            (*l_145) |= (0x00L == p_88);
            (*l_149) = &p_92;
            (*g_151) = g_150;
        }
        if (((safe_sub_func_uint16_t_u_u((((l_154[5][3] | (g_155 , (l_156 != l_156))) , ((*l_179) = (safe_rshift_func_int16_t_s_s((safe_mul_func_int16_t_s_s((safe_rshift_func_uint16_t_u_u((safe_sub_func_int8_t_s_s((((*l_165) = &g_150) == ((safe_mul_func_int16_t_s_s((l_129 = ((*p_91) < ((g_169[2][4][0] , ((1L != ((safe_sub_func_uint64_t_u_u((((((((safe_lshift_func_uint16_t_u_s((safe_rshift_func_uint16_t_u_u(p_88, 6)), g_146)) , g_57[3]) , &g_70[3][5][4]) != l_110[0]) >= 2UL) , (void*)0) == (void*)0), g_137[5].f4)) == p_88)) == p_92)) <= 0xE716L))), g_80)) , l_177)), g_57[3])), p_92)), g_74)), g_150.f7)))) <= p_88), p_92)) && (-2L)))
        { /* block id: 34 */
            (*l_177) = (*l_177);
            p_92 = (safe_rshift_func_uint16_t_u_s(g_169[2][4][0].f0, 5));
        }
        else
        { /* block id: 37 */
            int32_t *l_182 = &g_96;
            int32_t **l_184 = &l_113[0];
            int32_t l_199 = 0xDEDF0D3EL;
            (*l_177) = (*g_151);
            l_128 ^= (p_92 = (l_154[2][1] || ((void*)0 != &g_150)));
            (*l_184) = l_182;
            l_199 |= (safe_div_func_uint16_t_u_u((!((*l_179) = (safe_div_func_uint32_t_u_u((((g_150.f9 | ((safe_mul_func_int8_t_s_s(l_109, (((*p_91) = (safe_rshift_func_int16_t_s_s((safe_lshift_func_int8_t_s_u((p_92 & (0L > (((*l_182) == ((g_111 |= ((((safe_div_func_uint16_t_u_u(((g_198 , &g_150) != (void*)0), 0xB0D8L)) , &p_92) == &g_12[0]) == 0x17964D27L)) < 0xDCL)) < (*p_91)))), 3)), g_150.f9))) >= g_150.f6))) <= g_43)) || (-1L)) <= p_92), 1L)))), 0x54BAL));
        }
        ++g_202;
    }
    (*l_205) = (void*)0;
    (*l_206) |= p_92;
    return g_150.f8;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 10; i++)
    {
        transparent_crc(g_12[i], "g_12[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_29, "g_29", print_hash_value);
    transparent_crc(g_43, "g_43", print_hash_value);
    for (i = 0; i < 4; i++)
    {
        transparent_crc(g_57[i], "g_57[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_59, "g_59", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 9; j++)
        {
            for (k = 0; k < 5; k++)
            {
                transparent_crc(g_70[i][j][k], "g_70[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_74, "g_74", print_hash_value);
    transparent_crc(g_75, "g_75", print_hash_value);
    transparent_crc(g_80, "g_80", print_hash_value);
    transparent_crc(g_96, "g_96", print_hash_value);
    transparent_crc(g_106.f0, "g_106.f0", print_hash_value);
    transparent_crc(g_106.f1, "g_106.f1", print_hash_value);
    transparent_crc(g_106.f2, "g_106.f2", print_hash_value);
    transparent_crc(g_106.f3, "g_106.f3", print_hash_value);
    transparent_crc(g_111, "g_111", print_hash_value);
    transparent_crc(g_130, "g_130", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_137[i].f0, "g_137[i].f0", print_hash_value);
        transparent_crc(g_137[i].f1, "g_137[i].f1", print_hash_value);
        transparent_crc(g_137[i].f2, "g_137[i].f2", print_hash_value);
        transparent_crc(g_137[i].f3, "g_137[i].f3", print_hash_value);
        transparent_crc(g_137[i].f4, "g_137[i].f4", print_hash_value);
        transparent_crc(g_137[i].f5, "g_137[i].f5", print_hash_value);
        transparent_crc(g_137[i].f6, "g_137[i].f6", print_hash_value);
        transparent_crc(g_137[i].f7, "g_137[i].f7", print_hash_value);
        transparent_crc(g_137[i].f8, "g_137[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_146, "g_146", print_hash_value);
    transparent_crc(g_150.f0, "g_150.f0", print_hash_value);
    transparent_crc(g_150.f1, "g_150.f1", print_hash_value);
    transparent_crc(g_150.f2, "g_150.f2", print_hash_value);
    transparent_crc(g_150.f3, "g_150.f3", print_hash_value);
    transparent_crc(g_150.f4, "g_150.f4", print_hash_value);
    transparent_crc(g_150.f5, "g_150.f5", print_hash_value);
    transparent_crc(g_150.f6, "g_150.f6", print_hash_value);
    transparent_crc(g_150.f7, "g_150.f7", print_hash_value);
    transparent_crc(g_150.f8, "g_150.f8", print_hash_value);
    transparent_crc(g_150.f9, "g_150.f9", print_hash_value);
    transparent_crc(g_155.f0, "g_155.f0", print_hash_value);
    transparent_crc(g_155.f1, "g_155.f1", print_hash_value);
    transparent_crc(g_155.f2, "g_155.f2", print_hash_value);
    transparent_crc(g_155.f3, "g_155.f3", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(g_169[i][j][k].f0, "g_169[i][j][k].f0", print_hash_value);
                transparent_crc(g_169[i][j][k].f1, "g_169[i][j][k].f1", print_hash_value);
                transparent_crc(g_169[i][j][k].f2, "g_169[i][j][k].f2", print_hash_value);
                transparent_crc(g_169[i][j][k].f3, "g_169[i][j][k].f3", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_198.f0, "g_198.f0", print_hash_value);
    transparent_crc(g_198.f1, "g_198.f1", print_hash_value);
    transparent_crc(g_198.f2, "g_198.f2", print_hash_value);
    transparent_crc(g_198.f3, "g_198.f3", print_hash_value);
    transparent_crc(g_198.f4, "g_198.f4", print_hash_value);
    transparent_crc(g_198.f5, "g_198.f5", print_hash_value);
    transparent_crc(g_198.f6, "g_198.f6", print_hash_value);
    transparent_crc(g_198.f7, "g_198.f7", print_hash_value);
    transparent_crc(g_198.f8, "g_198.f8", print_hash_value);
    transparent_crc(g_202, "g_202", print_hash_value);
    transparent_crc(g_209, "g_209", print_hash_value);
    transparent_crc(g_227, "g_227", print_hash_value);
    transparent_crc(g_251, "g_251", print_hash_value);
    transparent_crc(g_272, "g_272", print_hash_value);
    transparent_crc(g_289, "g_289", print_hash_value);
    transparent_crc(g_327.f0, "g_327.f0", print_hash_value);
    transparent_crc(g_327.f1, "g_327.f1", print_hash_value);
    transparent_crc(g_327.f2, "g_327.f2", print_hash_value);
    transparent_crc(g_327.f3, "g_327.f3", print_hash_value);
    transparent_crc(g_327.f4, "g_327.f4", print_hash_value);
    transparent_crc(g_327.f5, "g_327.f5", print_hash_value);
    transparent_crc(g_327.f6, "g_327.f6", print_hash_value);
    transparent_crc(g_327.f7, "g_327.f7", print_hash_value);
    transparent_crc(g_327.f8, "g_327.f8", print_hash_value);
    transparent_crc(g_342.f0, "g_342.f0", print_hash_value);
    transparent_crc(g_342.f1, "g_342.f1", print_hash_value);
    transparent_crc(g_342.f2, "g_342.f2", print_hash_value);
    transparent_crc(g_342.f3, "g_342.f3", print_hash_value);
    transparent_crc(g_342.f4, "g_342.f4", print_hash_value);
    transparent_crc(g_342.f5, "g_342.f5", print_hash_value);
    transparent_crc(g_342.f6, "g_342.f6", print_hash_value);
    transparent_crc(g_342.f7, "g_342.f7", print_hash_value);
    transparent_crc(g_342.f8, "g_342.f8", print_hash_value);
    transparent_crc(g_342.f9, "g_342.f9", print_hash_value);
    transparent_crc(g_371.f0, "g_371.f0", print_hash_value);
    transparent_crc(g_371.f1, "g_371.f1", print_hash_value);
    transparent_crc(g_371.f2, "g_371.f2", print_hash_value);
    transparent_crc(g_371.f3, "g_371.f3", print_hash_value);
    transparent_crc(g_371.f4, "g_371.f4", print_hash_value);
    transparent_crc(g_371.f5, "g_371.f5", print_hash_value);
    transparent_crc(g_371.f6, "g_371.f6", print_hash_value);
    transparent_crc(g_371.f7, "g_371.f7", print_hash_value);
    transparent_crc(g_371.f8, "g_371.f8", print_hash_value);
    transparent_crc(g_371.f9, "g_371.f9", print_hash_value);
    transparent_crc(g_441.f0, "g_441.f0", print_hash_value);
    transparent_crc(g_441.f1, "g_441.f1", print_hash_value);
    transparent_crc(g_441.f2, "g_441.f2", print_hash_value);
    transparent_crc(g_441.f3, "g_441.f3", print_hash_value);
    transparent_crc(g_441.f4, "g_441.f4", print_hash_value);
    transparent_crc(g_441.f5, "g_441.f5", print_hash_value);
    transparent_crc(g_441.f6, "g_441.f6", print_hash_value);
    transparent_crc(g_441.f7, "g_441.f7", print_hash_value);
    transparent_crc(g_441.f8, "g_441.f8", print_hash_value);
    transparent_crc(g_490, "g_490", print_hash_value);
    transparent_crc(g_534.f0, "g_534.f0", print_hash_value);
    transparent_crc(g_534.f1, "g_534.f1", print_hash_value);
    transparent_crc(g_534.f2, "g_534.f2", print_hash_value);
    transparent_crc(g_534.f3, "g_534.f3", print_hash_value);
    transparent_crc(g_534.f4, "g_534.f4", print_hash_value);
    transparent_crc(g_534.f5, "g_534.f5", print_hash_value);
    transparent_crc(g_534.f6, "g_534.f6", print_hash_value);
    transparent_crc(g_534.f7, "g_534.f7", print_hash_value);
    transparent_crc(g_534.f8, "g_534.f8", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_537[i].f0, "g_537[i].f0", print_hash_value);
        transparent_crc(g_537[i].f1, "g_537[i].f1", print_hash_value);
        transparent_crc(g_537[i].f2, "g_537[i].f2", print_hash_value);
        transparent_crc(g_537[i].f3, "g_537[i].f3", print_hash_value);
        transparent_crc(g_537[i].f4, "g_537[i].f4", print_hash_value);
        transparent_crc(g_537[i].f5, "g_537[i].f5", print_hash_value);
        transparent_crc(g_537[i].f6, "g_537[i].f6", print_hash_value);
        transparent_crc(g_537[i].f7, "g_537[i].f7", print_hash_value);
        transparent_crc(g_537[i].f8, "g_537[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_565.f0, "g_565.f0", print_hash_value);
    transparent_crc(g_565.f1, "g_565.f1", print_hash_value);
    transparent_crc(g_565.f2, "g_565.f2", print_hash_value);
    transparent_crc(g_565.f3, "g_565.f3", print_hash_value);
    transparent_crc(g_565.f4, "g_565.f4", print_hash_value);
    transparent_crc(g_565.f5, "g_565.f5", print_hash_value);
    transparent_crc(g_565.f6, "g_565.f6", print_hash_value);
    transparent_crc(g_565.f7, "g_565.f7", print_hash_value);
    transparent_crc(g_565.f8, "g_565.f8", print_hash_value);
    transparent_crc(g_565.f9, "g_565.f9", print_hash_value);
    transparent_crc(g_566.f0, "g_566.f0", print_hash_value);
    transparent_crc(g_566.f1, "g_566.f1", print_hash_value);
    transparent_crc(g_566.f2, "g_566.f2", print_hash_value);
    transparent_crc(g_566.f3, "g_566.f3", print_hash_value);
    transparent_crc(g_566.f4, "g_566.f4", print_hash_value);
    transparent_crc(g_566.f5, "g_566.f5", print_hash_value);
    transparent_crc(g_566.f6, "g_566.f6", print_hash_value);
    transparent_crc(g_566.f7, "g_566.f7", print_hash_value);
    transparent_crc(g_566.f8, "g_566.f8", print_hash_value);
    transparent_crc(g_566.f9, "g_566.f9", print_hash_value);
    transparent_crc(g_580.f0, "g_580.f0", print_hash_value);
    transparent_crc(g_580.f1, "g_580.f1", print_hash_value);
    transparent_crc(g_580.f2, "g_580.f2", print_hash_value);
    transparent_crc(g_580.f3, "g_580.f3", print_hash_value);
    transparent_crc(g_580.f4, "g_580.f4", print_hash_value);
    transparent_crc(g_580.f5, "g_580.f5", print_hash_value);
    transparent_crc(g_580.f6, "g_580.f6", print_hash_value);
    transparent_crc(g_580.f7, "g_580.f7", print_hash_value);
    transparent_crc(g_580.f8, "g_580.f8", print_hash_value);
    transparent_crc(g_589.f0, "g_589.f0", print_hash_value);
    transparent_crc(g_589.f1, "g_589.f1", print_hash_value);
    transparent_crc(g_589.f2, "g_589.f2", print_hash_value);
    transparent_crc(g_589.f3, "g_589.f3", print_hash_value);
    transparent_crc(g_589.f4, "g_589.f4", print_hash_value);
    transparent_crc(g_589.f5, "g_589.f5", print_hash_value);
    transparent_crc(g_589.f6, "g_589.f6", print_hash_value);
    transparent_crc(g_589.f7, "g_589.f7", print_hash_value);
    transparent_crc(g_589.f8, "g_589.f8", print_hash_value);
    transparent_crc(g_658.f0, "g_658.f0", print_hash_value);
    transparent_crc(g_658.f1, "g_658.f1", print_hash_value);
    transparent_crc(g_658.f2, "g_658.f2", print_hash_value);
    transparent_crc(g_658.f3, "g_658.f3", print_hash_value);
    transparent_crc(g_658.f4, "g_658.f4", print_hash_value);
    transparent_crc(g_658.f5, "g_658.f5", print_hash_value);
    transparent_crc(g_658.f6, "g_658.f6", print_hash_value);
    transparent_crc(g_658.f7, "g_658.f7", print_hash_value);
    transparent_crc(g_658.f8, "g_658.f8", print_hash_value);
    transparent_crc(g_658.f9, "g_658.f9", print_hash_value);
    transparent_crc(g_662.f0, "g_662.f0", print_hash_value);
    transparent_crc(g_662.f1, "g_662.f1", print_hash_value);
    transparent_crc(g_662.f2, "g_662.f2", print_hash_value);
    transparent_crc(g_662.f3, "g_662.f3", print_hash_value);
    transparent_crc(g_675.f0, "g_675.f0", print_hash_value);
    transparent_crc(g_675.f1, "g_675.f1", print_hash_value);
    transparent_crc(g_675.f2, "g_675.f2", print_hash_value);
    transparent_crc(g_675.f3, "g_675.f3", print_hash_value);
    transparent_crc(g_675.f4, "g_675.f4", print_hash_value);
    transparent_crc(g_675.f5, "g_675.f5", print_hash_value);
    transparent_crc(g_675.f6, "g_675.f6", print_hash_value);
    transparent_crc(g_675.f7, "g_675.f7", print_hash_value);
    transparent_crc(g_675.f8, "g_675.f8", print_hash_value);
    transparent_crc(g_675.f9, "g_675.f9", print_hash_value);
    transparent_crc(g_692, "g_692", print_hash_value);
    transparent_crc(g_701.f0, "g_701.f0", print_hash_value);
    transparent_crc(g_701.f1, "g_701.f1", print_hash_value);
    transparent_crc(g_701.f2, "g_701.f2", print_hash_value);
    transparent_crc(g_701.f3, "g_701.f3", print_hash_value);
    transparent_crc(g_702.f0, "g_702.f0", print_hash_value);
    transparent_crc(g_702.f1, "g_702.f1", print_hash_value);
    transparent_crc(g_702.f2, "g_702.f2", print_hash_value);
    transparent_crc(g_702.f3, "g_702.f3", print_hash_value);
    transparent_crc(g_702.f4, "g_702.f4", print_hash_value);
    transparent_crc(g_702.f5, "g_702.f5", print_hash_value);
    transparent_crc(g_702.f6, "g_702.f6", print_hash_value);
    transparent_crc(g_702.f7, "g_702.f7", print_hash_value);
    transparent_crc(g_702.f8, "g_702.f8", print_hash_value);
    transparent_crc(g_702.f9, "g_702.f9", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_714[i].f0, "g_714[i].f0", print_hash_value);
        transparent_crc(g_714[i].f1, "g_714[i].f1", print_hash_value);
        transparent_crc(g_714[i].f2, "g_714[i].f2", print_hash_value);
        transparent_crc(g_714[i].f3, "g_714[i].f3", print_hash_value);
        transparent_crc(g_714[i].f4, "g_714[i].f4", print_hash_value);
        transparent_crc(g_714[i].f5, "g_714[i].f5", print_hash_value);
        transparent_crc(g_714[i].f6, "g_714[i].f6", print_hash_value);
        transparent_crc(g_714[i].f7, "g_714[i].f7", print_hash_value);
        transparent_crc(g_714[i].f8, "g_714[i].f8", print_hash_value);
        transparent_crc(g_714[i].f9, "g_714[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_812, "g_812", print_hash_value);
    transparent_crc(g_813, "g_813", print_hash_value);
    transparent_crc(g_814, "g_814", print_hash_value);
    transparent_crc(g_815, "g_815", print_hash_value);
    transparent_crc(g_823.f0, "g_823.f0", print_hash_value);
    transparent_crc(g_823.f1, "g_823.f1", print_hash_value);
    transparent_crc(g_823.f2, "g_823.f2", print_hash_value);
    transparent_crc(g_823.f3, "g_823.f3", print_hash_value);
    transparent_crc(g_823.f4, "g_823.f4", print_hash_value);
    transparent_crc(g_823.f5, "g_823.f5", print_hash_value);
    transparent_crc(g_823.f6, "g_823.f6", print_hash_value);
    transparent_crc(g_823.f7, "g_823.f7", print_hash_value);
    transparent_crc(g_823.f8, "g_823.f8", print_hash_value);
    transparent_crc(g_823.f9, "g_823.f9", print_hash_value);
    transparent_crc(g_836.f0, "g_836.f0", print_hash_value);
    transparent_crc(g_836.f1, "g_836.f1", print_hash_value);
    transparent_crc(g_836.f2, "g_836.f2", print_hash_value);
    transparent_crc(g_836.f3, "g_836.f3", print_hash_value);
    transparent_crc(g_836.f4, "g_836.f4", print_hash_value);
    transparent_crc(g_836.f5, "g_836.f5", print_hash_value);
    transparent_crc(g_836.f6, "g_836.f6", print_hash_value);
    transparent_crc(g_836.f7, "g_836.f7", print_hash_value);
    transparent_crc(g_836.f8, "g_836.f8", print_hash_value);
    transparent_crc(g_836.f9, "g_836.f9", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_866[i].f0, "g_866[i].f0", print_hash_value);
        transparent_crc(g_866[i].f1, "g_866[i].f1", print_hash_value);
        transparent_crc(g_866[i].f2, "g_866[i].f2", print_hash_value);
        transparent_crc(g_866[i].f3, "g_866[i].f3", print_hash_value);
        transparent_crc(g_866[i].f4, "g_866[i].f4", print_hash_value);
        transparent_crc(g_866[i].f5, "g_866[i].f5", print_hash_value);
        transparent_crc(g_866[i].f6, "g_866[i].f6", print_hash_value);
        transparent_crc(g_866[i].f7, "g_866[i].f7", print_hash_value);
        transparent_crc(g_866[i].f8, "g_866[i].f8", print_hash_value);
        transparent_crc(g_866[i].f9, "g_866[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_904, "g_904", print_hash_value);
    transparent_crc(g_923.f0, "g_923.f0", print_hash_value);
    transparent_crc(g_923.f1, "g_923.f1", print_hash_value);
    transparent_crc(g_923.f2, "g_923.f2", print_hash_value);
    transparent_crc(g_923.f3, "g_923.f3", print_hash_value);
    transparent_crc(g_923.f4, "g_923.f4", print_hash_value);
    transparent_crc(g_923.f5, "g_923.f5", print_hash_value);
    transparent_crc(g_923.f6, "g_923.f6", print_hash_value);
    transparent_crc(g_923.f7, "g_923.f7", print_hash_value);
    transparent_crc(g_923.f8, "g_923.f8", print_hash_value);
    transparent_crc(g_923.f9, "g_923.f9", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        transparent_crc(g_928[i].f0, "g_928[i].f0", print_hash_value);
        transparent_crc(g_928[i].f1, "g_928[i].f1", print_hash_value);
        transparent_crc(g_928[i].f2, "g_928[i].f2", print_hash_value);
        transparent_crc(g_928[i].f3, "g_928[i].f3", print_hash_value);
        transparent_crc(g_928[i].f4, "g_928[i].f4", print_hash_value);
        transparent_crc(g_928[i].f5, "g_928[i].f5", print_hash_value);
        transparent_crc(g_928[i].f6, "g_928[i].f6", print_hash_value);
        transparent_crc(g_928[i].f7, "g_928[i].f7", print_hash_value);
        transparent_crc(g_928[i].f8, "g_928[i].f8", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_954.f0, "g_954.f0", print_hash_value);
    transparent_crc(g_954.f1, "g_954.f1", print_hash_value);
    transparent_crc(g_954.f2, "g_954.f2", print_hash_value);
    transparent_crc(g_954.f3, "g_954.f3", print_hash_value);
    transparent_crc(g_954.f4, "g_954.f4", print_hash_value);
    transparent_crc(g_954.f5, "g_954.f5", print_hash_value);
    transparent_crc(g_954.f6, "g_954.f6", print_hash_value);
    transparent_crc(g_954.f7, "g_954.f7", print_hash_value);
    transparent_crc(g_954.f8, "g_954.f8", print_hash_value);
    transparent_crc(g_954.f9, "g_954.f9", print_hash_value);
    transparent_crc(g_976.f0, "g_976.f0", print_hash_value);
    transparent_crc(g_976.f1, "g_976.f1", print_hash_value);
    transparent_crc(g_976.f2, "g_976.f2", print_hash_value);
    transparent_crc(g_976.f3, "g_976.f3", print_hash_value);
    transparent_crc(g_976.f4, "g_976.f4", print_hash_value);
    transparent_crc(g_976.f5, "g_976.f5", print_hash_value);
    transparent_crc(g_976.f6, "g_976.f6", print_hash_value);
    transparent_crc(g_976.f7, "g_976.f7", print_hash_value);
    transparent_crc(g_976.f8, "g_976.f8", print_hash_value);
    transparent_crc(g_993.f0, "g_993.f0", print_hash_value);
    transparent_crc(g_993.f1, "g_993.f1", print_hash_value);
    transparent_crc(g_993.f2, "g_993.f2", print_hash_value);
    transparent_crc(g_993.f3, "g_993.f3", print_hash_value);
    transparent_crc(g_1002, "g_1002", print_hash_value);
    transparent_crc(g_1026.f0, "g_1026.f0", print_hash_value);
    transparent_crc(g_1026.f1, "g_1026.f1", print_hash_value);
    transparent_crc(g_1026.f2, "g_1026.f2", print_hash_value);
    transparent_crc(g_1026.f3, "g_1026.f3", print_hash_value);
    transparent_crc(g_1040.f0, "g_1040.f0", print_hash_value);
    transparent_crc(g_1040.f1, "g_1040.f1", print_hash_value);
    transparent_crc(g_1040.f2, "g_1040.f2", print_hash_value);
    transparent_crc(g_1040.f3, "g_1040.f3", print_hash_value);
    transparent_crc(g_1040.f4, "g_1040.f4", print_hash_value);
    transparent_crc(g_1040.f5, "g_1040.f5", print_hash_value);
    transparent_crc(g_1040.f6, "g_1040.f6", print_hash_value);
    transparent_crc(g_1040.f7, "g_1040.f7", print_hash_value);
    transparent_crc(g_1040.f8, "g_1040.f8", print_hash_value);
    transparent_crc(g_1040.f9, "g_1040.f9", print_hash_value);
    transparent_crc(g_1077, "g_1077", print_hash_value);
    transparent_crc(g_1080, "g_1080", print_hash_value);
    transparent_crc(g_1083.f0, "g_1083.f0", print_hash_value);
    transparent_crc(g_1083.f1, "g_1083.f1", print_hash_value);
    transparent_crc(g_1083.f2, "g_1083.f2", print_hash_value);
    transparent_crc(g_1083.f3, "g_1083.f3", print_hash_value);
    transparent_crc(g_1084.f0, "g_1084.f0", print_hash_value);
    transparent_crc(g_1084.f1, "g_1084.f1", print_hash_value);
    transparent_crc(g_1084.f2, "g_1084.f2", print_hash_value);
    transparent_crc(g_1084.f3, "g_1084.f3", print_hash_value);
    transparent_crc(g_1084.f4, "g_1084.f4", print_hash_value);
    transparent_crc(g_1084.f5, "g_1084.f5", print_hash_value);
    transparent_crc(g_1084.f6, "g_1084.f6", print_hash_value);
    transparent_crc(g_1084.f7, "g_1084.f7", print_hash_value);
    transparent_crc(g_1084.f8, "g_1084.f8", print_hash_value);
    transparent_crc(g_1084.f9, "g_1084.f9", print_hash_value);
    transparent_crc(g_1085.f0, "g_1085.f0", print_hash_value);
    transparent_crc(g_1085.f1, "g_1085.f1", print_hash_value);
    transparent_crc(g_1085.f2, "g_1085.f2", print_hash_value);
    transparent_crc(g_1085.f3, "g_1085.f3", print_hash_value);
    transparent_crc(g_1085.f4, "g_1085.f4", print_hash_value);
    transparent_crc(g_1085.f5, "g_1085.f5", print_hash_value);
    transparent_crc(g_1085.f6, "g_1085.f6", print_hash_value);
    transparent_crc(g_1085.f7, "g_1085.f7", print_hash_value);
    transparent_crc(g_1085.f8, "g_1085.f8", print_hash_value);
    transparent_crc(g_1085.f9, "g_1085.f9", print_hash_value);
    transparent_crc(g_1147.f0, "g_1147.f0", print_hash_value);
    transparent_crc(g_1147.f1, "g_1147.f1", print_hash_value);
    transparent_crc(g_1147.f2, "g_1147.f2", print_hash_value);
    transparent_crc(g_1147.f3, "g_1147.f3", print_hash_value);
    transparent_crc(g_1169.f0, "g_1169.f0", print_hash_value);
    transparent_crc(g_1169.f1, "g_1169.f1", print_hash_value);
    transparent_crc(g_1169.f2, "g_1169.f2", print_hash_value);
    transparent_crc(g_1169.f3, "g_1169.f3", print_hash_value);
    transparent_crc(g_1169.f4, "g_1169.f4", print_hash_value);
    transparent_crc(g_1169.f5, "g_1169.f5", print_hash_value);
    transparent_crc(g_1169.f6, "g_1169.f6", print_hash_value);
    transparent_crc(g_1169.f7, "g_1169.f7", print_hash_value);
    transparent_crc(g_1169.f8, "g_1169.f8", print_hash_value);
    transparent_crc(g_1182.f0, "g_1182.f0", print_hash_value);
    transparent_crc(g_1182.f1, "g_1182.f1", print_hash_value);
    transparent_crc(g_1182.f2, "g_1182.f2", print_hash_value);
    transparent_crc(g_1182.f3, "g_1182.f3", print_hash_value);
    transparent_crc(g_1182.f4, "g_1182.f4", print_hash_value);
    transparent_crc(g_1182.f5, "g_1182.f5", print_hash_value);
    transparent_crc(g_1182.f6, "g_1182.f6", print_hash_value);
    transparent_crc(g_1182.f7, "g_1182.f7", print_hash_value);
    transparent_crc(g_1182.f8, "g_1182.f8", print_hash_value);
    transparent_crc(g_1182.f9, "g_1182.f9", print_hash_value);
    transparent_crc(g_1198, "g_1198", print_hash_value);
    transparent_crc(g_1221.f0, "g_1221.f0", print_hash_value);
    transparent_crc(g_1221.f1, "g_1221.f1", print_hash_value);
    transparent_crc(g_1221.f2, "g_1221.f2", print_hash_value);
    transparent_crc(g_1221.f3, "g_1221.f3", print_hash_value);
    transparent_crc(g_1221.f4, "g_1221.f4", print_hash_value);
    transparent_crc(g_1221.f5, "g_1221.f5", print_hash_value);
    transparent_crc(g_1221.f6, "g_1221.f6", print_hash_value);
    transparent_crc(g_1221.f7, "g_1221.f7", print_hash_value);
    transparent_crc(g_1221.f8, "g_1221.f8", print_hash_value);
    transparent_crc(g_1228.f0, "g_1228.f0", print_hash_value);
    transparent_crc(g_1228.f1, "g_1228.f1", print_hash_value);
    transparent_crc(g_1228.f2, "g_1228.f2", print_hash_value);
    transparent_crc(g_1228.f3, "g_1228.f3", print_hash_value);
    transparent_crc(g_1243.f0, "g_1243.f0", print_hash_value);
    transparent_crc(g_1243.f1, "g_1243.f1", print_hash_value);
    transparent_crc(g_1243.f2, "g_1243.f2", print_hash_value);
    transparent_crc(g_1243.f3, "g_1243.f3", print_hash_value);
    transparent_crc(g_1243.f4, "g_1243.f4", print_hash_value);
    transparent_crc(g_1243.f5, "g_1243.f5", print_hash_value);
    transparent_crc(g_1243.f6, "g_1243.f6", print_hash_value);
    transparent_crc(g_1243.f7, "g_1243.f7", print_hash_value);
    transparent_crc(g_1243.f8, "g_1243.f8", print_hash_value);
    transparent_crc(g_1243.f9, "g_1243.f9", print_hash_value);
    transparent_crc(g_1244.f0, "g_1244.f0", print_hash_value);
    transparent_crc(g_1244.f1, "g_1244.f1", print_hash_value);
    transparent_crc(g_1244.f2, "g_1244.f2", print_hash_value);
    transparent_crc(g_1244.f3, "g_1244.f3", print_hash_value);
    transparent_crc(g_1244.f4, "g_1244.f4", print_hash_value);
    transparent_crc(g_1244.f5, "g_1244.f5", print_hash_value);
    transparent_crc(g_1244.f6, "g_1244.f6", print_hash_value);
    transparent_crc(g_1244.f7, "g_1244.f7", print_hash_value);
    transparent_crc(g_1244.f8, "g_1244.f8", print_hash_value);
    transparent_crc(g_1244.f9, "g_1244.f9", print_hash_value);
    transparent_crc(g_1251, "g_1251", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_1313[i][j].f0, "g_1313[i][j].f0", print_hash_value);
            transparent_crc(g_1313[i][j].f1, "g_1313[i][j].f1", print_hash_value);
            transparent_crc(g_1313[i][j].f2, "g_1313[i][j].f2", print_hash_value);
            transparent_crc(g_1313[i][j].f3, "g_1313[i][j].f3", print_hash_value);
            transparent_crc(g_1313[i][j].f4, "g_1313[i][j].f4", print_hash_value);
            transparent_crc(g_1313[i][j].f5, "g_1313[i][j].f5", print_hash_value);
            transparent_crc(g_1313[i][j].f6, "g_1313[i][j].f6", print_hash_value);
            transparent_crc(g_1313[i][j].f7, "g_1313[i][j].f7", print_hash_value);
            transparent_crc(g_1313[i][j].f8, "g_1313[i][j].f8", print_hash_value);
            transparent_crc(g_1313[i][j].f9, "g_1313[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1341.f0, "g_1341.f0", print_hash_value);
    transparent_crc(g_1341.f1, "g_1341.f1", print_hash_value);
    transparent_crc(g_1341.f2, "g_1341.f2", print_hash_value);
    transparent_crc(g_1341.f3, "g_1341.f3", print_hash_value);
    transparent_crc(g_1341.f4, "g_1341.f4", print_hash_value);
    transparent_crc(g_1341.f5, "g_1341.f5", print_hash_value);
    transparent_crc(g_1341.f6, "g_1341.f6", print_hash_value);
    transparent_crc(g_1341.f7, "g_1341.f7", print_hash_value);
    transparent_crc(g_1341.f8, "g_1341.f8", print_hash_value);
    transparent_crc(g_1341.f9, "g_1341.f9", print_hash_value);
    transparent_crc(g_1369, "g_1369", print_hash_value);
    transparent_crc(g_1373.f0, "g_1373.f0", print_hash_value);
    transparent_crc(g_1373.f1, "g_1373.f1", print_hash_value);
    transparent_crc(g_1373.f2, "g_1373.f2", print_hash_value);
    transparent_crc(g_1373.f3, "g_1373.f3", print_hash_value);
    transparent_crc(g_1373.f4, "g_1373.f4", print_hash_value);
    transparent_crc(g_1373.f5, "g_1373.f5", print_hash_value);
    transparent_crc(g_1373.f6, "g_1373.f6", print_hash_value);
    transparent_crc(g_1373.f7, "g_1373.f7", print_hash_value);
    transparent_crc(g_1373.f8, "g_1373.f8", print_hash_value);
    transparent_crc(g_1388.f0, "g_1388.f0", print_hash_value);
    transparent_crc(g_1388.f1, "g_1388.f1", print_hash_value);
    transparent_crc(g_1388.f2, "g_1388.f2", print_hash_value);
    transparent_crc(g_1388.f3, "g_1388.f3", print_hash_value);
    transparent_crc(g_1388.f4, "g_1388.f4", print_hash_value);
    transparent_crc(g_1388.f5, "g_1388.f5", print_hash_value);
    transparent_crc(g_1388.f6, "g_1388.f6", print_hash_value);
    transparent_crc(g_1388.f7, "g_1388.f7", print_hash_value);
    transparent_crc(g_1388.f8, "g_1388.f8", print_hash_value);
    transparent_crc(g_1388.f9, "g_1388.f9", print_hash_value);
    transparent_crc(g_1389.f0, "g_1389.f0", print_hash_value);
    transparent_crc(g_1389.f1, "g_1389.f1", print_hash_value);
    transparent_crc(g_1389.f2, "g_1389.f2", print_hash_value);
    transparent_crc(g_1389.f3, "g_1389.f3", print_hash_value);
    transparent_crc(g_1389.f4, "g_1389.f4", print_hash_value);
    transparent_crc(g_1389.f5, "g_1389.f5", print_hash_value);
    transparent_crc(g_1389.f6, "g_1389.f6", print_hash_value);
    transparent_crc(g_1389.f7, "g_1389.f7", print_hash_value);
    transparent_crc(g_1389.f8, "g_1389.f8", print_hash_value);
    transparent_crc(g_1389.f9, "g_1389.f9", print_hash_value);
    transparent_crc(g_1398.f0, "g_1398.f0", print_hash_value);
    transparent_crc(g_1398.f1, "g_1398.f1", print_hash_value);
    transparent_crc(g_1398.f2, "g_1398.f2", print_hash_value);
    transparent_crc(g_1398.f3, "g_1398.f3", print_hash_value);
    transparent_crc(g_1399.f0, "g_1399.f0", print_hash_value);
    transparent_crc(g_1399.f1, "g_1399.f1", print_hash_value);
    transparent_crc(g_1399.f2, "g_1399.f2", print_hash_value);
    transparent_crc(g_1399.f3, "g_1399.f3", print_hash_value);
    transparent_crc(g_1399.f4, "g_1399.f4", print_hash_value);
    transparent_crc(g_1399.f5, "g_1399.f5", print_hash_value);
    transparent_crc(g_1399.f6, "g_1399.f6", print_hash_value);
    transparent_crc(g_1399.f7, "g_1399.f7", print_hash_value);
    transparent_crc(g_1399.f8, "g_1399.f8", print_hash_value);
    transparent_crc(g_1399.f9, "g_1399.f9", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 6; j++)
        {
            transparent_crc(g_1408[i][j].f0, "g_1408[i][j].f0", print_hash_value);
            transparent_crc(g_1408[i][j].f1, "g_1408[i][j].f1", print_hash_value);
            transparent_crc(g_1408[i][j].f2, "g_1408[i][j].f2", print_hash_value);
            transparent_crc(g_1408[i][j].f3, "g_1408[i][j].f3", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1463, "g_1463", print_hash_value);
    transparent_crc(g_1477.f0, "g_1477.f0", print_hash_value);
    transparent_crc(g_1477.f1, "g_1477.f1", print_hash_value);
    transparent_crc(g_1477.f2, "g_1477.f2", print_hash_value);
    transparent_crc(g_1477.f3, "g_1477.f3", print_hash_value);
    transparent_crc(g_1477.f4, "g_1477.f4", print_hash_value);
    transparent_crc(g_1477.f5, "g_1477.f5", print_hash_value);
    transparent_crc(g_1477.f6, "g_1477.f6", print_hash_value);
    transparent_crc(g_1477.f7, "g_1477.f7", print_hash_value);
    transparent_crc(g_1477.f8, "g_1477.f8", print_hash_value);
    transparent_crc(g_1477.f9, "g_1477.f9", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 3; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(g_1485[i][j][k].f0, "g_1485[i][j][k].f0", print_hash_value);
                transparent_crc(g_1485[i][j][k].f1, "g_1485[i][j][k].f1", print_hash_value);
                transparent_crc(g_1485[i][j][k].f2, "g_1485[i][j][k].f2", print_hash_value);
                transparent_crc(g_1485[i][j][k].f3, "g_1485[i][j][k].f3", print_hash_value);
                transparent_crc(g_1485[i][j][k].f4, "g_1485[i][j][k].f4", print_hash_value);
                transparent_crc(g_1485[i][j][k].f5, "g_1485[i][j][k].f5", print_hash_value);
                transparent_crc(g_1485[i][j][k].f6, "g_1485[i][j][k].f6", print_hash_value);
                transparent_crc(g_1485[i][j][k].f7, "g_1485[i][j][k].f7", print_hash_value);
                transparent_crc(g_1485[i][j][k].f8, "g_1485[i][j][k].f8", print_hash_value);
                transparent_crc(g_1485[i][j][k].f9, "g_1485[i][j][k].f9", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1556, "g_1556", print_hash_value);
    transparent_crc(g_1601.f0, "g_1601.f0", print_hash_value);
    transparent_crc(g_1601.f1, "g_1601.f1", print_hash_value);
    transparent_crc(g_1601.f2, "g_1601.f2", print_hash_value);
    transparent_crc(g_1601.f3, "g_1601.f3", print_hash_value);
    transparent_crc(g_1601.f4, "g_1601.f4", print_hash_value);
    transparent_crc(g_1601.f5, "g_1601.f5", print_hash_value);
    transparent_crc(g_1601.f6, "g_1601.f6", print_hash_value);
    transparent_crc(g_1601.f7, "g_1601.f7", print_hash_value);
    transparent_crc(g_1601.f8, "g_1601.f8", print_hash_value);
    transparent_crc(g_1626, "g_1626", print_hash_value);
    transparent_crc(g_1653, "g_1653", print_hash_value);
    transparent_crc(g_1696.f0, "g_1696.f0", print_hash_value);
    transparent_crc(g_1696.f1, "g_1696.f1", print_hash_value);
    transparent_crc(g_1696.f2, "g_1696.f2", print_hash_value);
    transparent_crc(g_1696.f3, "g_1696.f3", print_hash_value);
    transparent_crc(g_1696.f4, "g_1696.f4", print_hash_value);
    transparent_crc(g_1696.f5, "g_1696.f5", print_hash_value);
    transparent_crc(g_1696.f6, "g_1696.f6", print_hash_value);
    transparent_crc(g_1696.f7, "g_1696.f7", print_hash_value);
    transparent_crc(g_1696.f8, "g_1696.f8", print_hash_value);
    transparent_crc(g_1696.f9, "g_1696.f9", print_hash_value);
    transparent_crc(g_1768, "g_1768", print_hash_value);
    transparent_crc(g_1775.f0, "g_1775.f0", print_hash_value);
    transparent_crc(g_1775.f1, "g_1775.f1", print_hash_value);
    transparent_crc(g_1775.f2, "g_1775.f2", print_hash_value);
    transparent_crc(g_1775.f3, "g_1775.f3", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(g_1827[i], "g_1827[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1836.f0, "g_1836.f0", print_hash_value);
    transparent_crc(g_1836.f1, "g_1836.f1", print_hash_value);
    transparent_crc(g_1836.f2, "g_1836.f2", print_hash_value);
    transparent_crc(g_1836.f3, "g_1836.f3", print_hash_value);
    transparent_crc(g_1836.f4, "g_1836.f4", print_hash_value);
    transparent_crc(g_1836.f5, "g_1836.f5", print_hash_value);
    transparent_crc(g_1836.f6, "g_1836.f6", print_hash_value);
    transparent_crc(g_1836.f7, "g_1836.f7", print_hash_value);
    transparent_crc(g_1836.f8, "g_1836.f8", print_hash_value);
    transparent_crc(g_1836.f9, "g_1836.f9", print_hash_value);
    transparent_crc(g_1839.f0, "g_1839.f0", print_hash_value);
    transparent_crc(g_1839.f1, "g_1839.f1", print_hash_value);
    transparent_crc(g_1839.f2, "g_1839.f2", print_hash_value);
    transparent_crc(g_1839.f3, "g_1839.f3", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_1864[i].f0, "g_1864[i].f0", print_hash_value);
        transparent_crc(g_1864[i].f1, "g_1864[i].f1", print_hash_value);
        transparent_crc(g_1864[i].f2, "g_1864[i].f2", print_hash_value);
        transparent_crc(g_1864[i].f3, "g_1864[i].f3", print_hash_value);
        transparent_crc(g_1864[i].f4, "g_1864[i].f4", print_hash_value);
        transparent_crc(g_1864[i].f5, "g_1864[i].f5", print_hash_value);
        transparent_crc(g_1864[i].f6, "g_1864[i].f6", print_hash_value);
        transparent_crc(g_1864[i].f7, "g_1864[i].f7", print_hash_value);
        transparent_crc(g_1864[i].f8, "g_1864[i].f8", print_hash_value);
        transparent_crc(g_1864[i].f9, "g_1864[i].f9", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 8; j++)
        {
            transparent_crc(g_1944[i][j].f0, "g_1944[i][j].f0", print_hash_value);
            transparent_crc(g_1944[i][j].f1, "g_1944[i][j].f1", print_hash_value);
            transparent_crc(g_1944[i][j].f2, "g_1944[i][j].f2", print_hash_value);
            transparent_crc(g_1944[i][j].f3, "g_1944[i][j].f3", print_hash_value);
            transparent_crc(g_1944[i][j].f4, "g_1944[i][j].f4", print_hash_value);
            transparent_crc(g_1944[i][j].f5, "g_1944[i][j].f5", print_hash_value);
            transparent_crc(g_1944[i][j].f6, "g_1944[i][j].f6", print_hash_value);
            transparent_crc(g_1944[i][j].f7, "g_1944[i][j].f7", print_hash_value);
            transparent_crc(g_1944[i][j].f8, "g_1944[i][j].f8", print_hash_value);
            transparent_crc(g_1944[i][j].f9, "g_1944[i][j].f9", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 4; j++)
        {
            for (k = 0; k < 8; k++)
            {
                transparent_crc(g_1946[i][j][k].f0, "g_1946[i][j][k].f0", print_hash_value);
                transparent_crc(g_1946[i][j][k].f1, "g_1946[i][j][k].f1", print_hash_value);
                transparent_crc(g_1946[i][j][k].f2, "g_1946[i][j][k].f2", print_hash_value);
                transparent_crc(g_1946[i][j][k].f3, "g_1946[i][j][k].f3", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1966.f0, "g_1966.f0", print_hash_value);
    transparent_crc(g_1966.f1, "g_1966.f1", print_hash_value);
    transparent_crc(g_1966.f2, "g_1966.f2", print_hash_value);
    transparent_crc(g_1966.f3, "g_1966.f3", print_hash_value);
    transparent_crc(g_1966.f4, "g_1966.f4", print_hash_value);
    transparent_crc(g_1966.f5, "g_1966.f5", print_hash_value);
    transparent_crc(g_1966.f6, "g_1966.f6", print_hash_value);
    transparent_crc(g_1966.f7, "g_1966.f7", print_hash_value);
    transparent_crc(g_1966.f8, "g_1966.f8", print_hash_value);
    transparent_crc(g_1966.f9, "g_1966.f9", print_hash_value);
    transparent_crc(g_1980.f0, "g_1980.f0", print_hash_value);
    transparent_crc(g_1980.f1, "g_1980.f1", print_hash_value);
    transparent_crc(g_1980.f2, "g_1980.f2", print_hash_value);
    transparent_crc(g_1980.f3, "g_1980.f3", print_hash_value);
    transparent_crc(g_1980.f4, "g_1980.f4", print_hash_value);
    transparent_crc(g_1980.f5, "g_1980.f5", print_hash_value);
    transparent_crc(g_1980.f6, "g_1980.f6", print_hash_value);
    transparent_crc(g_1980.f7, "g_1980.f7", print_hash_value);
    transparent_crc(g_1980.f8, "g_1980.f8", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_2033[i].f0, "g_2033[i].f0", print_hash_value);
        transparent_crc(g_2033[i].f1, "g_2033[i].f1", print_hash_value);
        transparent_crc(g_2033[i].f2, "g_2033[i].f2", print_hash_value);
        transparent_crc(g_2033[i].f3, "g_2033[i].f3", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_2089.f0, "g_2089.f0", print_hash_value);
    transparent_crc(g_2089.f1, "g_2089.f1", print_hash_value);
    transparent_crc(g_2089.f2, "g_2089.f2", print_hash_value);
    transparent_crc(g_2089.f3, "g_2089.f3", print_hash_value);
    transparent_crc(g_2089.f4, "g_2089.f4", print_hash_value);
    transparent_crc(g_2089.f5, "g_2089.f5", print_hash_value);
    transparent_crc(g_2089.f6, "g_2089.f6", print_hash_value);
    transparent_crc(g_2089.f7, "g_2089.f7", print_hash_value);
    transparent_crc(g_2089.f8, "g_2089.f8", print_hash_value);
    transparent_crc(g_2089.f9, "g_2089.f9", print_hash_value);
    transparent_crc(g_2090.f0, "g_2090.f0", print_hash_value);
    transparent_crc(g_2090.f1, "g_2090.f1", print_hash_value);
    transparent_crc(g_2090.f2, "g_2090.f2", print_hash_value);
    transparent_crc(g_2090.f3, "g_2090.f3", print_hash_value);
    transparent_crc(g_2090.f4, "g_2090.f4", print_hash_value);
    transparent_crc(g_2090.f5, "g_2090.f5", print_hash_value);
    transparent_crc(g_2090.f6, "g_2090.f6", print_hash_value);
    transparent_crc(g_2090.f7, "g_2090.f7", print_hash_value);
    transparent_crc(g_2090.f8, "g_2090.f8", print_hash_value);
    transparent_crc(g_2090.f9, "g_2090.f9", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 547
   depth: 1, occurrence: 59
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 18
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 1
XXX volatile bitfields defined in structs: 9
XXX structs with bitfields in the program: 105
breakdown:
   indirect level: 0, occurrence: 59
   indirect level: 1, occurrence: 19
   indirect level: 2, occurrence: 9
   indirect level: 3, occurrence: 9
   indirect level: 4, occurrence: 6
   indirect level: 5, occurrence: 3
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 70
XXX times a bitfields struct on LHS: 3
XXX times a bitfields struct on RHS: 65
XXX times a single bitfield on LHS: 2
XXX times a single bitfield on RHS: 98

XXX max expression depth: 45
breakdown:
   depth: 1, occurrence: 213
   depth: 2, occurrence: 42
   depth: 3, occurrence: 4
   depth: 4, occurrence: 4
   depth: 7, occurrence: 1
   depth: 14, occurrence: 1
   depth: 15, occurrence: 1
   depth: 17, occurrence: 1
   depth: 18, occurrence: 3
   depth: 19, occurrence: 2
   depth: 20, occurrence: 2
   depth: 21, occurrence: 1
   depth: 23, occurrence: 3
   depth: 24, occurrence: 3
   depth: 25, occurrence: 3
   depth: 26, occurrence: 3
   depth: 29, occurrence: 2
   depth: 31, occurrence: 1
   depth: 33, occurrence: 1
   depth: 34, occurrence: 2
   depth: 35, occurrence: 1
   depth: 39, occurrence: 1
   depth: 40, occurrence: 1
   depth: 45, occurrence: 1

XXX total number of pointers: 443

XXX times a variable address is taken: 971
XXX times a pointer is dereferenced on RHS: 209
breakdown:
   depth: 1, occurrence: 155
   depth: 2, occurrence: 46
   depth: 3, occurrence: 7
   depth: 4, occurrence: 1
XXX times a pointer is dereferenced on LHS: 279
breakdown:
   depth: 1, occurrence: 245
   depth: 2, occurrence: 28
   depth: 3, occurrence: 6
XXX times a pointer is compared with null: 41
XXX times a pointer is compared with address of another variable: 10
XXX times a pointer is compared with another pointer: 10
XXX times a pointer is qualified to be dereferenced: 7971

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 1353
   level: 2, occurrence: 378
   level: 3, occurrence: 69
   level: 4, occurrence: 26
   level: 5, occurrence: 4
XXX number of pointers point to pointers: 200
XXX number of pointers point to scalars: 213
XXX number of pointers point to structs: 30
XXX percent of pointers has null in alias set: 25.7
XXX average alias set size: 1.45

XXX times a non-volatile is read: 1503
XXX times a non-volatile is write: 835
XXX times a volatile is read: 137
XXX    times read thru a pointer: 23
XXX times a volatile is write: 45
XXX    times written thru a pointer: 30
XXX times a volatile is available for access: 6.44e+03
XXX percentage of non-volatile access: 92.8

XXX forward jumps: 1
XXX backward jumps: 6

XXX stmts: 192
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 31
   depth: 1, occurrence: 22
   depth: 2, occurrence: 25
   depth: 3, occurrence: 28
   depth: 4, occurrence: 30
   depth: 5, occurrence: 56

XXX percentage a fresh-made variable is used: 18.5
XXX percentage an existing variable is used: 81.5
FYI: the random generator makes assumptions about the integer size. See platform.info for more details.
********************* end of statistics **********************/

